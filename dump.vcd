$date
	Wed Aug 13 20:44:48 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module unified_buffer $end
$var reg 16 ! \ub_memory[0] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 " \ub_memory[1] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 # \ub_memory[2] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 $ \ub_memory[3] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 % \ub_memory[4] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 & \ub_memory[5] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 ' \ub_memory[6] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 ( \ub_memory[7] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 ) \ub_memory[8] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 * \ub_memory[9] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 + \ub_memory[10] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 , \ub_memory[11] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 - \ub_memory[12] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 . \ub_memory[13] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 / \ub_memory[14] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 0 \ub_memory[15] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 1 \ub_memory[16] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 2 \ub_memory[17] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 3 \ub_memory[18] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 4 \ub_memory[19] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 5 \ub_memory[20] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 6 \ub_memory[21] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 7 \ub_memory[22] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 8 \ub_memory[23] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 9 \ub_memory[24] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 : \ub_memory[25] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 ; \ub_memory[26] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 < \ub_memory[27] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 = \ub_memory[28] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 > \ub_memory[29] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 ? \ub_memory[30] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 @ \ub_memory[31] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 A \ub_memory[32] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 B \ub_memory[33] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 C \ub_memory[34] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 D \ub_memory[35] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 E \ub_memory[36] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 F \ub_memory[37] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 G \ub_memory[38] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 H \ub_memory[39] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 I \ub_memory[40] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 J \ub_memory[41] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 K \ub_memory[42] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 L \ub_memory[43] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 M \ub_memory[44] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 N \ub_memory[45] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 O \ub_memory[46] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 P \ub_memory[47] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 Q \ub_memory[48] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 R \ub_memory[49] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 S \ub_memory[50] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 T \ub_memory[51] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 U \ub_memory[52] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 V \ub_memory[53] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 W \ub_memory[54] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 X \ub_memory[55] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 Y \ub_memory[56] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 Z \ub_memory[57] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 [ \ub_memory[58] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 \ \ub_memory[59] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 ] \ub_memory[60] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 ^ \ub_memory[61] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 _ \ub_memory[62] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 ` \ub_memory[63] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 a \ub_memory[64] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 b \ub_memory[65] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 c \ub_memory[66] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 d \ub_memory[67] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 e \ub_memory[68] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 f \ub_memory[69] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 g \ub_memory[70] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 h \ub_memory[71] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 i \ub_memory[72] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 j \ub_memory[73] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 k \ub_memory[74] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 l \ub_memory[75] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 m \ub_memory[76] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 n \ub_memory[77] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 o \ub_memory[78] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 p \ub_memory[79] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 q \ub_memory[80] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 r \ub_memory[81] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 s \ub_memory[82] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 t \ub_memory[83] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 u \ub_memory[84] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 v \ub_memory[85] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 w \ub_memory[86] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 x \ub_memory[87] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 y \ub_memory[88] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 z \ub_memory[89] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 { \ub_memory[90] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 | \ub_memory[91] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 } \ub_memory[92] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 ~ \ub_memory[93] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 !" \ub_memory[94] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 "" \ub_memory[95] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 #" \ub_memory[96] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 $" \ub_memory[97] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 %" \ub_memory[98] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 &" \ub_memory[99] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 '" \ub_memory[100] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 (" \ub_memory[101] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 )" \ub_memory[102] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 *" \ub_memory[103] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 +" \ub_memory[104] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 ," \ub_memory[105] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 -" \ub_memory[106] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 ." \ub_memory[107] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 /" \ub_memory[108] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 0" \ub_memory[109] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 1" \ub_memory[110] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 2" \ub_memory[111] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 3" \ub_memory[112] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 4" \ub_memory[113] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 5" \ub_memory[114] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 6" \ub_memory[115] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 7" \ub_memory[116] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 8" \ub_memory[117] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 9" \ub_memory[118] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 :" \ub_memory[119] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 ;" \ub_memory[120] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 <" \ub_memory[121] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 =" \ub_memory[122] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 >" \ub_memory[123] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 ?" \ub_memory[124] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 @" \ub_memory[125] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 A" \ub_memory[126] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 B" \ub_memory[127] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 C" \ub_wr_data_in[0] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 1 D" \ub_wr_valid_in[0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 E" \ub_rd_input_data_out[0] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 1 F" \ub_rd_input_valid_out[0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 G" \ub_wr_data_in[1] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 1 H" \ub_wr_valid_in[1] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 I" \ub_rd_input_data_out[1] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 1 J" \ub_rd_input_valid_out[1] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 K" \ub_wr_data_in[2] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 1 L" \ub_wr_valid_in[2] $end
$upscope $end
$scope module unified_buffer $end
$var reg 16 M" \ub_rd_input_data_out[2] [15:0] $end
$upscope $end
$scope module unified_buffer $end
$var reg 1 N" \ub_rd_input_valid_out[2] $end
$upscope $end
$scope module unified_buffer $end
$var wire 1 O" clk $end
$var wire 1 P" rst $end
$var wire 9 Q" ub_ptr_select [8:0] $end
$var wire 16 R" ub_rd_addr_in [15:0] $end
$var wire 16 S" ub_rd_col_size [15:0] $end
$var wire 16 T" ub_rd_row_size [15:0] $end
$var wire 1 U" ub_rd_start_in $end
$var wire 1 V" ub_rd_transpose $end
$var wire 16 W" ub_wr_host_data_in_1 [15:0] $end
$var wire 16 X" ub_wr_host_data_in_2 [15:0] $end
$var wire 1 Y" ub_wr_host_valid_in_1 $end
$var wire 1 Z" ub_wr_host_valid_in_2 $end
$var parameter 32 [" SYSTOLIC_ARRAY_WIDTH $end
$var parameter 32 \" UNIFIED_BUFFER_WIDTH $end
$var reg 16 ]" rd_input_addr_in [15:0] $end
$var reg 16 ^" rd_input_col_size [15:0] $end
$var reg 16 _" rd_input_ptr [15:0] $end
$var reg 16 `" rd_input_row_size [15:0] $end
$var reg 16 a" rd_input_time_counter [15:0] $end
$var reg 1 b" rd_input_transpose $end
$var reg 16 c" ub_rd_H_data_out_1 [15:0] $end
$var reg 16 d" ub_rd_H_data_out_2 [15:0] $end
$var reg 16 e" ub_rd_Y_data_out_1 [15:0] $end
$var reg 16 f" ub_rd_Y_data_out_2 [15:0] $end
$var reg 16 g" ub_rd_bias_data_out_1 [15:0] $end
$var reg 16 h" ub_rd_bias_data_out_2 [15:0] $end
$var reg 16 i" ub_rd_weight_data_out_1 [15:0] $end
$var reg 16 j" ub_rd_weight_data_out_2 [15:0] $end
$var reg 16 k" wr_ptr [15:0] $end
$scope begin $ivl_for_loop10 $end
$var integer 32 l" i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop3 $end
$var integer 32 m" i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop4 $end
$var integer 32 n" i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop5 $end
$var integer 32 o" i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop6 $end
$var integer 32 p" i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop7 $end
$var integer 32 q" i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop8 $end
$var integer 32 r" i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop9 $end
$var integer 32 s" i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10000000 \"
b11 ["
$end
#0
$dumpvars
b10000000 s"
b0 r"
b0 q"
b0 p"
b0 o"
b11 n"
b10000000 m"
b11 l"
b0 k"
b0 j"
b0 i"
b0 h"
b0 g"
b0 f"
b0 e"
b0 d"
b0 c"
xb"
b0 a"
b0 `"
b0 _"
b0 ^"
bx ]"
zZ"
zY"
bz X"
bz W"
zV"
zU"
bz T"
bz S"
bz R"
bz Q"
0P"
1O"
0N"
b0 M"
zL"
bz K"
0J"
b0 I"
zH"
bz G"
0F"
b0 E"
zD"
bz C"
b0 B"
b0 A"
b0 @"
b0 ?"
b0 >"
b0 ="
b0 <"
b0 ;"
b0 :"
b0 9"
b0 8"
b0 7"
b0 6"
b0 5"
b0 4"
b0 3"
b0 2"
b0 1"
b0 0"
b0 /"
b0 ."
b0 -"
b0 ,"
b0 +"
b0 *"
b0 )"
b0 ("
b0 '"
b0 &"
b0 %"
b0 $"
b0 #"
b0 ""
b0 !"
b0 ~
b0 }
b0 |
b0 {
b0 z
b0 y
b0 x
b0 w
b0 v
b0 u
b0 t
b0 s
b0 r
b0 q
b0 p
b0 o
b0 n
b0 m
b0 l
b0 k
b0 j
b0 i
b0 h
b0 g
b0 f
b0 e
b0 d
b0 c
b0 b
b0 a
b0 `
b0 _
b0 ^
b0 ]
b0 \
b0 [
b0 Z
b0 Y
b0 X
b0 W
b0 V
b0 U
b0 T
b0 S
b0 R
b0 Q
b0 P
b0 O
b0 N
b0 M
b0 L
b0 K
b0 J
b0 I
b0 H
b0 G
b0 F
b0 E
b0 D
b0 C
b0 B
b0 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#5000
0O"
#10000
0H"
b0 G"
1D"
b11010 C"
0N"
0J"
0F"
b0 ]"
b11 r"
b11111111111111111111111111111111 o"
1O"
#15000
0O"
#20000
1H"
b110011 G"
b1001101 C"
0N"
0J"
0F"
b11010 !
b11 r"
b1 k"
b11111111111111111111111111111111 o"
1O"
#25000
0O"
#30000
b1100110 G"
b10000000 C"
0N"
0J"
0F"
b1001101 #
b110011 "
b11 r"
b11 k"
b11111111111111111111111111111111 o"
1O"
#35000
0O"
#40000
b10011010 G"
0D"
b0 C"
0N"
0J"
0F"
b10000000 %
b1100110 $
b11 r"
b101 k"
b11111111111111111111111111111111 o"
1O"
#45000
0O"
#50000
0H"
b0 G"
0N"
0J"
0F"
b10011010 &
b11 r"
b110 k"
b11111111111111111111111111111111 o"
1O"
#55000
0O"
#60000
0b"
b10 ^"
b11 `"
0V"
b10 S"
b11 T"
b0 R"
b0 Q"
1U"
0N"
0J"
0F"
b11 r"
b11111111111111111111111111111111 o"
1O"
#65000
0O"
#70000
b0 S"
b0 T"
0U"
b1 a"
b11010 E"
1F"
b0 I"
0J"
b0 M"
0N"
b1 _"
b11111111111111111111111111111111 q"
b11111111111111111111111111111111 o"
1O"
#75000
0O"
#80000
b10 a"
b1001101 E"
1F"
b110011 I"
1J"
b0 M"
0N"
b11 _"
b11111111111111111111111111111111 q"
b11111111111111111111111111111111 o"
1O"
#85000
0O"
#90000
b11 a"
b10000000 E"
1F"
b1100110 I"
1J"
b0 M"
0N"
b101 _"
b11111111111111111111111111111111 q"
b11111111111111111111111111111111 o"
1O"
#95000
0O"
#100000
b100 a"
b0 E"
0F"
b10011010 I"
1J"
b0 M"
0N"
b110 _"
b11111111111111111111111111111111 q"
b11111111111111111111111111111111 o"
1O"
#105000
0O"
#110000
0N"
0J"
0F"
b0 a"
b0 ^"
b0 `"
b0 _"
b11 r"
b11111111111111111111111111111111 o"
1O"
#115000
0O"
#120000
0N"
0J"
0F"
b11 r"
b11111111111111111111111111111111 o"
1O"
#125000
0O"
#130000
0N"
0J"
0F"
b11 r"
b11111111111111111111111111111111 o"
1O"
#135000
0O"
#140000
0N"
0J"
0F"
b11 r"
b11111111111111111111111111111111 o"
1O"
#145000
0O"
#150000
0N"
0J"
0F"
b11 r"
b11111111111111111111111111111111 o"
1O"
#155000
0O"
#160000
0N"
0J"
0F"
b11 r"
b11111111111111111111111111111111 o"
1O"
#165000
0O"
#170000
0N"
0J"
0F"
b11 r"
b11111111111111111111111111111111 o"
1O"
#175000
0O"
#180000
0N"
0J"
0F"
b11 r"
b11111111111111111111111111111111 o"
1O"
#180001
