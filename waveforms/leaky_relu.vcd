$date
	Mon May 19 21:00:36 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module leaky_relu $end
$var wire 1 ! clk $end
$var wire 16 " input_in [15:0] $end
$var wire 16 # leak_factor [15:0] $end
$var wire 1 $ rst $end
$var wire 16 % mul_out [15:0] $end
$var reg 16 & out [15:0] $end
$scope module mul_inst $end
$var wire 16 ' ina [15:0] $end
$var wire 16 ( inb [15:0] $end
$var wire 32 ) res [31:0] $end
$var wire 1 * overflow $end
$var wire 16 + out [15:0] $end
$var parameter 32 , ROUND $end
$var parameter 32 - WIFA $end
$var parameter 32 . WIFB $end
$var parameter 32 / WIIA $end
$var parameter 32 0 WIIB $end
$var parameter 32 1 WOF $end
$var parameter 32 2 WOI $end
$var parameter 33 3 WRF $end
$var parameter 33 4 WRI $end
$scope module res_zoom $end
$var wire 32 5 in [31:0] $end
$var wire 16 6 out [15:0] $end
$var parameter 32 7 ROUND $end
$var parameter 33 8 WIF $end
$var parameter 33 9 WII $end
$var parameter 32 : WOF $end
$var parameter 32 ; WOI $end
$var reg 16 < ini [15:0] $end
$var reg 24 = inr [23:0] $end
$var reg 8 > outf [7:0] $end
$var reg 8 ? outi [7:0] $end
$var reg 1 * overflow $end
$scope begin genblk1 $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1000 ;
b1000 :
b10000 9
b10000 8
b1 7
b10000 4
b10000 3
b1000 2
b1000 1
b1000 0
b1000 /
b1000 .
b1000 -
b1 ,
$end
#0
$dumpvars
b0 ?
b0 >
b0 =
b0 <
b0 6
bx 5
b0 +
0*
bx )
bz (
bz '
b0 &
b0 %
0$
bz #
bz "
1!
$end
#5000
0!
#10000
b1000001 %
b1000001 +
b1000001 6
b1000001 >
b1000001 =
b100000100000000 )
b100000100000000 5
b11010 #
b11010 (
b1010000000 "
b1010000000 '
1!
#15000
0!
#20000
b1010000000 &
1!
#25000
0!
#30000
b11111111 ?
b1111111111111111 <
b1111111100110100 %
b1111111100110100 +
b1111111100110100 6
b110100 >
b111111111111111100110100 =
b110011 #
b110011 (
b11111111111111110011010000000000 )
b11111111111111110011010000000000 5
b1111110000000000 "
b1111110000000000 '
1!
#35000
0!
#40000
b1111111100110100 &
1!
#45000
0!
#50000
b0 ?
b0 <
b0 %
b0 +
b0 6
b0 >
b0 =
b10000000 #
b10000000 (
b0 )
b0 5
b0 "
b0 '
1!
#55000
0!
#60000
b0 &
1!
#65000
0!
#70000
1!
#70001
