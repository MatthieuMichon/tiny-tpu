$date
	Tue May 20 16:26:55 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module layer1 $end
$var wire 1 ! clk $end
$var wire 16 " in_bias_21 [15:0] $end
$var wire 16 # in_bias_22 [15:0] $end
$var wire 16 $ input_11 [15:0] $end
$var wire 16 % input_21 [15:0] $end
$var wire 16 & leak_factor [15:0] $end
$var wire 1 ' load_weights $end
$var wire 1 ( rst $end
$var wire 1 ) start $end
$var wire 16 * weight_11 [15:0] $end
$var wire 16 + weight_12 [15:0] $end
$var wire 16 , weight_21 [15:0] $end
$var wire 16 - weight_22 [15:0] $end
$var wire 1 . valid_out_22 $end
$var wire 1 / valid_out_21 $end
$var wire 16 0 out_22_bias [15:0] $end
$var wire 16 1 out_22 [15:0] $end
$var wire 16 2 out_21_bias [15:0] $end
$var wire 16 3 out_21 [15:0] $end
$var wire 16 4 out2 [15:0] $end
$var wire 16 5 out1 [15:0] $end
$var wire 1 6 lr_valid_out_22 $end
$var wire 1 7 lr_valid_out_21 $end
$var wire 1 8 bias_valid_out_22 $end
$var wire 1 9 bias_valid_out_21 $end
$scope module bias_21 $end
$var wire 16 : bias_in [15:0] $end
$var wire 1 ! clk $end
$var wire 1 ( rst $end
$var wire 16 ; input_in [15:0] $end
$var wire 1 / bias_valid_in $end
$var reg 1 9 bias_valid_out $end
$var reg 16 < output_out [15:0] $end
$upscope $end
$scope module bias_22 $end
$var wire 16 = bias_in [15:0] $end
$var wire 1 ! clk $end
$var wire 1 ( rst $end
$var wire 16 > input_in [15:0] $end
$var wire 1 . bias_valid_in $end
$var reg 1 8 bias_valid_out $end
$var reg 16 ? output_out [15:0] $end
$upscope $end
$scope module leaky_relu_21 $end
$var wire 1 ! clk $end
$var wire 16 @ input_in [15:0] $end
$var wire 16 A leak_factor [15:0] $end
$var wire 1 9 lr_valid_in $end
$var wire 1 ( rst $end
$var wire 16 B mul_out [15:0] $end
$var reg 1 7 lr_valid_out $end
$var reg 16 C out [15:0] $end
$scope module mul_inst $end
$var wire 16 D ina [15:0] $end
$var wire 16 E inb [15:0] $end
$var wire 32 F res [31:0] $end
$var wire 1 G overflow $end
$var wire 16 H out [15:0] $end
$scope module res_zoom $end
$var wire 32 I in [31:0] $end
$var wire 16 J out [15:0] $end
$var reg 16 K ini [15:0] $end
$var reg 24 L inr [23:0] $end
$var reg 8 M outf [7:0] $end
$var reg 8 N outi [7:0] $end
$var reg 1 G overflow $end
$scope begin genblk4 $end
$upscope $end
$scope begin genblk9 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module leaky_relu_22 $end
$var wire 1 ! clk $end
$var wire 16 O input_in [15:0] $end
$var wire 16 P leak_factor [15:0] $end
$var wire 1 8 lr_valid_in $end
$var wire 1 ( rst $end
$var wire 16 Q mul_out [15:0] $end
$var reg 1 6 lr_valid_out $end
$var reg 16 R out [15:0] $end
$scope module mul_inst $end
$var wire 16 S ina [15:0] $end
$var wire 16 T inb [15:0] $end
$var wire 32 U res [31:0] $end
$var wire 1 V overflow $end
$var wire 16 W out [15:0] $end
$scope module res_zoom $end
$var wire 32 X in [31:0] $end
$var wire 16 Y out [15:0] $end
$var reg 16 Z ini [15:0] $end
$var reg 24 [ inr [23:0] $end
$var reg 8 \ outf [7:0] $end
$var reg 8 ] outi [7:0] $end
$var reg 1 V overflow $end
$scope begin genblk4 $end
$upscope $end
$scope begin genblk9 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module systolic_inst $end
$var wire 1 ! clk $end
$var wire 16 ^ input_11 [15:0] $end
$var wire 16 _ input_21 [15:0] $end
$var wire 1 ' load_weights $end
$var wire 1 ( rst $end
$var wire 1 ) start $end
$var wire 1 / valid_out_21 $end
$var wire 1 . valid_out_22 $end
$var wire 16 ` weight_11 [15:0] $end
$var wire 16 a weight_12 [15:0] $end
$var wire 16 b weight_21 [15:0] $end
$var wire 16 c weight_22 [15:0] $end
$var wire 16 d zero_wire_inputs [15:0] $end
$var wire 16 e zero_wire_outputs [15:0] $end
$var wire 16 f psum_12 [15:0] $end
$var wire 16 g psum_11 [15:0] $end
$var wire 1 h pe_valid_out_22 $end
$var wire 1 i pe_valid_out_21 $end
$var wire 1 j pe_valid_out_12 $end
$var wire 1 k pe_valid_out_11 $end
$var wire 16 l out_22 [15:0] $end
$var wire 16 m out_21 [15:0] $end
$var wire 16 n input_21_out [15:0] $end
$var wire 16 o input_11_out [15:0] $end
$scope module pe11 $end
$var wire 1 ! clk $end
$var wire 16 p input_in [15:0] $end
$var wire 1 ' load_weight $end
$var wire 1 ) pe_valid_in $end
$var wire 16 q psum_in [15:0] $end
$var wire 1 ( rst $end
$var wire 16 r weight [15:0] $end
$var wire 16 s psum_reg [15:0] $end
$var wire 16 t mult_out [15:0] $end
$var reg 16 u input_out [15:0] $end
$var reg 1 k pe_valid_out $end
$var reg 16 v psum_out [15:0] $end
$var reg 16 w weight_reg [15:0] $end
$scope module adder $end
$var wire 16 x inb [15:0] $end
$var wire 17 y res [16:0] $end
$var wire 1 z overflow $end
$var wire 16 { out [15:0] $end
$var wire 16 | inbz [15:0] $end
$var wire 16 } inaz [15:0] $end
$var wire 16 ~ ina [15:0] $end
$scope module ina_zoom $end
$var wire 16 !" out [15:0] $end
$var wire 16 "" in [15:0] $end
$var reg 8 #" ini [7:0] $end
$var reg 16 $" inr [15:0] $end
$var reg 8 %" outf [7:0] $end
$var reg 8 &" outi [7:0] $end
$var reg 1 '" overflow $end
$scope begin genblk10 $end
$upscope $end
$scope begin genblk7 $end
$upscope $end
$upscope $end
$scope module inb_zoom $end
$var wire 16 (" in [15:0] $end
$var wire 16 )" out [15:0] $end
$var reg 8 *" ini [7:0] $end
$var reg 16 +" inr [15:0] $end
$var reg 8 ," outf [7:0] $end
$var reg 8 -" outi [7:0] $end
$var reg 1 ." overflow $end
$scope begin genblk10 $end
$upscope $end
$scope begin genblk7 $end
$upscope $end
$upscope $end
$scope module res_zoom $end
$var wire 17 /" in [16:0] $end
$var wire 16 0" out [15:0] $end
$var reg 9 1" ini [8:0] $end
$var reg 17 2" inr [16:0] $end
$var reg 8 3" outf [7:0] $end
$var reg 8 4" outi [7:0] $end
$var reg 1 z overflow $end
$scope begin genblk7 $end
$upscope $end
$scope begin genblk9 $end
$upscope $end
$upscope $end
$upscope $end
$scope module mult $end
$var wire 16 5" ina [15:0] $end
$var wire 16 6" inb [15:0] $end
$var wire 32 7" res [31:0] $end
$var wire 1 8" overflow $end
$var wire 16 9" out [15:0] $end
$scope module res_zoom $end
$var wire 32 :" in [31:0] $end
$var wire 16 ;" out [15:0] $end
$var reg 16 <" ini [15:0] $end
$var reg 24 =" inr [23:0] $end
$var reg 8 >" outf [7:0] $end
$var reg 8 ?" outi [7:0] $end
$var reg 1 8" overflow $end
$scope begin genblk4 $end
$upscope $end
$scope begin genblk9 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module pe12 $end
$var wire 1 ! clk $end
$var wire 16 @" input_in [15:0] $end
$var wire 1 ' load_weight $end
$var wire 1 k pe_valid_in $end
$var wire 16 A" psum_in [15:0] $end
$var wire 1 ( rst $end
$var wire 16 B" weight [15:0] $end
$var wire 16 C" psum_reg [15:0] $end
$var wire 16 D" mult_out [15:0] $end
$var reg 16 E" input_out [15:0] $end
$var reg 1 j pe_valid_out $end
$var reg 16 F" psum_out [15:0] $end
$var reg 16 G" weight_reg [15:0] $end
$scope module adder $end
$var wire 16 H" inb [15:0] $end
$var wire 17 I" res [16:0] $end
$var wire 1 J" overflow $end
$var wire 16 K" out [15:0] $end
$var wire 16 L" inbz [15:0] $end
$var wire 16 M" inaz [15:0] $end
$var wire 16 N" ina [15:0] $end
$scope module ina_zoom $end
$var wire 16 O" out [15:0] $end
$var wire 16 P" in [15:0] $end
$var reg 8 Q" ini [7:0] $end
$var reg 16 R" inr [15:0] $end
$var reg 8 S" outf [7:0] $end
$var reg 8 T" outi [7:0] $end
$var reg 1 U" overflow $end
$scope begin genblk10 $end
$upscope $end
$scope begin genblk7 $end
$upscope $end
$upscope $end
$scope module inb_zoom $end
$var wire 16 V" in [15:0] $end
$var wire 16 W" out [15:0] $end
$var reg 8 X" ini [7:0] $end
$var reg 16 Y" inr [15:0] $end
$var reg 8 Z" outf [7:0] $end
$var reg 8 [" outi [7:0] $end
$var reg 1 \" overflow $end
$scope begin genblk10 $end
$upscope $end
$scope begin genblk7 $end
$upscope $end
$upscope $end
$scope module res_zoom $end
$var wire 17 ]" in [16:0] $end
$var wire 16 ^" out [15:0] $end
$var reg 9 _" ini [8:0] $end
$var reg 17 `" inr [16:0] $end
$var reg 8 a" outf [7:0] $end
$var reg 8 b" outi [7:0] $end
$var reg 1 J" overflow $end
$scope begin genblk7 $end
$upscope $end
$scope begin genblk9 $end
$upscope $end
$upscope $end
$upscope $end
$scope module mult $end
$var wire 16 c" ina [15:0] $end
$var wire 16 d" inb [15:0] $end
$var wire 32 e" res [31:0] $end
$var wire 1 f" overflow $end
$var wire 16 g" out [15:0] $end
$scope module res_zoom $end
$var wire 32 h" in [31:0] $end
$var wire 16 i" out [15:0] $end
$var reg 16 j" ini [15:0] $end
$var reg 24 k" inr [23:0] $end
$var reg 8 l" outf [7:0] $end
$var reg 8 m" outi [7:0] $end
$var reg 1 f" overflow $end
$scope begin genblk4 $end
$upscope $end
$scope begin genblk9 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module pe21 $end
$var wire 1 ! clk $end
$var wire 16 n" input_in [15:0] $end
$var wire 1 ' load_weight $end
$var wire 1 k pe_valid_in $end
$var wire 16 o" psum_in [15:0] $end
$var wire 1 ( rst $end
$var wire 16 p" weight [15:0] $end
$var wire 16 q" psum_reg [15:0] $end
$var wire 16 r" mult_out [15:0] $end
$var reg 16 s" input_out [15:0] $end
$var reg 1 i pe_valid_out $end
$var reg 16 t" psum_out [15:0] $end
$var reg 16 u" weight_reg [15:0] $end
$scope module adder $end
$var wire 16 v" inb [15:0] $end
$var wire 17 w" res [16:0] $end
$var wire 1 x" overflow $end
$var wire 16 y" out [15:0] $end
$var wire 16 z" inbz [15:0] $end
$var wire 16 {" inaz [15:0] $end
$var wire 16 |" ina [15:0] $end
$scope module ina_zoom $end
$var wire 16 }" out [15:0] $end
$var wire 16 ~" in [15:0] $end
$var reg 8 !# ini [7:0] $end
$var reg 16 "# inr [15:0] $end
$var reg 8 ## outf [7:0] $end
$var reg 8 $# outi [7:0] $end
$var reg 1 %# overflow $end
$scope begin genblk10 $end
$upscope $end
$scope begin genblk7 $end
$upscope $end
$upscope $end
$scope module inb_zoom $end
$var wire 16 &# in [15:0] $end
$var wire 16 '# out [15:0] $end
$var reg 8 (# ini [7:0] $end
$var reg 16 )# inr [15:0] $end
$var reg 8 *# outf [7:0] $end
$var reg 8 +# outi [7:0] $end
$var reg 1 ,# overflow $end
$scope begin genblk10 $end
$upscope $end
$scope begin genblk7 $end
$upscope $end
$upscope $end
$scope module res_zoom $end
$var wire 17 -# in [16:0] $end
$var wire 16 .# out [15:0] $end
$var reg 9 /# ini [8:0] $end
$var reg 17 0# inr [16:0] $end
$var reg 8 1# outf [7:0] $end
$var reg 8 2# outi [7:0] $end
$var reg 1 x" overflow $end
$scope begin genblk7 $end
$upscope $end
$scope begin genblk9 $end
$upscope $end
$upscope $end
$upscope $end
$scope module mult $end
$var wire 16 3# ina [15:0] $end
$var wire 16 4# inb [15:0] $end
$var wire 32 5# res [31:0] $end
$var wire 1 6# overflow $end
$var wire 16 7# out [15:0] $end
$scope module res_zoom $end
$var wire 32 8# in [31:0] $end
$var wire 16 9# out [15:0] $end
$var reg 16 :# ini [15:0] $end
$var reg 24 ;# inr [23:0] $end
$var reg 8 <# outf [7:0] $end
$var reg 8 =# outi [7:0] $end
$var reg 1 6# overflow $end
$scope begin genblk4 $end
$upscope $end
$scope begin genblk9 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module pe22 $end
$var wire 1 ! clk $end
$var wire 16 ># input_in [15:0] $end
$var wire 1 ' load_weight $end
$var wire 1 j pe_valid_in $end
$var wire 16 ?# psum_in [15:0] $end
$var wire 1 ( rst $end
$var wire 16 @# weight [15:0] $end
$var wire 16 A# psum_reg [15:0] $end
$var wire 16 B# mult_out [15:0] $end
$var reg 16 C# input_out [15:0] $end
$var reg 1 h pe_valid_out $end
$var reg 16 D# psum_out [15:0] $end
$var reg 16 E# weight_reg [15:0] $end
$scope module adder $end
$var wire 16 F# inb [15:0] $end
$var wire 17 G# res [16:0] $end
$var wire 1 H# overflow $end
$var wire 16 I# out [15:0] $end
$var wire 16 J# inbz [15:0] $end
$var wire 16 K# inaz [15:0] $end
$var wire 16 L# ina [15:0] $end
$scope module ina_zoom $end
$var wire 16 M# out [15:0] $end
$var wire 16 N# in [15:0] $end
$var reg 8 O# ini [7:0] $end
$var reg 16 P# inr [15:0] $end
$var reg 8 Q# outf [7:0] $end
$var reg 8 R# outi [7:0] $end
$var reg 1 S# overflow $end
$scope begin genblk10 $end
$upscope $end
$scope begin genblk7 $end
$upscope $end
$upscope $end
$scope module inb_zoom $end
$var wire 16 T# in [15:0] $end
$var wire 16 U# out [15:0] $end
$var reg 8 V# ini [7:0] $end
$var reg 16 W# inr [15:0] $end
$var reg 8 X# outf [7:0] $end
$var reg 8 Y# outi [7:0] $end
$var reg 1 Z# overflow $end
$scope begin genblk10 $end
$upscope $end
$scope begin genblk7 $end
$upscope $end
$upscope $end
$scope module res_zoom $end
$var wire 17 [# in [16:0] $end
$var wire 16 \# out [15:0] $end
$var reg 9 ]# ini [8:0] $end
$var reg 17 ^# inr [16:0] $end
$var reg 8 _# outf [7:0] $end
$var reg 8 `# outi [7:0] $end
$var reg 1 H# overflow $end
$scope begin genblk7 $end
$upscope $end
$scope begin genblk9 $end
$upscope $end
$upscope $end
$upscope $end
$scope module mult $end
$var wire 16 a# ina [15:0] $end
$var wire 16 b# inb [15:0] $end
$var wire 32 c# res [31:0] $end
$var wire 1 d# overflow $end
$var wire 16 e# out [15:0] $end
$scope module res_zoom $end
$var wire 32 f# in [31:0] $end
$var wire 16 g# out [15:0] $end
$var reg 16 h# ini [15:0] $end
$var reg 24 i# inr [23:0] $end
$var reg 8 j# outf [7:0] $end
$var reg 8 k# outi [7:0] $end
$var reg 1 d# overflow $end
$scope begin genblk4 $end
$upscope $end
$scope begin genblk9 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 k#
b0 j#
b0 i#
b0 h#
b0 g#
b0 f#
b0 e#
0d#
b0 c#
b0 b#
b0 a#
b0 `#
b0 _#
b0 ^#
b0 ]#
b0 \#
b0 [#
0Z#
b0 Y#
b0 X#
b0 W#
b0 V#
b0 U#
b0 T#
0S#
b0 R#
b0 Q#
b0 P#
b0 O#
b0 N#
b0 M#
b0 L#
b0 K#
b0 J#
b0 I#
0H#
b0 G#
b0 F#
b0 E#
b0 D#
b0 C#
b0 B#
b0 A#
b0 @#
b0 ?#
b0 >#
b0 =#
b0 <#
b0 ;#
b0 :#
b0 9#
b0 8#
b0 7#
06#
b0 5#
b0 4#
b0 3#
b0 2#
b0 1#
b0 0#
b0 /#
b0 .#
b0 -#
0,#
b0 +#
b0 *#
b0 )#
b0 (#
b0 '#
b0 &#
0%#
b0 $#
b0 ##
b0 "#
b0 !#
b0 ~"
b0 }"
b0 |"
b0 {"
b0 z"
b0 y"
0x"
b0 w"
b0 v"
b0 u"
b0 t"
b0 s"
b0 r"
b0 q"
b0 p"
b0 o"
b0 n"
b0 m"
b0 l"
b0 k"
b0 j"
b0 i"
b0 h"
b0 g"
0f"
b0 e"
b0 d"
b0 c"
b0 b"
b0 a"
b0 `"
b0 _"
b0 ^"
b0 ]"
0\"
b0 ["
b0 Z"
b0 Y"
b0 X"
b0 W"
b0 V"
0U"
b0 T"
b0 S"
b0 R"
b0 Q"
b0 P"
b0 O"
b0 N"
b0 M"
b0 L"
b0 K"
0J"
b0 I"
b0 H"
b0 G"
b0 F"
b0 E"
b0 D"
b0 C"
b0 B"
b0 A"
b0 @"
b0 ?"
b0 >"
b0 ="
b0 <"
b0 ;"
b0 :"
b0 9"
08"
b0 7"
b0 6"
b0 5"
b0 4"
b0 3"
b0 2"
b0 1"
b0 0"
b0 /"
0."
b0 -"
b0 ,"
b0 +"
b0 *"
b0 )"
b0 ("
0'"
b0 &"
b0 %"
b0 $"
b0 #"
b0 ""
b0 !"
b0 ~
b0 }
b0 |
b0 {
0z
b0 y
b0 x
b0 w
b0 v
b0 u
b0 t
b0 s
b0 r
b0 q
b0 p
b0 o
b0 n
b0 m
b0 l
xk
xj
xi
xh
b0 g
b0 f
b0 e
b0 d
b0 c
b0 b
b0 a
b0 `
b0 _
b0 ^
b0 ]
b0 \
b0 [
b0 Z
b0 Y
bx X
b0 W
0V
bx U
bz T
b0 S
b0 R
b0 Q
bz P
b0 O
b0 N
b0 M
b0 L
b0 K
b0 J
bx I
b0 H
0G
bx F
bz E
b0 D
b0 C
b0 B
bz A
b0 @
b0 ?
b0 >
bz =
b0 <
b0 ;
bz :
09
08
07
06
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
x/
x.
b0 -
b0 ,
b0 +
b0 *
0)
0(
0'
bz &
b0 %
b0 $
bz #
bz "
1!
$end
#5000
0!
#10000
b10000000000 -
b10000000000 c
b10000000000 @#
b1111111000000000 ,
b1111111000000000 b
b1111111000000000 p"
b1100000000 +
b1100000000 a
b1100000000 B"
b100000000 *
b100000000 `
b100000000 r
b100000000 #
b100000000 =
b100000000 "
b100000000 :
b0 F
b0 I
b0 U
b0 X
b1000000000 &
b1000000000 A
b1000000000 E
b1000000000 P
b1000000000 T
1'
0k
1!
#15000
0!
#20000
0'
b100000000 w
b100000000 6"
b1100000000 G"
b1100000000 d"
b1111111000000000 u"
b1111111000000000 4#
b10000000000 E#
b10000000000 b#
1!
#25000
0!
#30000
b10100000000 s
b10100000000 {
b10100000000 0"
b101 4"
b101 1"
b10100000000 2"
b10100000000 y
b10100000000 /"
b10100000000 }
b10100000000 !"
b101 &"
b101 #"
b10100000000 $"
b10100000000 t
b10100000000 ~
b10100000000 ""
b10100000000 9"
b10100000000 ;"
b101 ?"
b101 <"
b10100000000 ="
b1010000000000000000 7"
b1010000000000000000 :"
b10100000000 $
b10100000000 ^
b10100000000 p
b10100000000 5"
0/
0i
0j
1!
#35000
0!
#40000
1)
0.
0h
1!
#45000
0!
#50000
b0 s
b0 {
b0 0"
b0 4"
b0 1"
b0 2"
b1111010000000000 {"
b1111010000000000 }"
b11110100 $#
b11110100 !#
b0 y
b0 /"
b0 }
b0 !"
b0 &"
b0 #"
b1111010000000000 "#
b0 $"
b1111010000000000 r"
b1111010000000000 |"
b1111010000000000 ~"
b1111010000000000 7#
b1111010000000000 9#
b11110100 =#
b1111111111110100 :#
b0 t
b0 ~
b0 ""
b0 9"
b0 ;"
b0 ?"
b0 <"
b111111111111010000000000 ;#
b0 ="
b11111111111101000000000000000000 5#
b11111111111101000000000000000000 8#
b11000000000 %
b11000000000 _
b11000000000 n"
b11000000000 3#
b0 7"
b0 :"
b0 $
b0 ^
b0 p
b0 5"
0)
b111100000000 C"
b111100000000 K"
b111100000000 ^"
b1111 b"
b1111 _"
b111100000000 `"
b1111100100000000 q"
b1111100100000000 y"
b1111100100000000 .#
b11111001 2#
b111111001 /#
b111100000000 I"
b111100000000 ]"
b111100000000 M"
b111100000000 O"
b1111 T"
b1111 Q"
b11111100100000000 0#
b111100000000 R"
b11111100100000000 w"
b11111100100000000 -#
b10100000000 z"
b10100000000 '#
b101 +#
b101 (#
b111100000000 D"
b111100000000 N"
b111100000000 P"
b111100000000 g"
b111100000000 i"
b1111 m"
b1111 j"
b10100000000 )#
b111100000000 k"
1k
b10100000000 g
b10100000000 v
b10100000000 o"
b10100000000 v"
b10100000000 &#
b11110000000000000000 e"
b11110000000000000000 h"
b10100000000 o
b10100000000 u
b10100000000 @"
b10100000000 c"
1!
#55000
0!
#60000
b0 {"
b0 }"
b0 $#
b0 !#
b0 "#
b0 r"
b0 |"
b0 ~"
b0 7#
b0 9#
b0 =#
b0 :#
b0 ;#
b0 5#
b0 8#
b0 %
b0 _
b0 n"
b0 3#
b0 q"
b0 y"
b0 .#
b0 2#
b0 /#
b10011100000000 A#
b10011100000000 I#
b10011100000000 \#
b100111 `#
b100111 ]#
b1100000000000 K#
b1100000000000 M#
b11000 R#
b11000 O#
b0 0#
b10011100000000 ^#
b1100000000000 P#
b0 w"
b0 -#
b0 z"
b0 '#
b0 +#
b0 (#
b10011100000000 G#
b10011100000000 [#
b111100000000 J#
b111100000000 U#
b1111 Y#
b1111 V#
b1100000000000 B#
b1100000000000 L#
b1100000000000 N#
b1100000000000 e#
b1100000000000 g#
b11000 k#
b11000 h#
b0 )#
b111100000000 W#
b1100000000000 i#
b0 g
b0 v
b0 o"
b0 v"
b0 &#
0k
1j
b111100000000 f
b111100000000 F"
b111100000000 ?#
b111100000000 F#
b111100000000 T#
b0x0x00000000 e
b10100000000 E"
1/
1i
b1111100100000000 3
b1111100100000000 ;
b1111100100000000 m
b1111100100000000 t"
b110000000000000000000 c#
b110000000000000000000 f#
b11000000000 n
b11000000000 s"
b11000000000 >#
b11000000000 a#
1!
#65000
0!
#70000
b1100000000000 A#
b1100000000000 I#
b1100000000000 \#
b11000 `#
b11000 ]#
b1100000000000 ^#
b1111010000000000 B
b1111010000000000 H
b1111010000000000 J
b11110100 N
b1111111111110100 K
b1100000000000 G#
b1100000000000 [#
b0 J#
b0 U#
b0 Y#
b0 V#
b111111111111010000000000 L
b0 W#
19
b11111111111101000000000000000000 F
b11111111111101000000000000000000 I
b1111101000000000 2
b1111101000000000 <
b1111101000000000 @
b1111101000000000 D
1.
1h
b10011100000000 1
b10011100000000 >
b10011100000000 l
b10011100000000 D#
b0xxx00000000 e
b11000000000 C#
b0 3
b0 ;
b0 m
b0 t"
0/
0i
b0 f
b0 F"
b0 ?#
b0 F#
b0 T#
0j
1!
#75000
0!
#80000
b0 B
b0 H
b0 J
b0 N
b0 K
b101000000000000 Q
b101000000000000 W
b101000000000000 Y
b1010000 ]
b1010000 Z
b0 L
b101000000000000 [
b0 F
b0 I
b0 2
b0 <
b0 @
b0 D
09
18
b10100000000000000000000 U
b10100000000000000000000 X
b10100000000000 0
b10100000000000 ?
b10100000000000 O
b10100000000000 S
17
b1111010000000000 5
b1111010000000000 C
b0 1
b0 >
b0 l
b0 D#
0.
0h
1!
#85000
0!
#90000
b0 Q
b0 W
b0 Y
b0 ]
b0 Z
b0 [
16
b10100000000000 4
b10100000000000 R
b0 5
b0 C
07
b0 U
b0 X
b0 0
b0 ?
b0 O
b0 S
08
1!
#95000
0!
#100000
b0 4
b0 R
06
1!
#105000
0!
#110000
1!
#115000
0!
#120000
1!
#125000
0!
#130000
1!
#135000
0!
#140000
1!
#145000
0!
#150000
1!
#155000
0!
#160000
1!
#165000
0!
#170000
1!
#175000
0!
#180000
1!
#185000
0!
#190000
1!
#195000
0!
#200000
1!
#205000
0!
#210000
1!
#215000
0!
#220000
1!
#220001
