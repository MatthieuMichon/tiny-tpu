$date
	Thu May 22 18:14:39 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module layer1 $end
$var wire 1 ! clk $end
$var wire 16 " nn_data_in_1 [15:0] $end
$var wire 16 # nn_data_in_2 [15:0] $end
$var wire 1 $ nn_start $end
$var wire 16 % nn_temp_bias_1 [15:0] $end
$var wire 16 & nn_temp_bias_2 [15:0] $end
$var wire 16 ' nn_temp_leak_factor [15:0] $end
$var wire 16 ( nn_temp_weight_11 [15:0] $end
$var wire 16 ) nn_temp_weight_12 [15:0] $end
$var wire 16 * nn_temp_weight_21 [15:0] $end
$var wire 16 + nn_temp_weight_22 [15:0] $end
$var wire 1 , nn_valid_in_1 $end
$var wire 1 - nn_valid_in_2 $end
$var wire 1 . nn_valid_load_weights $end
$var wire 1 / rst $end
$var wire 1 0 valid_out_22 $end
$var wire 1 1 valid_out_21 $end
$var wire 16 2 sys_data_out_22 [15:0] $end
$var wire 16 3 sys_data_out_21 [15:0] $end
$var wire 16 4 out_22_bias [15:0] $end
$var wire 16 5 out_21_bias [15:0] $end
$var wire 1 6 lr_valid_out_22 $end
$var wire 1 7 lr_valid_out_21 $end
$var wire 16 8 lr_data_out2 [15:0] $end
$var wire 16 9 lr_data_out1 [15:0] $end
$var wire 16 : input_21 [15:0] $end
$var wire 16 ; input_11 [15:0] $end
$var wire 1 < bias_valid_out_22 $end
$var wire 1 = bias_valid_out_21 $end
$var wire 1 > acc_valid_out_2 $end
$var wire 1 ? acc_valid_out_1 $end
$scope module acc_1 $end
$var wire 16 @ acc_data_nn_in [15:0] $end
$var wire 1 , acc_valid_data_nn_in $end
$var wire 1 $ acc_valid_in $end
$var wire 1 ! clk $end
$var wire 1 / rst $end
$var wire 1 7 acc_valid_data_in $end
$var wire 16 A acc_data_in [15:0] $end
$var parameter 32 B ACC_WIDTH $end
$var reg 16 C acc_data_out [15:0] $end
$var reg 1 ? acc_valid_out $end
$var reg 8 D counter [7:0] $end
$var reg 8 E counter_reg [7:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 F i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop1 $end
$var integer 32 G i [31:0] $end
$upscope $end
$upscope $end
$scope module acc_2 $end
$var wire 16 H acc_data_nn_in [15:0] $end
$var wire 1 - acc_valid_data_nn_in $end
$var wire 1 ? acc_valid_in $end
$var wire 1 ! clk $end
$var wire 1 / rst $end
$var wire 1 6 acc_valid_data_in $end
$var wire 16 I acc_data_in [15:0] $end
$var parameter 32 J ACC_WIDTH $end
$var reg 16 K acc_data_out [15:0] $end
$var reg 1 > acc_valid_out $end
$var reg 8 L counter [7:0] $end
$var reg 8 M counter_reg [7:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 N i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop1 $end
$var integer 32 O i [31:0] $end
$upscope $end
$upscope $end
$scope module bias_21 $end
$var wire 16 P bias_temp_bias [15:0] $end
$var wire 1 ! clk $end
$var wire 1 / rst $end
$var wire 1 1 bias_valid_in $end
$var wire 16 Q bias_data_in [15:0] $end
$var wire 16 R add_out [15:0] $end
$var reg 16 S bias_data_out [15:0] $end
$var reg 1 = bias_valid_out $end
$scope module add_inst $end
$var wire 16 T inb [15:0] $end
$var wire 17 U res [16:0] $end
$var wire 1 V overflow $end
$var wire 16 W out [15:0] $end
$var wire 16 X inbz [15:0] $end
$var wire 16 Y inaz [15:0] $end
$var wire 16 Z ina [15:0] $end
$var parameter 32 [ ROUND $end
$var parameter 32 \ WIF $end
$var parameter 32 ] WIFA $end
$var parameter 32 ^ WIFB $end
$var parameter 32 _ WII $end
$var parameter 32 ` WIIA $end
$var parameter 32 a WIIB $end
$var parameter 32 b WOF $end
$var parameter 32 c WOI $end
$var parameter 32 d WRF $end
$var parameter 33 e WRI $end
$scope module ina_zoom $end
$var wire 16 f out [15:0] $end
$var wire 16 g in [15:0] $end
$var parameter 32 h ROUND $end
$var parameter 32 i WIF $end
$var parameter 32 j WII $end
$var parameter 32 k WOF $end
$var parameter 32 l WOI $end
$var reg 8 m ini [7:0] $end
$var reg 16 n inr [15:0] $end
$var reg 8 o outf [7:0] $end
$var reg 8 p outi [7:0] $end
$var reg 1 q overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module inb_zoom $end
$var wire 16 r in [15:0] $end
$var wire 16 s out [15:0] $end
$var parameter 32 t ROUND $end
$var parameter 32 u WIF $end
$var parameter 32 v WII $end
$var parameter 32 w WOF $end
$var parameter 32 x WOI $end
$var reg 8 y ini [7:0] $end
$var reg 16 z inr [15:0] $end
$var reg 8 { outf [7:0] $end
$var reg 8 | outi [7:0] $end
$var reg 1 } overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module res_zoom $end
$var wire 17 ~ in [16:0] $end
$var wire 16 !" out [15:0] $end
$var parameter 32 "" ROUND $end
$var parameter 32 #" WIF $end
$var parameter 33 $" WII $end
$var parameter 32 %" WOF $end
$var parameter 32 &" WOI $end
$var reg 9 '" ini [8:0] $end
$var reg 17 (" inr [16:0] $end
$var reg 8 )" outf [7:0] $end
$var reg 8 *" outi [7:0] $end
$var reg 1 V overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module bias_22 $end
$var wire 16 +" bias_temp_bias [15:0] $end
$var wire 1 ! clk $end
$var wire 1 / rst $end
$var wire 1 0 bias_valid_in $end
$var wire 16 ," bias_data_in [15:0] $end
$var wire 16 -" add_out [15:0] $end
$var reg 16 ." bias_data_out [15:0] $end
$var reg 1 < bias_valid_out $end
$scope module add_inst $end
$var wire 16 /" inb [15:0] $end
$var wire 17 0" res [16:0] $end
$var wire 1 1" overflow $end
$var wire 16 2" out [15:0] $end
$var wire 16 3" inbz [15:0] $end
$var wire 16 4" inaz [15:0] $end
$var wire 16 5" ina [15:0] $end
$var parameter 32 6" ROUND $end
$var parameter 32 7" WIF $end
$var parameter 32 8" WIFA $end
$var parameter 32 9" WIFB $end
$var parameter 32 :" WII $end
$var parameter 32 ;" WIIA $end
$var parameter 32 <" WIIB $end
$var parameter 32 =" WOF $end
$var parameter 32 >" WOI $end
$var parameter 32 ?" WRF $end
$var parameter 33 @" WRI $end
$scope module ina_zoom $end
$var wire 16 A" out [15:0] $end
$var wire 16 B" in [15:0] $end
$var parameter 32 C" ROUND $end
$var parameter 32 D" WIF $end
$var parameter 32 E" WII $end
$var parameter 32 F" WOF $end
$var parameter 32 G" WOI $end
$var reg 8 H" ini [7:0] $end
$var reg 16 I" inr [15:0] $end
$var reg 8 J" outf [7:0] $end
$var reg 8 K" outi [7:0] $end
$var reg 1 L" overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module inb_zoom $end
$var wire 16 M" in [15:0] $end
$var wire 16 N" out [15:0] $end
$var parameter 32 O" ROUND $end
$var parameter 32 P" WIF $end
$var parameter 32 Q" WII $end
$var parameter 32 R" WOF $end
$var parameter 32 S" WOI $end
$var reg 8 T" ini [7:0] $end
$var reg 16 U" inr [15:0] $end
$var reg 8 V" outf [7:0] $end
$var reg 8 W" outi [7:0] $end
$var reg 1 X" overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module res_zoom $end
$var wire 17 Y" in [16:0] $end
$var wire 16 Z" out [15:0] $end
$var parameter 32 [" ROUND $end
$var parameter 32 \" WIF $end
$var parameter 33 ]" WII $end
$var parameter 32 ^" WOF $end
$var parameter 32 _" WOI $end
$var reg 9 `" ini [8:0] $end
$var reg 17 a" inr [16:0] $end
$var reg 8 b" outf [7:0] $end
$var reg 8 c" outi [7:0] $end
$var reg 1 1" overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module leaky_relu_21 $end
$var wire 1 ! clk $end
$var wire 16 d" lr_data_in [15:0] $end
$var wire 16 e" lr_temp_leak_factor [15:0] $end
$var wire 1 = lr_valid_in $end
$var wire 1 / rst $end
$var wire 16 f" mul_out [15:0] $end
$var reg 16 g" lr_data_out [15:0] $end
$var reg 1 7 lr_valid_out $end
$scope module mul_inst $end
$var wire 16 h" ina [15:0] $end
$var wire 16 i" inb [15:0] $end
$var wire 32 j" res [31:0] $end
$var wire 1 k" overflow $end
$var wire 16 l" out [15:0] $end
$var parameter 32 m" ROUND $end
$var parameter 32 n" WIFA $end
$var parameter 32 o" WIFB $end
$var parameter 32 p" WIIA $end
$var parameter 32 q" WIIB $end
$var parameter 32 r" WOF $end
$var parameter 32 s" WOI $end
$var parameter 33 t" WRF $end
$var parameter 33 u" WRI $end
$scope module res_zoom $end
$var wire 32 v" in [31:0] $end
$var wire 16 w" out [15:0] $end
$var parameter 32 x" ROUND $end
$var parameter 33 y" WIF $end
$var parameter 33 z" WII $end
$var parameter 32 {" WOF $end
$var parameter 32 |" WOI $end
$var reg 16 }" ini [15:0] $end
$var reg 24 ~" inr [23:0] $end
$var reg 8 !# outf [7:0] $end
$var reg 8 "# outi [7:0] $end
$var reg 1 k" overflow $end
$scope begin genblk1 $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module leaky_relu_22 $end
$var wire 1 ! clk $end
$var wire 16 ## lr_data_in [15:0] $end
$var wire 16 $# lr_temp_leak_factor [15:0] $end
$var wire 1 < lr_valid_in $end
$var wire 1 / rst $end
$var wire 16 %# mul_out [15:0] $end
$var reg 16 &# lr_data_out [15:0] $end
$var reg 1 6 lr_valid_out $end
$scope module mul_inst $end
$var wire 16 '# ina [15:0] $end
$var wire 16 (# inb [15:0] $end
$var wire 32 )# res [31:0] $end
$var wire 1 *# overflow $end
$var wire 16 +# out [15:0] $end
$var parameter 32 ,# ROUND $end
$var parameter 32 -# WIFA $end
$var parameter 32 .# WIFB $end
$var parameter 32 /# WIIA $end
$var parameter 32 0# WIIB $end
$var parameter 32 1# WOF $end
$var parameter 32 2# WOI $end
$var parameter 33 3# WRF $end
$var parameter 33 4# WRI $end
$scope module res_zoom $end
$var wire 32 5# in [31:0] $end
$var wire 16 6# out [15:0] $end
$var parameter 32 7# ROUND $end
$var parameter 33 8# WIF $end
$var parameter 33 9# WII $end
$var parameter 32 :# WOF $end
$var parameter 32 ;# WOI $end
$var reg 16 <# ini [15:0] $end
$var reg 24 =# inr [23:0] $end
$var reg 8 ># outf [7:0] $end
$var reg 8 ?# outi [7:0] $end
$var reg 1 *# overflow $end
$scope begin genblk1 $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module systolic_inst $end
$var wire 1 ! clk $end
$var wire 1 / rst $end
$var wire 16 @# sys_data_in_11 [15:0] $end
$var wire 16 A# sys_data_in_12 [15:0] $end
$var wire 1 ? sys_start $end
$var wire 16 B# sys_temp_weight_11 [15:0] $end
$var wire 16 C# sys_temp_weight_12 [15:0] $end
$var wire 16 D# sys_temp_weight_21 [15:0] $end
$var wire 16 E# sys_temp_weight_22 [15:0] $end
$var wire 1 . sys_valid_load_weights $end
$var wire 1 1 sys_valid_out_21 $end
$var wire 1 0 sys_valid_out_22 $end
$var wire 16 F# zero_wire_inputs [15:0] $end
$var wire 16 G# zero_wire_outputs [15:0] $end
$var wire 16 H# sys_data_out_22 [15:0] $end
$var wire 16 I# sys_data_out_21 [15:0] $end
$var wire 16 J# psum_12 [15:0] $end
$var wire 16 K# psum_11 [15:0] $end
$var wire 1 L# pe_valid_out_22 $end
$var wire 1 M# pe_valid_out_21 $end
$var wire 1 N# pe_valid_out_12 $end
$var wire 1 O# pe_valid_out_11 $end
$var wire 16 P# input_21_out [15:0] $end
$var wire 16 Q# input_11_out [15:0] $end
$scope module pe11 $end
$var wire 1 ! clk $end
$var wire 16 R# input_in [15:0] $end
$var wire 1 . load_weight $end
$var wire 1 ? pe_valid_in $end
$var wire 16 S# psum_in [15:0] $end
$var wire 1 / rst $end
$var wire 16 T# weight [15:0] $end
$var wire 16 U# psum_reg [15:0] $end
$var wire 16 V# mult_out [15:0] $end
$var parameter 32 W# DATA_WIDTH $end
$var reg 16 X# input_out [15:0] $end
$var reg 1 O# pe_valid_out $end
$var reg 16 Y# psum_out [15:0] $end
$var reg 16 Z# weight_reg [15:0] $end
$scope module adder $end
$var wire 16 [# inb [15:0] $end
$var wire 17 \# res [16:0] $end
$var wire 1 ]# overflow $end
$var wire 16 ^# out [15:0] $end
$var wire 16 _# inbz [15:0] $end
$var wire 16 `# inaz [15:0] $end
$var wire 16 a# ina [15:0] $end
$var parameter 32 b# ROUND $end
$var parameter 32 c# WIF $end
$var parameter 32 d# WIFA $end
$var parameter 32 e# WIFB $end
$var parameter 32 f# WII $end
$var parameter 32 g# WIIA $end
$var parameter 32 h# WIIB $end
$var parameter 32 i# WOF $end
$var parameter 32 j# WOI $end
$var parameter 32 k# WRF $end
$var parameter 33 l# WRI $end
$scope module ina_zoom $end
$var wire 16 m# out [15:0] $end
$var wire 16 n# in [15:0] $end
$var parameter 32 o# ROUND $end
$var parameter 32 p# WIF $end
$var parameter 32 q# WII $end
$var parameter 32 r# WOF $end
$var parameter 32 s# WOI $end
$var reg 8 t# ini [7:0] $end
$var reg 16 u# inr [15:0] $end
$var reg 8 v# outf [7:0] $end
$var reg 8 w# outi [7:0] $end
$var reg 1 x# overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module inb_zoom $end
$var wire 16 y# in [15:0] $end
$var wire 16 z# out [15:0] $end
$var parameter 32 {# ROUND $end
$var parameter 32 |# WIF $end
$var parameter 32 }# WII $end
$var parameter 32 ~# WOF $end
$var parameter 32 !$ WOI $end
$var reg 8 "$ ini [7:0] $end
$var reg 16 #$ inr [15:0] $end
$var reg 8 $$ outf [7:0] $end
$var reg 8 %$ outi [7:0] $end
$var reg 1 &$ overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module res_zoom $end
$var wire 17 '$ in [16:0] $end
$var wire 16 ($ out [15:0] $end
$var parameter 32 )$ ROUND $end
$var parameter 32 *$ WIF $end
$var parameter 33 +$ WII $end
$var parameter 32 ,$ WOF $end
$var parameter 32 -$ WOI $end
$var reg 9 .$ ini [8:0] $end
$var reg 17 /$ inr [16:0] $end
$var reg 8 0$ outf [7:0] $end
$var reg 8 1$ outi [7:0] $end
$var reg 1 ]# overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$scope module mult $end
$var wire 16 2$ ina [15:0] $end
$var wire 16 3$ inb [15:0] $end
$var wire 32 4$ res [31:0] $end
$var wire 1 5$ overflow $end
$var wire 16 6$ out [15:0] $end
$var parameter 32 7$ ROUND $end
$var parameter 32 8$ WIFA $end
$var parameter 32 9$ WIFB $end
$var parameter 32 :$ WIIA $end
$var parameter 32 ;$ WIIB $end
$var parameter 32 <$ WOF $end
$var parameter 32 =$ WOI $end
$var parameter 33 >$ WRF $end
$var parameter 33 ?$ WRI $end
$scope module res_zoom $end
$var wire 32 @$ in [31:0] $end
$var wire 16 A$ out [15:0] $end
$var parameter 32 B$ ROUND $end
$var parameter 33 C$ WIF $end
$var parameter 33 D$ WII $end
$var parameter 32 E$ WOF $end
$var parameter 32 F$ WOI $end
$var reg 16 G$ ini [15:0] $end
$var reg 24 H$ inr [23:0] $end
$var reg 8 I$ outf [7:0] $end
$var reg 8 J$ outi [7:0] $end
$var reg 1 5$ overflow $end
$scope begin genblk1 $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module pe12 $end
$var wire 1 ! clk $end
$var wire 16 K$ input_in [15:0] $end
$var wire 1 . load_weight $end
$var wire 1 O# pe_valid_in $end
$var wire 16 L$ psum_in [15:0] $end
$var wire 1 / rst $end
$var wire 16 M$ weight [15:0] $end
$var wire 16 N$ psum_reg [15:0] $end
$var wire 16 O$ mult_out [15:0] $end
$var parameter 32 P$ DATA_WIDTH $end
$var reg 16 Q$ input_out [15:0] $end
$var reg 1 N# pe_valid_out $end
$var reg 16 R$ psum_out [15:0] $end
$var reg 16 S$ weight_reg [15:0] $end
$scope module adder $end
$var wire 16 T$ inb [15:0] $end
$var wire 17 U$ res [16:0] $end
$var wire 1 V$ overflow $end
$var wire 16 W$ out [15:0] $end
$var wire 16 X$ inbz [15:0] $end
$var wire 16 Y$ inaz [15:0] $end
$var wire 16 Z$ ina [15:0] $end
$var parameter 32 [$ ROUND $end
$var parameter 32 \$ WIF $end
$var parameter 32 ]$ WIFA $end
$var parameter 32 ^$ WIFB $end
$var parameter 32 _$ WII $end
$var parameter 32 `$ WIIA $end
$var parameter 32 a$ WIIB $end
$var parameter 32 b$ WOF $end
$var parameter 32 c$ WOI $end
$var parameter 32 d$ WRF $end
$var parameter 33 e$ WRI $end
$scope module ina_zoom $end
$var wire 16 f$ out [15:0] $end
$var wire 16 g$ in [15:0] $end
$var parameter 32 h$ ROUND $end
$var parameter 32 i$ WIF $end
$var parameter 32 j$ WII $end
$var parameter 32 k$ WOF $end
$var parameter 32 l$ WOI $end
$var reg 8 m$ ini [7:0] $end
$var reg 16 n$ inr [15:0] $end
$var reg 8 o$ outf [7:0] $end
$var reg 8 p$ outi [7:0] $end
$var reg 1 q$ overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module inb_zoom $end
$var wire 16 r$ in [15:0] $end
$var wire 16 s$ out [15:0] $end
$var parameter 32 t$ ROUND $end
$var parameter 32 u$ WIF $end
$var parameter 32 v$ WII $end
$var parameter 32 w$ WOF $end
$var parameter 32 x$ WOI $end
$var reg 8 y$ ini [7:0] $end
$var reg 16 z$ inr [15:0] $end
$var reg 8 {$ outf [7:0] $end
$var reg 8 |$ outi [7:0] $end
$var reg 1 }$ overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module res_zoom $end
$var wire 17 ~$ in [16:0] $end
$var wire 16 !% out [15:0] $end
$var parameter 32 "% ROUND $end
$var parameter 32 #% WIF $end
$var parameter 33 $% WII $end
$var parameter 32 %% WOF $end
$var parameter 32 &% WOI $end
$var reg 9 '% ini [8:0] $end
$var reg 17 (% inr [16:0] $end
$var reg 8 )% outf [7:0] $end
$var reg 8 *% outi [7:0] $end
$var reg 1 V$ overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$scope module mult $end
$var wire 16 +% ina [15:0] $end
$var wire 16 ,% inb [15:0] $end
$var wire 32 -% res [31:0] $end
$var wire 1 .% overflow $end
$var wire 16 /% out [15:0] $end
$var parameter 32 0% ROUND $end
$var parameter 32 1% WIFA $end
$var parameter 32 2% WIFB $end
$var parameter 32 3% WIIA $end
$var parameter 32 4% WIIB $end
$var parameter 32 5% WOF $end
$var parameter 32 6% WOI $end
$var parameter 33 7% WRF $end
$var parameter 33 8% WRI $end
$scope module res_zoom $end
$var wire 32 9% in [31:0] $end
$var wire 16 :% out [15:0] $end
$var parameter 32 ;% ROUND $end
$var parameter 33 <% WIF $end
$var parameter 33 =% WII $end
$var parameter 32 >% WOF $end
$var parameter 32 ?% WOI $end
$var reg 16 @% ini [15:0] $end
$var reg 24 A% inr [23:0] $end
$var reg 8 B% outf [7:0] $end
$var reg 8 C% outi [7:0] $end
$var reg 1 .% overflow $end
$scope begin genblk1 $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module pe21 $end
$var wire 1 ! clk $end
$var wire 16 D% input_in [15:0] $end
$var wire 1 . load_weight $end
$var wire 1 O# pe_valid_in $end
$var wire 16 E% psum_in [15:0] $end
$var wire 1 / rst $end
$var wire 16 F% weight [15:0] $end
$var wire 16 G% psum_reg [15:0] $end
$var wire 16 H% mult_out [15:0] $end
$var parameter 32 I% DATA_WIDTH $end
$var reg 16 J% input_out [15:0] $end
$var reg 1 M# pe_valid_out $end
$var reg 16 K% psum_out [15:0] $end
$var reg 16 L% weight_reg [15:0] $end
$scope module adder $end
$var wire 16 M% inb [15:0] $end
$var wire 17 N% res [16:0] $end
$var wire 1 O% overflow $end
$var wire 16 P% out [15:0] $end
$var wire 16 Q% inbz [15:0] $end
$var wire 16 R% inaz [15:0] $end
$var wire 16 S% ina [15:0] $end
$var parameter 32 T% ROUND $end
$var parameter 32 U% WIF $end
$var parameter 32 V% WIFA $end
$var parameter 32 W% WIFB $end
$var parameter 32 X% WII $end
$var parameter 32 Y% WIIA $end
$var parameter 32 Z% WIIB $end
$var parameter 32 [% WOF $end
$var parameter 32 \% WOI $end
$var parameter 32 ]% WRF $end
$var parameter 33 ^% WRI $end
$scope module ina_zoom $end
$var wire 16 _% out [15:0] $end
$var wire 16 `% in [15:0] $end
$var parameter 32 a% ROUND $end
$var parameter 32 b% WIF $end
$var parameter 32 c% WII $end
$var parameter 32 d% WOF $end
$var parameter 32 e% WOI $end
$var reg 8 f% ini [7:0] $end
$var reg 16 g% inr [15:0] $end
$var reg 8 h% outf [7:0] $end
$var reg 8 i% outi [7:0] $end
$var reg 1 j% overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module inb_zoom $end
$var wire 16 k% in [15:0] $end
$var wire 16 l% out [15:0] $end
$var parameter 32 m% ROUND $end
$var parameter 32 n% WIF $end
$var parameter 32 o% WII $end
$var parameter 32 p% WOF $end
$var parameter 32 q% WOI $end
$var reg 8 r% ini [7:0] $end
$var reg 16 s% inr [15:0] $end
$var reg 8 t% outf [7:0] $end
$var reg 8 u% outi [7:0] $end
$var reg 1 v% overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module res_zoom $end
$var wire 17 w% in [16:0] $end
$var wire 16 x% out [15:0] $end
$var parameter 32 y% ROUND $end
$var parameter 32 z% WIF $end
$var parameter 33 {% WII $end
$var parameter 32 |% WOF $end
$var parameter 32 }% WOI $end
$var reg 9 ~% ini [8:0] $end
$var reg 17 !& inr [16:0] $end
$var reg 8 "& outf [7:0] $end
$var reg 8 #& outi [7:0] $end
$var reg 1 O% overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$scope module mult $end
$var wire 16 $& ina [15:0] $end
$var wire 16 %& inb [15:0] $end
$var wire 32 && res [31:0] $end
$var wire 1 '& overflow $end
$var wire 16 (& out [15:0] $end
$var parameter 32 )& ROUND $end
$var parameter 32 *& WIFA $end
$var parameter 32 +& WIFB $end
$var parameter 32 ,& WIIA $end
$var parameter 32 -& WIIB $end
$var parameter 32 .& WOF $end
$var parameter 32 /& WOI $end
$var parameter 33 0& WRF $end
$var parameter 33 1& WRI $end
$scope module res_zoom $end
$var wire 32 2& in [31:0] $end
$var wire 16 3& out [15:0] $end
$var parameter 32 4& ROUND $end
$var parameter 33 5& WIF $end
$var parameter 33 6& WII $end
$var parameter 32 7& WOF $end
$var parameter 32 8& WOI $end
$var reg 16 9& ini [15:0] $end
$var reg 24 :& inr [23:0] $end
$var reg 8 ;& outf [7:0] $end
$var reg 8 <& outi [7:0] $end
$var reg 1 '& overflow $end
$scope begin genblk1 $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module pe22 $end
$var wire 1 ! clk $end
$var wire 16 =& input_in [15:0] $end
$var wire 1 . load_weight $end
$var wire 1 N# pe_valid_in $end
$var wire 16 >& psum_in [15:0] $end
$var wire 1 / rst $end
$var wire 16 ?& weight [15:0] $end
$var wire 16 @& psum_reg [15:0] $end
$var wire 16 A& mult_out [15:0] $end
$var parameter 32 B& DATA_WIDTH $end
$var reg 16 C& input_out [15:0] $end
$var reg 1 L# pe_valid_out $end
$var reg 16 D& psum_out [15:0] $end
$var reg 16 E& weight_reg [15:0] $end
$scope module adder $end
$var wire 16 F& inb [15:0] $end
$var wire 17 G& res [16:0] $end
$var wire 1 H& overflow $end
$var wire 16 I& out [15:0] $end
$var wire 16 J& inbz [15:0] $end
$var wire 16 K& inaz [15:0] $end
$var wire 16 L& ina [15:0] $end
$var parameter 32 M& ROUND $end
$var parameter 32 N& WIF $end
$var parameter 32 O& WIFA $end
$var parameter 32 P& WIFB $end
$var parameter 32 Q& WII $end
$var parameter 32 R& WIIA $end
$var parameter 32 S& WIIB $end
$var parameter 32 T& WOF $end
$var parameter 32 U& WOI $end
$var parameter 32 V& WRF $end
$var parameter 33 W& WRI $end
$scope module ina_zoom $end
$var wire 16 X& out [15:0] $end
$var wire 16 Y& in [15:0] $end
$var parameter 32 Z& ROUND $end
$var parameter 32 [& WIF $end
$var parameter 32 \& WII $end
$var parameter 32 ]& WOF $end
$var parameter 32 ^& WOI $end
$var reg 8 _& ini [7:0] $end
$var reg 16 `& inr [15:0] $end
$var reg 8 a& outf [7:0] $end
$var reg 8 b& outi [7:0] $end
$var reg 1 c& overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module inb_zoom $end
$var wire 16 d& in [15:0] $end
$var wire 16 e& out [15:0] $end
$var parameter 32 f& ROUND $end
$var parameter 32 g& WIF $end
$var parameter 32 h& WII $end
$var parameter 32 i& WOF $end
$var parameter 32 j& WOI $end
$var reg 8 k& ini [7:0] $end
$var reg 16 l& inr [15:0] $end
$var reg 8 m& outf [7:0] $end
$var reg 8 n& outi [7:0] $end
$var reg 1 o& overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module res_zoom $end
$var wire 17 p& in [16:0] $end
$var wire 16 q& out [15:0] $end
$var parameter 32 r& ROUND $end
$var parameter 32 s& WIF $end
$var parameter 33 t& WII $end
$var parameter 32 u& WOF $end
$var parameter 32 v& WOI $end
$var reg 9 w& ini [8:0] $end
$var reg 17 x& inr [16:0] $end
$var reg 8 y& outf [7:0] $end
$var reg 8 z& outi [7:0] $end
$var reg 1 H& overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$scope module mult $end
$var wire 16 {& ina [15:0] $end
$var wire 16 |& inb [15:0] $end
$var wire 32 }& res [31:0] $end
$var wire 1 ~& overflow $end
$var wire 16 !' out [15:0] $end
$var parameter 32 "' ROUND $end
$var parameter 32 #' WIFA $end
$var parameter 32 $' WIFB $end
$var parameter 32 %' WIIA $end
$var parameter 32 &' WIIB $end
$var parameter 32 '' WOF $end
$var parameter 32 (' WOI $end
$var parameter 33 )' WRF $end
$var parameter 33 *' WRI $end
$scope module res_zoom $end
$var wire 32 +' in [31:0] $end
$var wire 16 ,' out [15:0] $end
$var parameter 32 -' ROUND $end
$var parameter 33 .' WIF $end
$var parameter 33 /' WII $end
$var parameter 32 0' WOF $end
$var parameter 32 1' WOI $end
$var reg 16 2' ini [15:0] $end
$var reg 24 3' inr [23:0] $end
$var reg 8 4' outf [7:0] $end
$var reg 8 5' outi [7:0] $end
$var reg 1 ~& overflow $end
$scope begin genblk1 $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module layer1 $end
$scope module acc_1 $end
$var reg 16 6' \acc_mem_reg[0] [15:0] $end
$upscope $end
$upscope $end
$scope module layer1 $end
$scope module acc_1 $end
$var reg 16 7' \acc_mem_reg[1] [15:0] $end
$upscope $end
$upscope $end
$scope module layer1 $end
$scope module acc_1 $end
$var reg 16 8' \acc_mem_reg[2] [15:0] $end
$upscope $end
$upscope $end
$scope module layer1 $end
$scope module acc_1 $end
$var reg 16 9' \acc_mem_reg[3] [15:0] $end
$upscope $end
$upscope $end
$scope module layer1 $end
$scope module acc_2 $end
$var reg 16 :' \acc_mem_reg[0] [15:0] $end
$upscope $end
$upscope $end
$scope module layer1 $end
$scope module acc_2 $end
$var reg 16 ;' \acc_mem_reg[1] [15:0] $end
$upscope $end
$upscope $end
$scope module layer1 $end
$scope module acc_2 $end
$var reg 16 <' \acc_mem_reg[2] [15:0] $end
$upscope $end
$upscope $end
$scope module layer1 $end
$scope module acc_2 $end
$var reg 16 =' \acc_mem_reg[3] [15:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1000 1'
b1000 0'
b10000 /'
b10000 .'
b1 -'
b10000 *'
b10000 )'
b1000 ('
b1000 ''
b1000 &'
b1000 %'
b1000 $'
b1000 #'
b1 "'
b1000 v&
b1000 u&
b1001 t&
b1000 s&
b1 r&
b1000 j&
b1000 i&
b1000 h&
b1000 g&
b0 f&
b1000 ^&
b1000 ]&
b1000 \&
b1000 [&
b0 Z&
b1001 W&
b1000 V&
b1000 U&
b1000 T&
b1000 S&
b1000 R&
b1000 Q&
b1000 P&
b1000 O&
b1000 N&
b1 M&
b10000 B&
b1000 8&
b1000 7&
b10000 6&
b10000 5&
b1 4&
b10000 1&
b10000 0&
b1000 /&
b1000 .&
b1000 -&
b1000 ,&
b1000 +&
b1000 *&
b1 )&
b1000 }%
b1000 |%
b1001 {%
b1000 z%
b1 y%
b1000 q%
b1000 p%
b1000 o%
b1000 n%
b0 m%
b1000 e%
b1000 d%
b1000 c%
b1000 b%
b0 a%
b1001 ^%
b1000 ]%
b1000 \%
b1000 [%
b1000 Z%
b1000 Y%
b1000 X%
b1000 W%
b1000 V%
b1000 U%
b1 T%
b10000 I%
b1000 ?%
b1000 >%
b10000 =%
b10000 <%
b1 ;%
b10000 8%
b10000 7%
b1000 6%
b1000 5%
b1000 4%
b1000 3%
b1000 2%
b1000 1%
b1 0%
b1000 &%
b1000 %%
b1001 $%
b1000 #%
b1 "%
b1000 x$
b1000 w$
b1000 v$
b1000 u$
b0 t$
b1000 l$
b1000 k$
b1000 j$
b1000 i$
b0 h$
b1001 e$
b1000 d$
b1000 c$
b1000 b$
b1000 a$
b1000 `$
b1000 _$
b1000 ^$
b1000 ]$
b1000 \$
b1 [$
b10000 P$
b1000 F$
b1000 E$
b10000 D$
b10000 C$
b1 B$
b10000 ?$
b10000 >$
b1000 =$
b1000 <$
b1000 ;$
b1000 :$
b1000 9$
b1000 8$
b1 7$
b1000 -$
b1000 ,$
b1001 +$
b1000 *$
b1 )$
b1000 !$
b1000 ~#
b1000 }#
b1000 |#
b0 {#
b1000 s#
b1000 r#
b1000 q#
b1000 p#
b0 o#
b1001 l#
b1000 k#
b1000 j#
b1000 i#
b1000 h#
b1000 g#
b1000 f#
b1000 e#
b1000 d#
b1000 c#
b1 b#
b10000 W#
b1000 ;#
b1000 :#
b10000 9#
b10000 8#
b1 7#
b10000 4#
b10000 3#
b1000 2#
b1000 1#
b1000 0#
b1000 /#
b1000 .#
b1000 -#
b1 ,#
b1000 |"
b1000 {"
b10000 z"
b10000 y"
b1 x"
b10000 u"
b10000 t"
b1000 s"
b1000 r"
b1000 q"
b1000 p"
b1000 o"
b1000 n"
b1 m"
b1000 _"
b1000 ^"
b1001 ]"
b1000 \"
b1 ["
b1000 S"
b1000 R"
b1000 Q"
b1000 P"
b0 O"
b1000 G"
b1000 F"
b1000 E"
b1000 D"
b0 C"
b1001 @"
b1000 ?"
b1000 >"
b1000 ="
b1000 <"
b1000 ;"
b1000 :"
b1000 9"
b1000 8"
b1000 7"
b1 6"
b1000 &"
b1000 %"
b1001 $"
b1000 #"
b1 ""
b1000 x
b1000 w
b1000 v
b1000 u
b0 t
b1000 l
b1000 k
b1000 j
b1000 i
b0 h
b1001 e
b1000 d
b1000 c
b1000 b
b1000 a
b1000 `
b1000 _
b1000 ^
b1000 ]
b1000 \
b1 [
b100 J
b100 B
$end
#0
$dumpvars
bx ='
bx <'
bx ;'
bx :'
bx 9'
bx 8'
bx 7'
bx 6'
b0 5'
b0 4'
b0 3'
b0 2'
b0 ,'
b0 +'
b0 !'
0~&
b0 }&
b0 |&
b0 {&
b0 z&
b0 y&
b0 x&
b0 w&
b0 q&
b0 p&
0o&
b0 n&
b0 m&
b0 l&
b0 k&
b0 e&
b0 d&
0c&
b0 b&
b0 a&
b0 `&
b0 _&
b0 Y&
b0 X&
b0 L&
b0 K&
b0 J&
b0 I&
0H&
b0 G&
b0 F&
b0 E&
b0 D&
b0 C&
b0 A&
b0 @&
b0 ?&
b0 >&
b0 =&
b0 <&
b0 ;&
b0 :&
b0 9&
b0 3&
bx 2&
b0 (&
0'&
bx &&
b0 %&
bx $&
b0 #&
b0 "&
b0 !&
b0 ~%
b0 x%
b0 w%
0v%
b0 u%
b0 t%
b0 s%
b0 r%
b0 l%
b0 k%
0j%
b0 i%
b0 h%
b0 g%
b0 f%
b0 `%
b0 _%
b0 S%
b0 R%
b0 Q%
b0 P%
0O%
b0 N%
b0 M%
b0 L%
b0 K%
b0 J%
b0 H%
b0 G%
b0 F%
b0 E%
bx D%
b0 C%
b0 B%
b0 A%
b0 @%
b0 :%
b0 9%
b0 /%
0.%
b0 -%
b0 ,%
b0 +%
b0 *%
b0 )%
b0 (%
b0 '%
b0 !%
b0 ~$
0}$
b0 |$
b0 {$
b0 z$
b0 y$
b0 s$
b0 r$
0q$
b0 p$
b0 o$
b0 n$
b0 m$
b0 g$
b0 f$
b0 Z$
b0 Y$
b0 X$
b0 W$
0V$
b0 U$
b0 T$
b0 S$
b0 R$
b0 Q$
b0 O$
b0 N$
b0 M$
b0 L$
b0 K$
b0 J$
b0 I$
b0 H$
b0 G$
b0 A$
bx @$
b0 6$
05$
bx 4$
b0 3$
bx 2$
b0 1$
b0 0$
b0 /$
b0 .$
b0 ($
b0 '$
0&$
b0 %$
b0 $$
b0 #$
b0 "$
b0 z#
b0 y#
0x#
b0 w#
b0 v#
b0 u#
b0 t#
b0 n#
b0 m#
b0 a#
b0 `#
b0 _#
b0 ^#
0]#
b0 \#
b0 [#
b0 Z#
b0 Y#
b0 X#
b0 V#
b0 U#
b0 T#
b0 S#
bx R#
b0 Q#
b0 P#
xO#
xN#
xM#
xL#
b0 K#
b0 J#
b0 I#
b0 H#
b0 G#
b0 F#
b0 E#
b0 D#
b0 C#
b0 B#
bx A#
bx @#
b0 ?#
b0 >#
b0 =#
b0 <#
b0 6#
bx 5#
b0 +#
0*#
bx )#
bz (#
b0 '#
b0 &#
b0 %#
bz $#
b0 ##
b0 "#
b0 !#
b0 ~"
b0 }"
b0 w"
bx v"
b0 l"
0k"
bx j"
bz i"
b0 h"
b0 g"
b0 f"
bz e"
b0 d"
bx c"
bx b"
bx a"
bx `"
bx Z"
bx Y"
0X"
bz W"
bz V"
bz U"
bz T"
bz N"
bz M"
0L"
b0 K"
b0 J"
b0 I"
b0 H"
b0 B"
b0 A"
b0 5"
b0 4"
bz 3"
bx 2"
01"
bx 0"
bz /"
b0 ."
bx -"
b0 ,"
bz +"
bx *"
bx )"
bx ("
bx '"
bx !"
bx ~
0}
bz |
bz {
bz z
bz y
bz s
bz r
0q
b0 p
b0 o
b0 n
b0 m
b0 g
b0 f
b0 Z
b0 Y
bz X
bx W
0V
bx U
bz T
b0 S
bx R
b0 Q
bz P
b0 O
b100 N
bx M
bx L
bx K
b0 I
b0 H
b0 G
b100 F
bx E
bx D
bx C
b0 A
b0 @
x?
x>
0=
0<
bx ;
bx :
b0 9
b0 8
07
06
b0 5
b0 4
b0 3
b0 2
x1
x0
1/
0.
0-
0,
b0 +
b0 *
b0 )
b0 (
bz '
bz &
bz %
0$
b0 #
b0 "
1!
$end
#5000
0!
#10000
0/
b0 M
b0 L
0>
b0 &&
b0 2&
b0 :
b0 K
b0 A#
b0 D%
b0 $&
b0 ='
b0 <'
b0 ;'
b0 :'
b0 E
b0 D
0?
b0 4$
b0 @$
b0 ;
b0 C
b0 @#
b0 R#
b0 2$
b0 9'
b0 8'
b0 7'
b0 6'
b100 O
b100 N
b100 G
b100 F
1!
#15000
0!
#20000
b100000000 "
b100000000 @
1-
1,
0O#
b100 N
b100 F
1!
#25000
0!
#30000
b100000000 #
b100000000 H
b0 "
b0 @
b1 L
b0 :'
b1 D
b100000000 6'
0N#
01
0M#
b100 N
b100 F
1!
#35000
0!
#40000
b0 c"
b0 `"
b0 -"
b0 2"
b0 Z"
b0 b"
b0 *"
b0 '"
b1000000 R
b1000000 W
b1000000 !"
b1000000 )"
b0 a"
b1000000 ("
b0 0"
b0 Y"
b0 W"
b0 T"
b0 3"
b0 N"
b0 V"
b1000000 U
b1000000 ~
b0 |
b0 y
b1000000 X
b1000000 s
b1000000 {
b0 U"
b1000000 z
b100010001 +
b100010001 E#
b100010001 ?&
b1111111100011110 *
b1111111100011110 D#
b1111111100011110 F%
b1111111011101111 )
b1111111011101111 C#
b1111111011101111 M$
b11100010 (
b11100010 B#
b11100010 T#
1.
b0 &
b0 +"
b0 /"
b0 M"
b1000000 %
b1000000 P
b1000000 T
b1000000 r
b0 j"
b0 v"
b0 )#
b0 5#
b11 '
b11 e"
b11 i"
b11 $#
b11 (#
b0 #
b0 H
0-
0,
b1 M
b10 L
b100000000 ;'
b1 E
b10 D
b0 7'
00
0L#
b100 N
b100 F
1!
#45000
0!
#50000
b0 +
b0 E#
b0 ?&
b0 *
b0 D#
b0 F%
b0 )
b0 C#
b0 M$
b0 (
b0 B#
b0 T#
0.
b11100010 Z#
b11100010 3$
b1111111011101111 S$
b1111111011101111 ,%
b1111111100011110 L%
b1111111100011110 %&
b100010001 E&
b100010001 |&
b100 N
b100 F
1!
#55000
0!
#60000
1$
b100 N
b100 F
1!
#65000
0!
#70000
b11100010 U#
b11100010 ^#
b11100010 ($
b11100010 0$
b11100010 /$
b11100010 \#
b11100010 '$
b11100010 `#
b11100010 m#
b11100010 v#
b11100010 u#
b11100010 V#
b11100010 a#
b11100010 n#
b11100010 6$
b11100010 A$
b11100010 I$
b11100010 H$
b1110001000000000 4$
b1110001000000000 @$
b100000000 ;
b100000000 C
b100000000 @#
b100000000 R#
b100000000 2$
b1 D
1?
b100 N
b100 F
1!
#75000
0!
#80000
0$
b0 U#
b0 ^#
b0 ($
b0 0$
b11111110 *%
b111111110 '%
b1111111011101111 N$
b1111111011101111 W$
b1111111011101111 !%
b11101111 )%
b0 /$
b11111111011101111 (%
b0 \#
b0 '$
b0 `#
b0 m#
b0 v#
b11100010 G%
b11100010 P%
b11100010 x%
b11100010 "&
b11111110 p$
b11111110 m$
b11111111011101111 U$
b11111111011101111 ~$
b1111111011101111 Y$
b1111111011101111 f$
b11101111 o$
b0 u#
b11100010 !&
b1111111011101111 n$
b0 V#
b0 a#
b0 n#
b0 6$
b0 A$
b0 I$
b11100010 N%
b11100010 w%
b11100010 Q%
b11100010 l%
b11100010 t%
b11111110 C%
b1111111111111110 @%
b1111111011101111 O$
b1111111011101111 Z$
b1111111011101111 g$
b1111111011101111 /%
b1111111011101111 :%
b11101111 B%
b0 H$
b11100010 s%
b111111111111111011101111 A%
b1 L
1>
b0 4$
b0 @$
b0 ;
b0 C
b0 @#
b0 R#
b0 2$
b0 D
1O#
b11100010 K#
b11100010 Y#
b11100010 E%
b11100010 M%
b11100010 k%
b11111111111111101110111100000000 -%
b11111111111111101110111100000000 9%
b100000000 Q#
b100000000 X#
b100000000 K$
b100000000 +%
b100 N
b100 F
1!
#85000
0!
#90000
b11111111 #&
b111111111 ~%
b0 *%
b0 '%
b0 N$
b0 W$
b0 !%
b0 )%
b0 (%
b11111111 i%
b11111111 f%
b1111111100011110 R%
b1111111100011110 _%
b11110 h%
b1111111100011110 G%
b1111111100011110 P%
b1111111100011110 x%
b11110 "&
b0 p$
b0 m$
b0 U$
b0 ~$
b0 Y$
b0 f$
b0 o$
b11111110 z&
b111111110 w&
b1111111011101111 @&
b1111111011101111 I&
b1111111011101111 q&
b11101111 y&
b1 *"
b1 '"
b100100010 R
b100100010 W
b100100010 !"
b100010 )"
b1111111100011110 g%
b11111111100011110 !&
b0 n$
b11111111011101111 x&
b100100010 ("
b11111111 <&
b1111111111111111 9&
b1111111100011110 H%
b1111111100011110 S%
b1111111100011110 `%
b1111111100011110 (&
b1111111100011110 3&
b11110 ;&
b11111111100011110 N%
b11111111100011110 w%
b0 Q%
b0 l%
b0 t%
b0 C%
b0 @%
b0 O$
b0 Z$
b0 g$
b0 /%
b0 :%
b0 B%
b11111110 n&
b11111110 k&
b11111111011101111 G&
b11111111011101111 p&
b1111111011101111 J&
b1111111011101111 e&
b11101111 m&
b100100010 U
b100100010 ~
b11100010 Y
b11100010 f
b11100010 o
b111111111111111100011110 :&
b0 s%
b0 A%
b1111111011101111 l&
b11100010 n
b11111111111111110001111000000000 &&
b11111111111111110001111000000000 2&
b100000000 :
b100000000 K
b100000000 A#
b100000000 D%
b100000000 $&
b0 L
0?
b0 K#
b0 Y#
b0 E%
b0 M%
b0 k%
b0 -%
b0 9%
b0 Q#
b0 X#
b0 K$
b0 +%
1N#
b1111111011101111 J#
b1111111011101111 R$
b1111111011101111 >&
b1111111011101111 F&
b1111111011101111 d&
b0x00000000 G#
b100000000 Q$
11
1M#
b11100010 3
b11100010 Q
b11100010 Z
b11100010 g
b11100010 I#
b11100010 K%
b100 N
b100 F
1!
#95000
0!
#100000
b0 #&
b0 ~%
b0 G%
b0 P%
b0 x%
b0 "&
b0 !&
b0 i%
b0 f%
b0 N%
b0 w%
b0 R%
b0 _%
b0 h%
b11111110 c"
b111111110 `"
b1111111011101111 -"
b1111111011101111 2"
b1111111011101111 Z"
b11101111 b"
b11111111 *"
b111111111 '"
b1111111101011110 R
b1111111101011110 W
b1111111101011110 !"
b1011110 )"
b1 b&
b1 _&
b100010001 K&
b100010001 X&
b10001 a&
b1 z&
b1 w&
b100010001 @&
b100010001 I&
b100010001 q&
b10001 y&
b0 g%
b11111111011101111 a"
b11111111101011110 ("
b100010001 `&
b100010001 x&
b0 <&
b0 9&
b0 H%
b0 S%
b0 `%
b0 (&
b0 3&
b0 ;&
b11 f"
b11 l"
b11 w"
b11 !#
b11111110 K"
b11111110 H"
b11111111011101111 0"
b11111111011101111 Y"
b1111111011101111 4"
b1111111011101111 A"
b11101111 J"
b11111111 p
b11111111 m
b11111111101011110 U
b11111111101011110 ~
b1111111100011110 Y
b1111111100011110 f
b11110 o
b1 5'
b1 2'
b100010001 A&
b100010001 L&
b100010001 Y&
b100010001 !'
b100010001 ,'
b10001 4'
b0 n&
b0 k&
b100010001 G&
b100010001 p&
b0 J&
b0 e&
b0 m&
b0 :&
b11 ~"
b1111111011101111 I"
b1111111100011110 n
b100010001 3'
b0 l&
b0 &&
b0 2&
b0 :
b0 K
b0 A#
b0 D%
b0 $&
0>
1=
b1101100110 j"
b1101100110 v"
b100100010 5
b100100010 S
b100100010 d"
b100100010 h"
10
1L#
b1111111011101111 2
b1111111011101111 ,"
b1111111011101111 5"
b1111111011101111 B"
b1111111011101111 H#
b1111111011101111 D&
b1111111100011110 3
b1111111100011110 Q
b1111111100011110 Z
b1111111100011110 g
b1111111100011110 I#
b1111111100011110 K%
b10001000100000000 }&
b10001000100000000 +'
b100000000 P#
b100000000 J%
b100000000 =&
b100000000 {&
b0 J#
b0 R$
b0 >&
b0 F&
b0 d&
b0 G#
b0 Q$
0O#
b100 N
b100 F
1!
#105000
0!
#110000
b0 *"
b0 '"
b1000000 R
b1000000 W
b1000000 !"
b1000000 )"
b1 c"
b1 `"
b100010001 -"
b100010001 2"
b100010001 Z"
b10001 b"
b1000000 ("
b100010001 a"
b11111111 ?#
b1111111111111111 <#
b1111111111111101 %#
b1111111111111101 +#
b1111111111111101 6#
b11111101 >#
b11111111 "#
b1111111111111111 }"
b1111111111111110 f"
b1111111111111110 l"
b1111111111111110 w"
b11111110 !#
b0 p
b0 m
b1000000 U
b1000000 ~
b0 Y
b0 f
b0 o
b1 K"
b1 H"
b100010001 0"
b100010001 Y"
b100010001 4"
b100010001 A"
b10001 J"
b111111111111111111111101 =#
b111111111111111111111110 ~"
b0 n
b100010001 I"
17
b100100010 9
b100100010 A
b100100010 g"
1<
b11111111111111111111110011001101 )#
b11111111111111111111110011001101 5#
b1111111011101111 4
b1111111011101111 ."
b1111111011101111 ##
b1111111011101111 '#
b11111111111111111111111000011010 j"
b11111111111111111111111000011010 v"
b1111111101011110 5
b1111111101011110 S
b1111111101011110 d"
b1111111101011110 h"
0N#
b0 3
b0 Q
b0 Z
b0 g
b0 I#
b0 K%
01
0M#
b100010001 2
b100010001 ,"
b100010001 5"
b100010001 B"
b100010001 H#
b100010001 D&
b0x00000000 G#
b100000000 C&
b100 N
b100 F
1!
#115000
0!
#120000
b11111111 *"
b111111111 '"
b1111111110110110 R
b1111111110110110 W
b1111111110110110 !"
b10110110 )"
b11111111110110110 ("
b11111111 |
b11111111 y
b11111111110110110 U
b11111111110110110 ~
b1111111110110110 X
b1111111110110110 s
b10110110 {
b1111111110110110 z
b1111111110110110 %
b1111111110110110 P
b1111111110110110 T
b1111111110110110 r
b100110111 *
b100110111 D#
b100110111 F%
b100100110 (
b100100110 B#
b100100110 T#
1.
b0 c"
b0 `"
b0 -"
b0 2"
b0 Z"
b0 b"
b0 a"
b0 "#
b0 }"
b0 f"
b0 l"
b0 w"
b0 !#
b0 ?#
b0 <#
b11 %#
b11 +#
b11 6#
b11 >#
b0 K"
b0 H"
b0 0"
b0 Y"
b0 4"
b0 A"
b0 J"
b0 ~"
b11 =#
b0 I"
b0 E
b1 D
b100100010 6'
b0 j"
b0 v"
b0 5
b0 S
b0 d"
b0 h"
0=
b1100110011 )#
b1100110011 5#
b100010001 4
b100010001 ."
b100010001 ##
b100010001 '#
b1111111111111110 9
b1111111111111110 A
b1111111111111110 g"
16
b1111111111111101 8
b1111111111111101 I
b1111111111111101 &#
b0 2
b0 ,"
b0 5"
b0 B"
b0 H#
b0 D&
00
0L#
b100 N
b100 F
1!
#125000
0!
#130000
1$
0.
b0 z&
b0 w&
b0 @&
b0 I&
b0 q&
b0 y&
b0 x&
b0 b&
b0 _&
b0 G&
b0 p&
b0 K&
b0 X&
b0 a&
b0 `&
b0 %#
b0 +#
b0 6#
b0 >#
b0 5'
b0 2'
b0 A&
b0 L&
b0 Y&
b0 !'
b0 ,'
b0 4'
b0 =#
b0 3'
b0 M
b1 L
b1111111111111101 :'
b1 E
b10 D
b1111111111111110 7'
b100010001 8
b100010001 I
b100010001 &#
b0 9
b0 A
b0 g"
07
b0 )#
b0 5#
b0 4
b0 ."
b0 ##
b0 '#
0<
b100100110 Z#
b100100110 3$
b0 S$
b0 ,%
b100110111 L%
b100110111 %&
b0 }&
b0 +'
b0 E&
b0 |&
b100 N
b100 F
1!
#135000
0!
#140000
b1 1$
b1 .$
b101001101 U#
b101001101 ^#
b101001101 ($
b1001101 0$
b101001101 /$
b1 w#
b1 t#
b101001101 \#
b101001101 '$
b101001101 `#
b101001101 m#
b1001101 v#
b101001101 u#
b1 J$
b1 G$
b101001101 V#
b101001101 a#
b101001101 n#
b101001101 6$
b101001101 A$
b1001101 I$
b101001101 H$
b1 M
b10 L
b100010001 ;'
b10100110100001100 4$
b10100110100001100 @$
b100100010 ;
b100100010 C
b100100010 @#
b100100010 R#
b100100010 2$
b1 D
1?
b0 8
b0 I
b0 &#
06
b100 N
b100 F
1!
#145000
0!
#150000
0$
b11111111 1$
b111111111 .$
b1111111111111110 U#
b1111111111111110 ^#
b1111111111111110 ($
b11111110 0$
b11111111111111110 /$
b11111111 i%
b11111111 f%
b1111111111111100 R%
b1111111111111100 _%
b11111100 h%
b11111111 w#
b11111111 t#
b11111111111111110 \#
b11111111111111110 '$
b1111111111111110 `#
b1111111111111110 m#
b11111110 v#
b1 #&
b1 ~%
b101001001 G%
b101001001 P%
b101001001 x%
b1001001 "&
b1111111111111100 g%
b1111111111111110 u#
b101001001 !&
b11111111 <&
b1111111111111111 9&
b1111111111111100 H%
b1111111111111100 S%
b1111111111111100 `%
b1111111111111100 (&
b1111111111111100 3&
b11111100 ;&
b11111111 J$
b1111111111111111 G$
b1111111111111110 V#
b1111111111111110 a#
b1111111111111110 n#
b1111111111111110 6$
b1111111111111110 A$
b11111110 I$
b1 u%
b1 r%
b101001001 N%
b101001001 w%
b101001101 Q%
b101001101 l%
b1001101 t%
b111111111111111111111100 :&
b111111111111111111111110 H$
b101001101 s%
b11111111111111111111110001011011 &&
b11111111111111111111110001011011 2&
b1111111111111101 :
b1111111111111101 K
b1111111111111101 A#
b1111111111111101 D%
b1111111111111101 $&
b1 L
1>
b11111111111111111111110110110100 4$
b11111111111111111111110110110100 @$
b1111111111111110 ;
b1111111111111110 C
b1111111111111110 @#
b1111111111111110 R#
b1111111111111110 2$
b0 D
1O#
b101001101 K#
b101001101 Y#
b101001101 E%
b101001101 M%
b101001101 k%
b100100010 Q#
b100100010 X#
b100100010 K$
b100100010 +%
b100 N
b100 F
1!
#155000
0!
#160000
b0 1$
b0 .$
b0 U#
b0 ^#
b0 ($
b0 0$
b0 /$
b1 i%
b1 f%
b101001100 R%
b101001100 _%
b1001100 h%
b0 w#
b0 t#
b0 \#
b0 '$
b0 `#
b0 m#
b0 v#
b0 *"
b0 '"
b11111111 R
b11111111 W
b11111111 !"
b11111111 )"
b1 #&
b1 ~%
b101001010 G%
b101001010 P%
b101001010 x%
b1001010 "&
b101001100 g%
b0 u#
b11111111 ("
b101001010 !&
b1 <&
b1 9&
b101001100 H%
b101001100 S%
b101001100 `%
b101001100 (&
b101001100 3&
b1001100 ;&
b0 J$
b0 G$
b0 V#
b0 a#
b0 n#
b0 6$
b0 A$
b0 I$
b1 p
b1 m
b11111111 U
b11111111 ~
b101001001 Y
b101001001 f
b1001001 o
b11111111 u%
b11111111 r%
b101001010 N%
b101001010 w%
b1111111111111110 Q%
b1111111111111110 l%
b11111110 t%
b101001100 :&
b0 H$
b101001001 n
b1111111111111110 s%
b10100101110100111 &&
b10100101110100111 2&
b100010001 :
b100010001 K
b100010001 A#
b100010001 D%
b100010001 $&
b0 L
b0 4$
b0 @$
b0 ;
b0 C
b0 @#
b0 R#
b0 2$
0?
11
1M#
b101001001 3
b101001001 Q
b101001001 Z
b101001001 g
b101001001 I#
b101001001 K%
b1111111111111101 P#
b1111111111111101 J%
b1111111111111101 =&
b1111111111111101 {&
1N#
b0x00x000x0 G#
b100100010 Q$
b1111111111111110 K#
b1111111111111110 Y#
b1111111111111110 E%
b1111111111111110 M%
b1111111111111110 k%
b1111111111111110 Q#
b1111111111111110 X#
b1111111111111110 K$
b1111111111111110 +%
b100 N
b100 F
1!
#165000
0!
#170000
b0 #&
b0 ~%
b0 i%
b0 f%
b0 R%
b0 _%
b0 h%
b0 G%
b0 P%
b0 x%
b0 "&
b1 *"
b1 '"
b100000000 R
b100000000 W
b100000000 !"
b0 )"
b0 g%
b0 !&
b100000000 ("
b0 <&
b0 9&
b0 H%
b0 S%
b0 `%
b0 (&
b0 3&
b0 ;&
b11 f"
b11 l"
b11 w"
b11 !#
b0 u%
b0 r%
b0 N%
b0 w%
b0 Q%
b0 l%
b0 t%
b1 p
b100000000 U
b100000000 ~
b101001010 Y
b101001010 f
b1001010 o
b0 :&
b11 ~"
b0 s%
b101001010 n
b0 &&
b0 2&
b0 :
b0 K
b0 A#
b0 D%
b0 $&
0>
1=
b1011111101 j"
b1011111101 v"
b11111111 5
b11111111 S
b11111111 d"
b11111111 h"
b0 K#
b0 Y#
b0 E%
b0 M%
b0 k%
0O#
b1111111111111110 Q$
b101001010 3
b101001010 Q
b101001010 Z
b101001010 g
b101001010 I#
b101001010 K%
b100010001 P#
b100010001 J%
b100010001 =&
b100010001 {&
10
1L#
bx G#
b1111111111111101 C&
b100 N
b100 F
1!
#175000
0!
#180000
b11111111 *"
b111111111 '"
b1111111110110110 R
b1111111110110110 W
b1111111110110110 !"
b10110110 )"
b11111111110110110 ("
b0 p
b0 m
b11111111110110110 U
b11111111110110110 ~
b0 Y
b0 f
b0 o
b0 n
b1100000000 j"
b1100000000 v"
b100000000 5
b100000000 S
b100000000 d"
b100000000 h"
1<
17
b11111111 9
b11111111 A
b11111111 g"
b100010001 C&
b0 3
b0 Q
b0 Z
b0 g
b0 I#
b0 K%
01
0M#
0N#
b100 N
b100 F
1!
#185000
0!
#190000
b0 f"
b0 l"
b0 w"
b0 !#
b0 ~"
b0 E
b1 D
b11111111 6'
16
b100000000 9
b100000000 A
b100000000 g"
b0 j"
b0 v"
b0 5
b0 S
b0 d"
b0 h"
0=
00
0L#
b100 N
b100 F
1!
#195000
0!
#200000
b0 M
b1 L
b0 :'
b1 E
b10 D
b100000000 7'
0<
b0 9
b0 A
b0 g"
07
b100 N
b100 F
1!
#205000
0!
#210000
b1 M
b10 L
b0 ;'
06
b100 N
b100 F
1!
#215000
0!
#220000
b100 N
b100 F
1!
#225000
0!
#230000
b100 N
b100 F
1!
#235000
0!
#240000
b100 N
b100 F
1!
#245000
0!
#250000
b100 N
b100 F
1!
#255000
0!
#260000
b100 N
b100 F
1!
#265000
0!
#270000
b100 N
b100 F
1!
#275000
0!
#280000
b100 N
b100 F
1!
#285000
0!
#290000
b100 N
b100 F
1!
#295000
0!
#300000
b100 N
b100 F
1!
#305000
0!
#310000
b100 N
b100 F
1!
#315000
0!
#320000
b100 N
b100 F
1!
#325000
0!
#330000
b100 N
b100 F
1!
#335000
0!
#340000
b100 N
b100 F
1!
#345000
0!
#350000
b100 N
b100 F
1!
#355000
0!
#360000
b100 N
b100 F
1!
#365000
0!
#370000
b100 N
b100 F
1!
#375000
0!
#380000
b100 N
b100 F
1!
#385000
0!
#390000
b100 N
b100 F
1!
#395000
0!
#400000
b100 N
b100 F
1!
#405000
0!
#410000
b100 N
b100 F
1!
#415000
0!
#420000
b100 N
b100 F
1!
#425000
0!
#430000
b100 N
b100 F
1!
#435000
0!
#440000
b100 N
b100 F
1!
#445000
0!
#450000
b100 N
b100 F
1!
#450001
