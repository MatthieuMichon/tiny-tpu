$date
	Wed May 21 01:57:05 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module layer1 $end
$var wire 16 ! acc_data_nn_in1 [15:0] $end
$var wire 16 " acc_data_nn_in2 [15:0] $end
$var wire 1 # acc_valid_data_nn_in1 $end
$var wire 1 $ acc_valid_data_nn_in2 $end
$var wire 1 % clk $end
$var wire 16 & in_bias_21 [15:0] $end
$var wire 16 ' in_bias_22 [15:0] $end
$var wire 16 ( leak_factor [15:0] $end
$var wire 1 ) load_weights $end
$var wire 1 * rst $end
$var wire 1 + start $end
$var wire 1 , valid_data_in $end
$var wire 16 - weight_11 [15:0] $end
$var wire 16 . weight_12 [15:0] $end
$var wire 16 / weight_21 [15:0] $end
$var wire 16 0 weight_22 [15:0] $end
$var wire 1 1 valid_out_22 $end
$var wire 1 2 valid_out_21 $end
$var wire 16 3 sys_data_out_22 [15:0] $end
$var wire 16 4 sys_data_out_21 [15:0] $end
$var wire 16 5 out_22_bias [15:0] $end
$var wire 16 6 out_21_bias [15:0] $end
$var wire 1 7 lr_valid_out_22 $end
$var wire 1 8 lr_valid_out_21 $end
$var wire 16 9 lr_data_out2 [15:0] $end
$var wire 16 : lr_data_out1 [15:0] $end
$var wire 16 ; input_21 [15:0] $end
$var wire 16 < input_11 [15:0] $end
$var wire 1 = bias_valid_out_22 $end
$var wire 1 > bias_valid_out_21 $end
$var wire 1 ? acc_valid_out_2 $end
$var wire 1 @ acc_valid_out_1 $end
$scope module acc_1 $end
$var wire 16 A acc_data_nn_in [15:0] $end
$var wire 1 # acc_valid_data_nn_in $end
$var wire 1 + acc_valid_in $end
$var wire 1 % clk $end
$var wire 1 * rst $end
$var wire 1 8 acc_valid_data_in $end
$var wire 16 B acc_data_in [15:0] $end
$var reg 16 C acc_data_out [15:0] $end
$var reg 1 @ acc_valid_out $end
$var reg 8 D counter [7:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 E i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop1 $end
$var integer 32 F i [31:0] $end
$upscope $end
$upscope $end
$scope module acc_2 $end
$var wire 16 G acc_data_nn_in [15:0] $end
$var wire 1 $ acc_valid_data_nn_in $end
$var wire 1 @ acc_valid_in $end
$var wire 1 % clk $end
$var wire 1 * rst $end
$var wire 1 7 acc_valid_data_in $end
$var wire 16 H acc_data_in [15:0] $end
$var reg 16 I acc_data_out [15:0] $end
$var reg 1 ? acc_valid_out $end
$var reg 8 J counter [7:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 K i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop1 $end
$var integer 32 L i [31:0] $end
$upscope $end
$upscope $end
$scope module bias_21 $end
$var wire 16 M bias_in [15:0] $end
$var wire 1 % clk $end
$var wire 1 * rst $end
$var wire 16 N input_in [15:0] $end
$var wire 1 2 bias_valid_in $end
$var reg 1 > bias_valid_out $end
$var reg 16 O output_out [15:0] $end
$upscope $end
$scope module bias_22 $end
$var wire 16 P bias_in [15:0] $end
$var wire 1 % clk $end
$var wire 1 * rst $end
$var wire 16 Q input_in [15:0] $end
$var wire 1 1 bias_valid_in $end
$var reg 1 = bias_valid_out $end
$var reg 16 R output_out [15:0] $end
$upscope $end
$scope module leaky_relu_21 $end
$var wire 1 % clk $end
$var wire 16 S input_in [15:0] $end
$var wire 16 T leak_factor [15:0] $end
$var wire 1 > lr_valid_in $end
$var wire 1 * rst $end
$var wire 16 U mul_out [15:0] $end
$var reg 1 8 lr_valid_out $end
$var reg 16 V out [15:0] $end
$scope module mul_inst $end
$var wire 16 W ina [15:0] $end
$var wire 16 X inb [15:0] $end
$var wire 32 Y res [31:0] $end
$var wire 1 Z overflow $end
$var wire 16 [ out [15:0] $end
$scope module res_zoom $end
$var wire 32 \ in [31:0] $end
$var wire 16 ] out [15:0] $end
$var reg 16 ^ ini [15:0] $end
$var reg 24 _ inr [23:0] $end
$var reg 8 ` outf [7:0] $end
$var reg 8 a outi [7:0] $end
$var reg 1 Z overflow $end
$scope begin genblk4 $end
$upscope $end
$scope begin genblk9 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module leaky_relu_22 $end
$var wire 1 % clk $end
$var wire 16 b input_in [15:0] $end
$var wire 16 c leak_factor [15:0] $end
$var wire 1 = lr_valid_in $end
$var wire 1 * rst $end
$var wire 16 d mul_out [15:0] $end
$var reg 1 7 lr_valid_out $end
$var reg 16 e out [15:0] $end
$scope module mul_inst $end
$var wire 16 f ina [15:0] $end
$var wire 16 g inb [15:0] $end
$var wire 32 h res [31:0] $end
$var wire 1 i overflow $end
$var wire 16 j out [15:0] $end
$scope module res_zoom $end
$var wire 32 k in [31:0] $end
$var wire 16 l out [15:0] $end
$var reg 16 m ini [15:0] $end
$var reg 24 n inr [23:0] $end
$var reg 8 o outf [7:0] $end
$var reg 8 p outi [7:0] $end
$var reg 1 i overflow $end
$scope begin genblk4 $end
$upscope $end
$scope begin genblk9 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module systolic_inst $end
$var wire 1 % clk $end
$var wire 16 q input_11 [15:0] $end
$var wire 16 r input_21 [15:0] $end
$var wire 1 ) load_weights $end
$var wire 1 * rst $end
$var wire 1 @ start $end
$var wire 1 2 valid_out_21 $end
$var wire 1 1 valid_out_22 $end
$var wire 16 s weight_11 [15:0] $end
$var wire 16 t weight_12 [15:0] $end
$var wire 16 u weight_21 [15:0] $end
$var wire 16 v weight_22 [15:0] $end
$var wire 16 w zero_wire_inputs [15:0] $end
$var wire 16 x zero_wire_outputs [15:0] $end
$var wire 16 y psum_12 [15:0] $end
$var wire 16 z psum_11 [15:0] $end
$var wire 1 { pe_valid_out_22 $end
$var wire 1 | pe_valid_out_21 $end
$var wire 1 } pe_valid_out_12 $end
$var wire 1 ~ pe_valid_out_11 $end
$var wire 16 !" out_22 [15:0] $end
$var wire 16 "" out_21 [15:0] $end
$var wire 16 #" input_21_out [15:0] $end
$var wire 16 $" input_11_out [15:0] $end
$scope module pe11 $end
$var wire 1 % clk $end
$var wire 16 %" input_in [15:0] $end
$var wire 1 ) load_weight $end
$var wire 1 @ pe_valid_in $end
$var wire 16 &" psum_in [15:0] $end
$var wire 1 * rst $end
$var wire 16 '" weight [15:0] $end
$var wire 16 (" psum_reg [15:0] $end
$var wire 16 )" mult_out [15:0] $end
$var reg 16 *" input_out [15:0] $end
$var reg 1 ~ pe_valid_out $end
$var reg 16 +" psum_out [15:0] $end
$var reg 16 ," weight_reg [15:0] $end
$scope module adder $end
$var wire 16 -" inb [15:0] $end
$var wire 17 ." res [16:0] $end
$var wire 1 /" overflow $end
$var wire 16 0" out [15:0] $end
$var wire 16 1" inbz [15:0] $end
$var wire 16 2" inaz [15:0] $end
$var wire 16 3" ina [15:0] $end
$scope module ina_zoom $end
$var wire 16 4" out [15:0] $end
$var wire 16 5" in [15:0] $end
$var reg 8 6" ini [7:0] $end
$var reg 16 7" inr [15:0] $end
$var reg 8 8" outf [7:0] $end
$var reg 8 9" outi [7:0] $end
$var reg 1 :" overflow $end
$scope begin genblk10 $end
$upscope $end
$scope begin genblk7 $end
$upscope $end
$upscope $end
$scope module inb_zoom $end
$var wire 16 ;" in [15:0] $end
$var wire 16 <" out [15:0] $end
$var reg 8 =" ini [7:0] $end
$var reg 16 >" inr [15:0] $end
$var reg 8 ?" outf [7:0] $end
$var reg 8 @" outi [7:0] $end
$var reg 1 A" overflow $end
$scope begin genblk10 $end
$upscope $end
$scope begin genblk7 $end
$upscope $end
$upscope $end
$scope module res_zoom $end
$var wire 17 B" in [16:0] $end
$var wire 16 C" out [15:0] $end
$var reg 9 D" ini [8:0] $end
$var reg 17 E" inr [16:0] $end
$var reg 8 F" outf [7:0] $end
$var reg 8 G" outi [7:0] $end
$var reg 1 /" overflow $end
$scope begin genblk7 $end
$upscope $end
$scope begin genblk9 $end
$upscope $end
$upscope $end
$upscope $end
$scope module mult $end
$var wire 16 H" ina [15:0] $end
$var wire 16 I" inb [15:0] $end
$var wire 32 J" res [31:0] $end
$var wire 1 K" overflow $end
$var wire 16 L" out [15:0] $end
$scope module res_zoom $end
$var wire 32 M" in [31:0] $end
$var wire 16 N" out [15:0] $end
$var reg 16 O" ini [15:0] $end
$var reg 24 P" inr [23:0] $end
$var reg 8 Q" outf [7:0] $end
$var reg 8 R" outi [7:0] $end
$var reg 1 K" overflow $end
$scope begin genblk4 $end
$upscope $end
$scope begin genblk9 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module pe12 $end
$var wire 1 % clk $end
$var wire 16 S" input_in [15:0] $end
$var wire 1 ) load_weight $end
$var wire 1 ~ pe_valid_in $end
$var wire 16 T" psum_in [15:0] $end
$var wire 1 * rst $end
$var wire 16 U" weight [15:0] $end
$var wire 16 V" psum_reg [15:0] $end
$var wire 16 W" mult_out [15:0] $end
$var reg 16 X" input_out [15:0] $end
$var reg 1 } pe_valid_out $end
$var reg 16 Y" psum_out [15:0] $end
$var reg 16 Z" weight_reg [15:0] $end
$scope module adder $end
$var wire 16 [" inb [15:0] $end
$var wire 17 \" res [16:0] $end
$var wire 1 ]" overflow $end
$var wire 16 ^" out [15:0] $end
$var wire 16 _" inbz [15:0] $end
$var wire 16 `" inaz [15:0] $end
$var wire 16 a" ina [15:0] $end
$scope module ina_zoom $end
$var wire 16 b" out [15:0] $end
$var wire 16 c" in [15:0] $end
$var reg 8 d" ini [7:0] $end
$var reg 16 e" inr [15:0] $end
$var reg 8 f" outf [7:0] $end
$var reg 8 g" outi [7:0] $end
$var reg 1 h" overflow $end
$scope begin genblk10 $end
$upscope $end
$scope begin genblk7 $end
$upscope $end
$upscope $end
$scope module inb_zoom $end
$var wire 16 i" in [15:0] $end
$var wire 16 j" out [15:0] $end
$var reg 8 k" ini [7:0] $end
$var reg 16 l" inr [15:0] $end
$var reg 8 m" outf [7:0] $end
$var reg 8 n" outi [7:0] $end
$var reg 1 o" overflow $end
$scope begin genblk10 $end
$upscope $end
$scope begin genblk7 $end
$upscope $end
$upscope $end
$scope module res_zoom $end
$var wire 17 p" in [16:0] $end
$var wire 16 q" out [15:0] $end
$var reg 9 r" ini [8:0] $end
$var reg 17 s" inr [16:0] $end
$var reg 8 t" outf [7:0] $end
$var reg 8 u" outi [7:0] $end
$var reg 1 ]" overflow $end
$scope begin genblk7 $end
$upscope $end
$scope begin genblk9 $end
$upscope $end
$upscope $end
$upscope $end
$scope module mult $end
$var wire 16 v" ina [15:0] $end
$var wire 16 w" inb [15:0] $end
$var wire 32 x" res [31:0] $end
$var wire 1 y" overflow $end
$var wire 16 z" out [15:0] $end
$scope module res_zoom $end
$var wire 32 {" in [31:0] $end
$var wire 16 |" out [15:0] $end
$var reg 16 }" ini [15:0] $end
$var reg 24 ~" inr [23:0] $end
$var reg 8 !# outf [7:0] $end
$var reg 8 "# outi [7:0] $end
$var reg 1 y" overflow $end
$scope begin genblk4 $end
$upscope $end
$scope begin genblk9 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module pe21 $end
$var wire 1 % clk $end
$var wire 16 ## input_in [15:0] $end
$var wire 1 ) load_weight $end
$var wire 1 ~ pe_valid_in $end
$var wire 16 $# psum_in [15:0] $end
$var wire 1 * rst $end
$var wire 16 %# weight [15:0] $end
$var wire 16 &# psum_reg [15:0] $end
$var wire 16 '# mult_out [15:0] $end
$var reg 16 (# input_out [15:0] $end
$var reg 1 | pe_valid_out $end
$var reg 16 )# psum_out [15:0] $end
$var reg 16 *# weight_reg [15:0] $end
$scope module adder $end
$var wire 16 +# inb [15:0] $end
$var wire 17 ,# res [16:0] $end
$var wire 1 -# overflow $end
$var wire 16 .# out [15:0] $end
$var wire 16 /# inbz [15:0] $end
$var wire 16 0# inaz [15:0] $end
$var wire 16 1# ina [15:0] $end
$scope module ina_zoom $end
$var wire 16 2# out [15:0] $end
$var wire 16 3# in [15:0] $end
$var reg 8 4# ini [7:0] $end
$var reg 16 5# inr [15:0] $end
$var reg 8 6# outf [7:0] $end
$var reg 8 7# outi [7:0] $end
$var reg 1 8# overflow $end
$scope begin genblk10 $end
$upscope $end
$scope begin genblk7 $end
$upscope $end
$upscope $end
$scope module inb_zoom $end
$var wire 16 9# in [15:0] $end
$var wire 16 :# out [15:0] $end
$var reg 8 ;# ini [7:0] $end
$var reg 16 <# inr [15:0] $end
$var reg 8 =# outf [7:0] $end
$var reg 8 ># outi [7:0] $end
$var reg 1 ?# overflow $end
$scope begin genblk10 $end
$upscope $end
$scope begin genblk7 $end
$upscope $end
$upscope $end
$scope module res_zoom $end
$var wire 17 @# in [16:0] $end
$var wire 16 A# out [15:0] $end
$var reg 9 B# ini [8:0] $end
$var reg 17 C# inr [16:0] $end
$var reg 8 D# outf [7:0] $end
$var reg 8 E# outi [7:0] $end
$var reg 1 -# overflow $end
$scope begin genblk7 $end
$upscope $end
$scope begin genblk9 $end
$upscope $end
$upscope $end
$upscope $end
$scope module mult $end
$var wire 16 F# ina [15:0] $end
$var wire 16 G# inb [15:0] $end
$var wire 32 H# res [31:0] $end
$var wire 1 I# overflow $end
$var wire 16 J# out [15:0] $end
$scope module res_zoom $end
$var wire 32 K# in [31:0] $end
$var wire 16 L# out [15:0] $end
$var reg 16 M# ini [15:0] $end
$var reg 24 N# inr [23:0] $end
$var reg 8 O# outf [7:0] $end
$var reg 8 P# outi [7:0] $end
$var reg 1 I# overflow $end
$scope begin genblk4 $end
$upscope $end
$scope begin genblk9 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module pe22 $end
$var wire 1 % clk $end
$var wire 16 Q# input_in [15:0] $end
$var wire 1 ) load_weight $end
$var wire 1 } pe_valid_in $end
$var wire 16 R# psum_in [15:0] $end
$var wire 1 * rst $end
$var wire 16 S# weight [15:0] $end
$var wire 16 T# psum_reg [15:0] $end
$var wire 16 U# mult_out [15:0] $end
$var reg 16 V# input_out [15:0] $end
$var reg 1 { pe_valid_out $end
$var reg 16 W# psum_out [15:0] $end
$var reg 16 X# weight_reg [15:0] $end
$scope module adder $end
$var wire 16 Y# inb [15:0] $end
$var wire 17 Z# res [16:0] $end
$var wire 1 [# overflow $end
$var wire 16 \# out [15:0] $end
$var wire 16 ]# inbz [15:0] $end
$var wire 16 ^# inaz [15:0] $end
$var wire 16 _# ina [15:0] $end
$scope module ina_zoom $end
$var wire 16 `# out [15:0] $end
$var wire 16 a# in [15:0] $end
$var reg 8 b# ini [7:0] $end
$var reg 16 c# inr [15:0] $end
$var reg 8 d# outf [7:0] $end
$var reg 8 e# outi [7:0] $end
$var reg 1 f# overflow $end
$scope begin genblk10 $end
$upscope $end
$scope begin genblk7 $end
$upscope $end
$upscope $end
$scope module inb_zoom $end
$var wire 16 g# in [15:0] $end
$var wire 16 h# out [15:0] $end
$var reg 8 i# ini [7:0] $end
$var reg 16 j# inr [15:0] $end
$var reg 8 k# outf [7:0] $end
$var reg 8 l# outi [7:0] $end
$var reg 1 m# overflow $end
$scope begin genblk10 $end
$upscope $end
$scope begin genblk7 $end
$upscope $end
$upscope $end
$scope module res_zoom $end
$var wire 17 n# in [16:0] $end
$var wire 16 o# out [15:0] $end
$var reg 9 p# ini [8:0] $end
$var reg 17 q# inr [16:0] $end
$var reg 8 r# outf [7:0] $end
$var reg 8 s# outi [7:0] $end
$var reg 1 [# overflow $end
$scope begin genblk7 $end
$upscope $end
$scope begin genblk9 $end
$upscope $end
$upscope $end
$upscope $end
$scope module mult $end
$var wire 16 t# ina [15:0] $end
$var wire 16 u# inb [15:0] $end
$var wire 32 v# res [31:0] $end
$var wire 1 w# overflow $end
$var wire 16 x# out [15:0] $end
$scope module res_zoom $end
$var wire 32 y# in [31:0] $end
$var wire 16 z# out [15:0] $end
$var reg 16 {# ini [15:0] $end
$var reg 24 |# inr [23:0] $end
$var reg 8 }# outf [7:0] $end
$var reg 8 ~# outi [7:0] $end
$var reg 1 w# overflow $end
$scope begin genblk4 $end
$upscope $end
$scope begin genblk9 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module layer1 $end
$scope module acc_1 $end
$var reg 16 !$ \acc_mem_reg[0] [15:0] $end
$upscope $end
$upscope $end
$scope module layer1 $end
$scope module acc_2 $end
$var reg 16 "$ \acc_mem_reg[0] [15:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx "$
bx !$
b0 ~#
b0 }#
b0 |#
b0 {#
b0 z#
b0 y#
b0 x#
0w#
b0 v#
b0 u#
b0 t#
b0 s#
b0 r#
b0 q#
b0 p#
b0 o#
b0 n#
0m#
b0 l#
b0 k#
b0 j#
b0 i#
b0 h#
b0 g#
0f#
b0 e#
b0 d#
b0 c#
b0 b#
b0 a#
b0 `#
b0 _#
b0 ^#
b0 ]#
b0 \#
0[#
b0 Z#
b0 Y#
b0 X#
b0 W#
b0 V#
b0 U#
b0 T#
b0 S#
b0 R#
b0 Q#
b0 P#
b0 O#
b0 N#
b0 M#
b0 L#
bx K#
b0 J#
0I#
bx H#
b0 G#
bx F#
b0 E#
b0 D#
b0 C#
b0 B#
b0 A#
b0 @#
0?#
b0 >#
b0 =#
b0 <#
b0 ;#
b0 :#
b0 9#
08#
b0 7#
b0 6#
b0 5#
b0 4#
b0 3#
b0 2#
b0 1#
b0 0#
b0 /#
b0 .#
0-#
b0 ,#
b0 +#
b0 *#
b0 )#
b0 (#
b0 '#
b0 &#
b0 %#
b0 $#
bx ##
b0 "#
b0 !#
b0 ~"
b0 }"
b0 |"
b0 {"
b0 z"
0y"
b0 x"
b0 w"
b0 v"
b0 u"
b0 t"
b0 s"
b0 r"
b0 q"
b0 p"
0o"
b0 n"
b0 m"
b0 l"
b0 k"
b0 j"
b0 i"
0h"
b0 g"
b0 f"
b0 e"
b0 d"
b0 c"
b0 b"
b0 a"
b0 `"
b0 _"
b0 ^"
0]"
b0 \"
b0 ["
b0 Z"
b0 Y"
b0 X"
b0 W"
b0 V"
b0 U"
b0 T"
b0 S"
b0 R"
b0 Q"
b0 P"
b0 O"
b0 N"
bx M"
b0 L"
0K"
bx J"
b0 I"
bx H"
b0 G"
b0 F"
b0 E"
b0 D"
b0 C"
b0 B"
0A"
b0 @"
b0 ?"
b0 >"
b0 ="
b0 <"
b0 ;"
0:"
b0 9"
b0 8"
b0 7"
b0 6"
b0 5"
b0 4"
b0 3"
b0 2"
b0 1"
b0 0"
0/"
b0 ."
b0 -"
b0 ,"
b0 +"
b0 *"
b0 )"
b0 ("
b0 '"
b0 &"
bx %"
b0 $"
b0 #"
b0 ""
b0 !"
x~
x}
x|
x{
b0 z
b0 y
b0 x
b0 w
b0 v
b0 u
b0 t
b0 s
bx r
bx q
b0 p
b0 o
b0 n
b0 m
b0 l
bx k
b0 j
0i
bx h
bz g
b0 f
b0 e
b0 d
bz c
b0 b
b0 a
b0 `
b0 _
b0 ^
b0 ]
bx \
b0 [
0Z
bx Y
bz X
b0 W
b0 V
b0 U
bz T
b0 S
b0 R
b0 Q
bz P
b0 O
b0 N
bz M
b0 L
b1 K
bx J
bx I
b0 H
b0 G
b0 F
b1 E
bx D
bx C
b0 B
b0 A
x@
x?
0>
0=
bx <
bx ;
b0 :
b0 9
08
07
b0 6
b0 5
b0 4
b0 3
x2
x1
b0 0
b0 /
b0 .
b0 -
z,
0+
1*
0)
bz (
bz '
bz &
1%
0$
0#
b0 "
b0 !
$end
#5000
0%
#10000
0*
b0 J
0?
b0 H#
b0 K#
b0 ;
b0 I
b0 r
b0 ##
b0 F#
b0 "$
b0 D
0@
b0 J"
b0 M"
b0 <
b0 C
b0 q
b0 %"
b0 H"
b0 !$
b1 L
b1 K
b1 F
b1 E
1%
#15000
0%
#20000
1$
b100000000 !
b100000000 A
1#
0~
b1 K
b1 E
1%
#25000
0%
#30000
b101001000 0
b101001000 v
b101001000 S#
b11101000011 /
b11101000011 u
b11101000011 %#
b1111111010110101 .
b1111111010110101 t
b1111111010110101 U"
b1111100001110100 -
b1111100001110100 s
b1111100001110100 '"
b0 '
b0 P
b1111100010111010 &
b1111100010111010 M
b0 Y
b0 \
b0 h
b0 k
b11 (
b11 T
b11 X
b11 c
b11 g
1)
0$
0#
b1 J
b0 "$
b1 D
b100000000 !$
0}
02
0|
b1 K
b1 E
1%
#35000
0%
#40000
0)
b0 0
b0 v
b0 S#
b0 /
b0 u
b0 %#
b0 .
b0 t
b0 U"
b0 -
b0 s
b0 '"
b101001000 X#
b101001000 u#
b11101000011 *#
b11101000011 G#
b1111111010110101 Z"
b1111111010110101 w"
b1111100001110100 ,"
b1111100001110100 I"
b1 K
b1 E
1%
#45000
0%
#50000
1+
01
0{
b1 K
b1 E
1%
#55000
0%
#60000
0+
b11111000 G"
b111111000 D"
b1111100001110100 ("
b1111100001110100 0"
b1111100001110100 C"
b1110100 F"
b11111100001110100 E"
b11111000 9"
b11111000 6"
b11111100001110100 ."
b11111100001110100 B"
b1111100001110100 2"
b1111100001110100 4"
b1110100 8"
b1111100001110100 7"
b11111000 R"
b1111111111111000 O"
b1111100001110100 )"
b1111100001110100 3"
b1111100001110100 5"
b1111100001110100 L"
b1111100001110100 N"
b1110100 Q"
b111111111111100001110100 P"
b11111111111110000111010000000000 J"
b11111111111110000111010000000000 M"
b100000000 <
b100000000 C
b100000000 q
b100000000 %"
b100000000 H"
b0 D
1@
b1 K
b1 E
1%
#65000
0%
#70000
b0 G"
b0 D"
b0 ("
b0 0"
b0 C"
b0 F"
b11111110 u"
b111111110 r"
b1111111010110101 V"
b1111111010110101 ^"
b1111111010110101 q"
b10110101 t"
b0 E"
b11111111010110101 s"
b0 9"
b0 6"
b0 ."
b0 B"
b0 2"
b0 4"
b0 8"
b11111000 E#
b111111000 B#
b1111100001110100 &#
b1111100001110100 .#
b1111100001110100 A#
b1110100 D#
b11111110 g"
b11111110 d"
b11111111010110101 \"
b11111111010110101 p"
b1111111010110101 `"
b1111111010110101 b"
b10110101 f"
b0 7"
b11111100001110100 C#
b1111111010110101 e"
b0 R"
b0 O"
b0 )"
b0 3"
b0 5"
b0 L"
b0 N"
b0 Q"
b11111000 >#
b11111000 ;#
b11111100001110100 ,#
b11111100001110100 @#
b1111100001110100 /#
b1111100001110100 :#
b1110100 =#
b11111110 "#
b1111111111111110 }"
b1111111010110101 W"
b1111111010110101 a"
b1111111010110101 c"
b1111111010110101 z"
b1111111010110101 |"
b10110101 !#
b0 P"
b1111100001110100 <#
b111111111111111010110101 ~"
b0 J
1?
b0 J"
b0 M"
b0 <
b0 C
b0 q
b0 %"
b0 H"
0@
1~
b1111100001110100 z
b1111100001110100 +"
b1111100001110100 $#
b1111100001110100 +#
b1111100001110100 9#
b11111111111111101011010100000000 x"
b11111111111111101011010100000000 {"
b100000000 $"
b100000000 *"
b100000000 S"
b100000000 v"
b1 K
b1 E
1%
#75000
0%
#80000
b11111110 s#
b111111110 p#
b1111111010110101 T#
b1111111010110101 \#
b1111111010110101 o#
b10110101 r#
b0 E#
b0 B#
b0 &#
b0 .#
b0 A#
b0 D#
b11111111010110101 q#
b0 C#
b11111110 l#
b11111110 i#
b11111111010110101 Z#
b11111111010110101 n#
b1111111010110101 ]#
b1111111010110101 h#
b10110101 k#
b0 >#
b0 ;#
b0 ,#
b0 @#
b0 /#
b0 :#
b0 =#
b1111111010110101 j#
b0 <#
0?
12
1|
b1111100001110100 4
b1111100001110100 N
b1111100001110100 ""
b1111100001110100 )#
1}
b1111111010110101 y
b1111111010110101 Y"
b1111111010110101 R#
b1111111010110101 Y#
b1111111010110101 g#
b0x00000000 x
b100000000 X"
b0 z
b0 +"
b0 $#
b0 +#
b0 9#
0~
b1 K
b1 E
1%
#85000
0%
#90000
b0 s#
b0 p#
b0 T#
b0 \#
b0 o#
b0 r#
b0 q#
b11111111 a
b1111111111111111 ^
b1111111111010100 U
b1111111111010100 [
b1111111111010100 ]
b11010100 `
b0 l#
b0 i#
b0 Z#
b0 n#
b0 ]#
b0 h#
b0 k#
b111111111111111111010100 _
b0 j#
1>
b11111111111111111101001110001010 Y
b11111111111111111101001110001010 \
b1111000100101110 6
b1111000100101110 O
b1111000100101110 S
b1111000100101110 W
b0 y
b0 Y"
b0 R#
b0 Y#
b0 g#
0}
b0 4
b0 N
b0 ""
b0 )#
02
0|
11
1{
b1111111010110101 3
b1111111010110101 Q
b1111111010110101 !"
b1111111010110101 W#
b1 K
b1 E
1%
#95000
0%
#100000
b0 a
b0 ^
b0 U
b0 [
b0 ]
b0 `
b11111111 p
b1111111111111111 m
b1111111111111100 d
b1111111111111100 j
b1111111111111100 l
b11111100 o
b0 _
b111111111111111111111100 n
b0 Y
b0 \
b0 6
b0 O
b0 S
b0 W
0>
1=
b11111111111111111111110000011111 h
b11111111111111111111110000011111 k
b1111111010110101 5
b1111111010110101 R
b1111111010110101 b
b1111111010110101 f
18
b1111111111010100 :
b1111111111010100 B
b1111111111010100 V
b0 3
b0 Q
b0 !"
b0 W#
01
0{
b1 K
b1 E
1%
#105000
0%
#110000
b0 p
b0 m
b0 d
b0 j
b0 l
b0 o
b0 n
b1 D
b1111111111010100 !$
17
b1111111111111100 9
b1111111111111100 H
b1111111111111100 e
b0 :
b0 B
b0 V
08
b0 h
b0 k
b0 5
b0 R
b0 b
b0 f
0=
b1 K
b1 E
1%
#115000
0%
#120000
b1 J
b1111111111111100 "$
b0 9
b0 H
b0 e
07
b1 K
b1 E
1%
#125000
0%
#130000
b1 K
b1 E
1%
#135000
0%
#140000
b1 K
b1 E
1%
#145000
0%
#150000
b1 K
b1 E
1%
#155000
0%
#160000
b1 K
b1 E
1%
#165000
0%
#170000
b1 K
b1 E
1%
#175000
0%
#180000
b1 K
b1 E
1%
#185000
0%
#190000
b1 K
b1 E
1%
#195000
0%
#200000
b1 K
b1 E
1%
#205000
0%
#210000
b1 K
b1 E
1%
#215000
0%
#220000
b1 K
b1 E
1%
#225000
0%
#230000
b1 K
b1 E
1%
#235000
0%
#240000
b1 K
b1 E
1%
#245000
0%
#250000
b1 K
b1 E
1%
#255000
0%
#260000
b1111111100010101 &
b1111111100010101 M
b101111111 /
b101111111 u
b101111111 %#
b1111001101000011 -
b1111001101000011 s
b1111001101000011 '"
1)
b1 K
b1 E
1%
#265000
0%
#270000
1+
0)
b0 u"
b0 r"
b0 V"
b0 ^"
b0 q"
b0 t"
b0 s"
b0 g"
b0 d"
b0 \"
b0 p"
b0 `"
b0 b"
b0 f"
b0 e"
b0 "#
b0 }"
b0 W"
b0 a"
b0 c"
b0 z"
b0 |"
b0 !#
b0 ~"
b1111001101000011 ,"
b1111001101000011 I"
b0 x"
b0 {"
b0 Z"
b0 w"
b101111111 *#
b101111111 G#
b0 X#
b0 u#
b1 K
b1 E
1%
#275000
0%
#280000
0+
b10 G"
b10 D"
b1000110000 ("
b1000110000 0"
b1000110000 C"
b110000 F"
b1000110000 E"
b10 9"
b10 6"
b1000110000 ."
b1000110000 B"
b1000110000 2"
b1000110000 4"
b110000 8"
b1000110000 7"
b10 R"
b10 O"
b1000110000 )"
b1000110000 3"
b1000110000 5"
b1000110000 L"
b1000110000 N"
b110000 Q"
b1000110000 P"
b100011000001111100 J"
b100011000001111100 M"
b1111111111010100 <
b1111111111010100 C
b1111111111010100 q
b1111111111010100 %"
b1111111111010100 H"
b0 D
1@
b1 K
b1 E
1%
#285000
0%
#290000
b0 G"
b0 D"
b0 ("
b0 0"
b0 C"
b0 F"
b0 E"
b11111111 7#
b11111111 4#
b1111111111111010 0#
b1111111111111010 2#
b11111010 6#
b0 9"
b0 6"
b0 ."
b0 B"
b0 2"
b0 4"
b0 8"
b10 E#
b10 B#
b1000101010 &#
b1000101010 .#
b1000101010 A#
b101010 D#
b1111111111111010 5#
b0 7"
b1000101010 C#
b11111111 P#
b1111111111111111 M#
b1111111111111010 '#
b1111111111111010 1#
b1111111111111010 3#
b1111111111111010 J#
b1111111111111010 L#
b11111010 O#
b0 R"
b0 O"
b0 )"
b0 3"
b0 5"
b0 L"
b0 N"
b0 Q"
b10 >#
b10 ;#
b1000101010 ,#
b1000101010 @#
b1000110000 /#
b1000110000 :#
b110000 =#
b111111111111111111111010 N#
b0 P"
b1000110000 <#
b11111111111111111111101000000100 H#
b11111111111111111111101000000100 K#
b1111111111111100 ;
b1111111111111100 I
b1111111111111100 r
b1111111111111100 ##
b1111111111111100 F#
b0 J
1?
b0 J"
b0 M"
b0 <
b0 C
b0 q
b0 %"
b0 H"
0@
1~
b1000110000 z
b1000110000 +"
b1000110000 $#
b1000110000 +#
b1000110000 9#
b1111111111010100 $"
b1111111111010100 *"
b1111111111010100 S"
b1111111111010100 v"
b1 K
b1 E
1%
#295000
0%
#300000
b0 7#
b0 4#
b0 0#
b0 2#
b0 6#
b0 E#
b0 B#
b0 &#
b0 .#
b0 A#
b0 D#
b0 5#
b0 C#
b0 P#
b0 M#
b0 '#
b0 1#
b0 3#
b0 J#
b0 L#
b0 O#
b0 >#
b0 ;#
b0 ,#
b0 @#
b0 /#
b0 :#
b0 =#
b0 N#
b0 <#
b0 H#
b0 K#
b0 ;
b0 I
b0 r
b0 ##
b0 F#
0?
12
1|
b1000101010 4
b1000101010 N
b1000101010 ""
b1000101010 )#
b1111111111111100 #"
b1111111111111100 (#
b1111111111111100 Q#
b1111111111111100 t#
1}
bx0x0x00 x
b1111111111010100 X"
b0 z
b0 +"
b0 $#
b0 +#
b0 9#
0~
b1 K
b1 E
1%
#305000
0%
#310000
b100 U
b100 [
b100 ]
b100 `
b100 _
1>
b1110111101 Y
b1110111101 \
b100111111 6
b100111111 O
b100111111 S
b100111111 W
0}
b0 4
b0 N
b0 ""
b0 )#
02
0|
11
1{
bx00 x
b1111111111111100 V#
b1 K
b1 E
1%
#315000
0%
#320000
b0 U
b0 [
b0 ]
b0 `
b0 _
b0 Y
b0 \
b0 6
b0 O
b0 S
b0 W
0>
1=
18
b100111111 :
b100111111 B
b100111111 V
01
0{
b1 K
b1 E
1%
#325000
0%
#330000
b1 D
b100111111 !$
17
b0 :
b0 B
b0 V
08
0=
b1 K
b1 E
1%
#335000
0%
#340000
b1 J
b0 "$
07
b1 K
b1 E
1%
#345000
0%
#350000
b1 K
b1 E
1%
#355000
0%
#360000
b1 K
b1 E
1%
#365000
0%
#370000
b1 K
b1 E
1%
#375000
0%
#380000
b1 K
b1 E
1%
#385000
0%
#390000
b1 K
b1 E
1%
#395000
0%
#400000
b1 K
b1 E
1%
#405000
0%
#410000
b1 K
b1 E
1%
#415000
0%
#420000
b1 K
b1 E
1%
#425000
0%
#430000
b1 K
b1 E
1%
#435000
0%
#440000
b1 K
b1 E
1%
#445000
0%
#450000
b1 K
b1 E
1%
#455000
0%
#460000
b1 K
b1 E
1%
#465000
0%
#470000
b1 K
b1 E
1%
#475000
0%
#480000
b1 K
b1 E
1%
#485000
0%
#490000
b1 K
b1 E
1%
#495000
0%
#500000
b1 K
b1 E
1%
#505000
0%
#510000
b1 K
b1 E
1%
#515000
0%
#520000
b1 K
b1 E
1%
#525000
0%
#530000
b1 K
b1 E
1%
#535000
0%
#540000
b1 K
b1 E
1%
#545000
0%
#550000
b1 K
b1 E
1%
#555000
0%
#560000
b1 K
b1 E
1%
#565000
0%
#570000
b1 K
b1 E
1%
#575000
0%
#580000
b1 K
b1 E
1%
#580001
