$date
	Thu May 22 16:39:55 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module layer1 $end
$var wire 1 ! clk $end
$var wire 16 " nn_data_in_1 [15:0] $end
$var wire 16 # nn_data_in_2 [15:0] $end
$var wire 1 $ nn_start $end
$var wire 16 % nn_temp_bias_1 [15:0] $end
$var wire 16 & nn_temp_bias_2 [15:0] $end
$var wire 16 ' nn_temp_leak_factor [15:0] $end
$var wire 16 ( nn_temp_weight_11 [15:0] $end
$var wire 16 ) nn_temp_weight_12 [15:0] $end
$var wire 16 * nn_temp_weight_21 [15:0] $end
$var wire 16 + nn_temp_weight_22 [15:0] $end
$var wire 1 , nn_valid_in_1 $end
$var wire 1 - nn_valid_in_2 $end
$var wire 1 . nn_valid_load_weights $end
$var wire 1 / rst $end
$var wire 1 0 valid_out_22 $end
$var wire 1 1 valid_out_21 $end
$var wire 16 2 sys_data_out_22 [15:0] $end
$var wire 16 3 sys_data_out_21 [15:0] $end
$var wire 16 4 out_22_bias [15:0] $end
$var wire 16 5 out_21_bias [15:0] $end
$var wire 1 6 lr_valid_out_22 $end
$var wire 1 7 lr_valid_out_21 $end
$var wire 16 8 lr_data_out2 [15:0] $end
$var wire 16 9 lr_data_out1 [15:0] $end
$var wire 16 : input_21 [15:0] $end
$var wire 16 ; input_11 [15:0] $end
$var wire 1 < bias_valid_out_22 $end
$var wire 1 = bias_valid_out_21 $end
$var wire 1 > acc_valid_out_2 $end
$var wire 1 ? acc_valid_out_1 $end
$scope module acc_1 $end
$var wire 16 @ acc_data_nn_in [15:0] $end
$var wire 1 , acc_valid_data_nn_in $end
$var wire 1 $ acc_valid_in $end
$var wire 1 ! clk $end
$var wire 1 / rst $end
$var wire 1 7 acc_valid_data_in $end
$var wire 16 A acc_data_in [15:0] $end
$var reg 16 B acc_data_out [15:0] $end
$var reg 1 ? acc_valid_out $end
$var reg 8 C counter [7:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 D i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop1 $end
$var integer 32 E i [31:0] $end
$upscope $end
$upscope $end
$scope module acc_2 $end
$var wire 16 F acc_data_nn_in [15:0] $end
$var wire 1 - acc_valid_data_nn_in $end
$var wire 1 ? acc_valid_in $end
$var wire 1 ! clk $end
$var wire 1 / rst $end
$var wire 1 6 acc_valid_data_in $end
$var wire 16 G acc_data_in [15:0] $end
$var reg 16 H acc_data_out [15:0] $end
$var reg 1 > acc_valid_out $end
$var reg 8 I counter [7:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 J i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop1 $end
$var integer 32 K i [31:0] $end
$upscope $end
$upscope $end
$scope module bias_21 $end
$var wire 16 L bias_temp_bias [15:0] $end
$var wire 1 ! clk $end
$var wire 1 / rst $end
$var wire 1 1 bias_valid_in $end
$var wire 16 M bias_data_in [15:0] $end
$var wire 16 N add_out [15:0] $end
$var reg 16 O bias_data_out [15:0] $end
$var reg 1 = bias_valid_out $end
$scope module add_inst $end
$var wire 16 P inb [15:0] $end
$var wire 17 Q res [16:0] $end
$var wire 1 R overflow $end
$var wire 16 S out [15:0] $end
$var wire 16 T inbz [15:0] $end
$var wire 16 U inaz [15:0] $end
$var wire 16 V ina [15:0] $end
$scope module ina_zoom $end
$var wire 16 W out [15:0] $end
$var wire 16 X in [15:0] $end
$var reg 8 Y ini [7:0] $end
$var reg 16 Z inr [15:0] $end
$var reg 8 [ outf [7:0] $end
$var reg 8 \ outi [7:0] $end
$var reg 1 ] overflow $end
$scope begin genblk10 $end
$upscope $end
$scope begin genblk7 $end
$upscope $end
$upscope $end
$scope module inb_zoom $end
$var wire 16 ^ in [15:0] $end
$var wire 16 _ out [15:0] $end
$var reg 8 ` ini [7:0] $end
$var reg 16 a inr [15:0] $end
$var reg 8 b outf [7:0] $end
$var reg 8 c outi [7:0] $end
$var reg 1 d overflow $end
$scope begin genblk10 $end
$upscope $end
$scope begin genblk7 $end
$upscope $end
$upscope $end
$scope module res_zoom $end
$var wire 17 e in [16:0] $end
$var wire 16 f out [15:0] $end
$var reg 9 g ini [8:0] $end
$var reg 17 h inr [16:0] $end
$var reg 8 i outf [7:0] $end
$var reg 8 j outi [7:0] $end
$var reg 1 R overflow $end
$scope begin genblk7 $end
$upscope $end
$scope begin genblk9 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module bias_22 $end
$var wire 16 k bias_temp_bias [15:0] $end
$var wire 1 ! clk $end
$var wire 1 / rst $end
$var wire 1 0 bias_valid_in $end
$var wire 16 l bias_data_in [15:0] $end
$var wire 16 m add_out [15:0] $end
$var reg 16 n bias_data_out [15:0] $end
$var reg 1 < bias_valid_out $end
$scope module add_inst $end
$var wire 16 o inb [15:0] $end
$var wire 17 p res [16:0] $end
$var wire 1 q overflow $end
$var wire 16 r out [15:0] $end
$var wire 16 s inbz [15:0] $end
$var wire 16 t inaz [15:0] $end
$var wire 16 u ina [15:0] $end
$scope module ina_zoom $end
$var wire 16 v out [15:0] $end
$var wire 16 w in [15:0] $end
$var reg 8 x ini [7:0] $end
$var reg 16 y inr [15:0] $end
$var reg 8 z outf [7:0] $end
$var reg 8 { outi [7:0] $end
$var reg 1 | overflow $end
$scope begin genblk10 $end
$upscope $end
$scope begin genblk7 $end
$upscope $end
$upscope $end
$scope module inb_zoom $end
$var wire 16 } in [15:0] $end
$var wire 16 ~ out [15:0] $end
$var reg 8 !" ini [7:0] $end
$var reg 16 "" inr [15:0] $end
$var reg 8 #" outf [7:0] $end
$var reg 8 $" outi [7:0] $end
$var reg 1 %" overflow $end
$scope begin genblk10 $end
$upscope $end
$scope begin genblk7 $end
$upscope $end
$upscope $end
$scope module res_zoom $end
$var wire 17 &" in [16:0] $end
$var wire 16 '" out [15:0] $end
$var reg 9 (" ini [8:0] $end
$var reg 17 )" inr [16:0] $end
$var reg 8 *" outf [7:0] $end
$var reg 8 +" outi [7:0] $end
$var reg 1 q overflow $end
$scope begin genblk7 $end
$upscope $end
$scope begin genblk9 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module leaky_relu_21 $end
$var wire 1 ! clk $end
$var wire 16 ," lr_data_in [15:0] $end
$var wire 16 -" lr_temp_leak_factor [15:0] $end
$var wire 1 = lr_valid_in $end
$var wire 1 / rst $end
$var wire 16 ." mul_out [15:0] $end
$var reg 16 /" lr_data_out [15:0] $end
$var reg 1 7 lr_valid_out $end
$scope module mul_inst $end
$var wire 16 0" ina [15:0] $end
$var wire 16 1" inb [15:0] $end
$var wire 32 2" res [31:0] $end
$var wire 1 3" overflow $end
$var wire 16 4" out [15:0] $end
$scope module res_zoom $end
$var wire 32 5" in [31:0] $end
$var wire 16 6" out [15:0] $end
$var reg 16 7" ini [15:0] $end
$var reg 24 8" inr [23:0] $end
$var reg 8 9" outf [7:0] $end
$var reg 8 :" outi [7:0] $end
$var reg 1 3" overflow $end
$scope begin genblk4 $end
$upscope $end
$scope begin genblk9 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module leaky_relu_22 $end
$var wire 1 ! clk $end
$var wire 16 ;" lr_data_in [15:0] $end
$var wire 16 <" lr_temp_leak_factor [15:0] $end
$var wire 1 < lr_valid_in $end
$var wire 1 / rst $end
$var wire 16 =" mul_out [15:0] $end
$var reg 16 >" lr_data_out [15:0] $end
$var reg 1 6 lr_valid_out $end
$scope module mul_inst $end
$var wire 16 ?" ina [15:0] $end
$var wire 16 @" inb [15:0] $end
$var wire 32 A" res [31:0] $end
$var wire 1 B" overflow $end
$var wire 16 C" out [15:0] $end
$scope module res_zoom $end
$var wire 32 D" in [31:0] $end
$var wire 16 E" out [15:0] $end
$var reg 16 F" ini [15:0] $end
$var reg 24 G" inr [23:0] $end
$var reg 8 H" outf [7:0] $end
$var reg 8 I" outi [7:0] $end
$var reg 1 B" overflow $end
$scope begin genblk4 $end
$upscope $end
$scope begin genblk9 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module systolic_inst $end
$var wire 1 ! clk $end
$var wire 1 / rst $end
$var wire 16 J" sys_data_in_11 [15:0] $end
$var wire 16 K" sys_data_in_12 [15:0] $end
$var wire 1 ? sys_start $end
$var wire 16 L" sys_temp_weight_11 [15:0] $end
$var wire 16 M" sys_temp_weight_12 [15:0] $end
$var wire 16 N" sys_temp_weight_21 [15:0] $end
$var wire 16 O" sys_temp_weight_22 [15:0] $end
$var wire 1 . sys_valid_load_weights $end
$var wire 1 1 sys_valid_out_21 $end
$var wire 1 0 sys_valid_out_22 $end
$var wire 16 P" zero_wire_inputs [15:0] $end
$var wire 16 Q" zero_wire_outputs [15:0] $end
$var wire 16 R" sys_data_out_22 [15:0] $end
$var wire 16 S" sys_data_out_21 [15:0] $end
$var wire 16 T" psum_12 [15:0] $end
$var wire 16 U" psum_11 [15:0] $end
$var wire 1 V" pe_valid_out_22 $end
$var wire 1 W" pe_valid_out_21 $end
$var wire 1 X" pe_valid_out_12 $end
$var wire 1 Y" pe_valid_out_11 $end
$var wire 16 Z" input_21_out [15:0] $end
$var wire 16 [" input_11_out [15:0] $end
$scope module pe11 $end
$var wire 1 ! clk $end
$var wire 16 \" input_in [15:0] $end
$var wire 1 . load_weight $end
$var wire 1 ? pe_valid_in $end
$var wire 16 ]" psum_in [15:0] $end
$var wire 1 / rst $end
$var wire 16 ^" weight [15:0] $end
$var wire 16 _" psum_reg [15:0] $end
$var wire 16 `" mult_out [15:0] $end
$var reg 16 a" input_out [15:0] $end
$var reg 1 Y" pe_valid_out $end
$var reg 16 b" psum_out [15:0] $end
$var reg 16 c" weight_reg [15:0] $end
$scope module adder $end
$var wire 16 d" inb [15:0] $end
$var wire 17 e" res [16:0] $end
$var wire 1 f" overflow $end
$var wire 16 g" out [15:0] $end
$var wire 16 h" inbz [15:0] $end
$var wire 16 i" inaz [15:0] $end
$var wire 16 j" ina [15:0] $end
$scope module ina_zoom $end
$var wire 16 k" out [15:0] $end
$var wire 16 l" in [15:0] $end
$var reg 8 m" ini [7:0] $end
$var reg 16 n" inr [15:0] $end
$var reg 8 o" outf [7:0] $end
$var reg 8 p" outi [7:0] $end
$var reg 1 q" overflow $end
$scope begin genblk10 $end
$upscope $end
$scope begin genblk7 $end
$upscope $end
$upscope $end
$scope module inb_zoom $end
$var wire 16 r" in [15:0] $end
$var wire 16 s" out [15:0] $end
$var reg 8 t" ini [7:0] $end
$var reg 16 u" inr [15:0] $end
$var reg 8 v" outf [7:0] $end
$var reg 8 w" outi [7:0] $end
$var reg 1 x" overflow $end
$scope begin genblk10 $end
$upscope $end
$scope begin genblk7 $end
$upscope $end
$upscope $end
$scope module res_zoom $end
$var wire 17 y" in [16:0] $end
$var wire 16 z" out [15:0] $end
$var reg 9 {" ini [8:0] $end
$var reg 17 |" inr [16:0] $end
$var reg 8 }" outf [7:0] $end
$var reg 8 ~" outi [7:0] $end
$var reg 1 f" overflow $end
$scope begin genblk7 $end
$upscope $end
$scope begin genblk9 $end
$upscope $end
$upscope $end
$upscope $end
$scope module mult $end
$var wire 16 !# ina [15:0] $end
$var wire 16 "# inb [15:0] $end
$var wire 32 ## res [31:0] $end
$var wire 1 $# overflow $end
$var wire 16 %# out [15:0] $end
$scope module res_zoom $end
$var wire 32 &# in [31:0] $end
$var wire 16 '# out [15:0] $end
$var reg 16 (# ini [15:0] $end
$var reg 24 )# inr [23:0] $end
$var reg 8 *# outf [7:0] $end
$var reg 8 +# outi [7:0] $end
$var reg 1 $# overflow $end
$scope begin genblk4 $end
$upscope $end
$scope begin genblk9 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module pe12 $end
$var wire 1 ! clk $end
$var wire 16 ,# input_in [15:0] $end
$var wire 1 . load_weight $end
$var wire 1 Y" pe_valid_in $end
$var wire 16 -# psum_in [15:0] $end
$var wire 1 / rst $end
$var wire 16 .# weight [15:0] $end
$var wire 16 /# psum_reg [15:0] $end
$var wire 16 0# mult_out [15:0] $end
$var reg 16 1# input_out [15:0] $end
$var reg 1 X" pe_valid_out $end
$var reg 16 2# psum_out [15:0] $end
$var reg 16 3# weight_reg [15:0] $end
$scope module adder $end
$var wire 16 4# inb [15:0] $end
$var wire 17 5# res [16:0] $end
$var wire 1 6# overflow $end
$var wire 16 7# out [15:0] $end
$var wire 16 8# inbz [15:0] $end
$var wire 16 9# inaz [15:0] $end
$var wire 16 :# ina [15:0] $end
$scope module ina_zoom $end
$var wire 16 ;# out [15:0] $end
$var wire 16 <# in [15:0] $end
$var reg 8 =# ini [7:0] $end
$var reg 16 ># inr [15:0] $end
$var reg 8 ?# outf [7:0] $end
$var reg 8 @# outi [7:0] $end
$var reg 1 A# overflow $end
$scope begin genblk10 $end
$upscope $end
$scope begin genblk7 $end
$upscope $end
$upscope $end
$scope module inb_zoom $end
$var wire 16 B# in [15:0] $end
$var wire 16 C# out [15:0] $end
$var reg 8 D# ini [7:0] $end
$var reg 16 E# inr [15:0] $end
$var reg 8 F# outf [7:0] $end
$var reg 8 G# outi [7:0] $end
$var reg 1 H# overflow $end
$scope begin genblk10 $end
$upscope $end
$scope begin genblk7 $end
$upscope $end
$upscope $end
$scope module res_zoom $end
$var wire 17 I# in [16:0] $end
$var wire 16 J# out [15:0] $end
$var reg 9 K# ini [8:0] $end
$var reg 17 L# inr [16:0] $end
$var reg 8 M# outf [7:0] $end
$var reg 8 N# outi [7:0] $end
$var reg 1 6# overflow $end
$scope begin genblk7 $end
$upscope $end
$scope begin genblk9 $end
$upscope $end
$upscope $end
$upscope $end
$scope module mult $end
$var wire 16 O# ina [15:0] $end
$var wire 16 P# inb [15:0] $end
$var wire 32 Q# res [31:0] $end
$var wire 1 R# overflow $end
$var wire 16 S# out [15:0] $end
$scope module res_zoom $end
$var wire 32 T# in [31:0] $end
$var wire 16 U# out [15:0] $end
$var reg 16 V# ini [15:0] $end
$var reg 24 W# inr [23:0] $end
$var reg 8 X# outf [7:0] $end
$var reg 8 Y# outi [7:0] $end
$var reg 1 R# overflow $end
$scope begin genblk4 $end
$upscope $end
$scope begin genblk9 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module pe21 $end
$var wire 1 ! clk $end
$var wire 16 Z# input_in [15:0] $end
$var wire 1 . load_weight $end
$var wire 1 Y" pe_valid_in $end
$var wire 16 [# psum_in [15:0] $end
$var wire 1 / rst $end
$var wire 16 \# weight [15:0] $end
$var wire 16 ]# psum_reg [15:0] $end
$var wire 16 ^# mult_out [15:0] $end
$var reg 16 _# input_out [15:0] $end
$var reg 1 W" pe_valid_out $end
$var reg 16 `# psum_out [15:0] $end
$var reg 16 a# weight_reg [15:0] $end
$scope module adder $end
$var wire 16 b# inb [15:0] $end
$var wire 17 c# res [16:0] $end
$var wire 1 d# overflow $end
$var wire 16 e# out [15:0] $end
$var wire 16 f# inbz [15:0] $end
$var wire 16 g# inaz [15:0] $end
$var wire 16 h# ina [15:0] $end
$scope module ina_zoom $end
$var wire 16 i# out [15:0] $end
$var wire 16 j# in [15:0] $end
$var reg 8 k# ini [7:0] $end
$var reg 16 l# inr [15:0] $end
$var reg 8 m# outf [7:0] $end
$var reg 8 n# outi [7:0] $end
$var reg 1 o# overflow $end
$scope begin genblk10 $end
$upscope $end
$scope begin genblk7 $end
$upscope $end
$upscope $end
$scope module inb_zoom $end
$var wire 16 p# in [15:0] $end
$var wire 16 q# out [15:0] $end
$var reg 8 r# ini [7:0] $end
$var reg 16 s# inr [15:0] $end
$var reg 8 t# outf [7:0] $end
$var reg 8 u# outi [7:0] $end
$var reg 1 v# overflow $end
$scope begin genblk10 $end
$upscope $end
$scope begin genblk7 $end
$upscope $end
$upscope $end
$scope module res_zoom $end
$var wire 17 w# in [16:0] $end
$var wire 16 x# out [15:0] $end
$var reg 9 y# ini [8:0] $end
$var reg 17 z# inr [16:0] $end
$var reg 8 {# outf [7:0] $end
$var reg 8 |# outi [7:0] $end
$var reg 1 d# overflow $end
$scope begin genblk7 $end
$upscope $end
$scope begin genblk9 $end
$upscope $end
$upscope $end
$upscope $end
$scope module mult $end
$var wire 16 }# ina [15:0] $end
$var wire 16 ~# inb [15:0] $end
$var wire 32 !$ res [31:0] $end
$var wire 1 "$ overflow $end
$var wire 16 #$ out [15:0] $end
$scope module res_zoom $end
$var wire 32 $$ in [31:0] $end
$var wire 16 %$ out [15:0] $end
$var reg 16 &$ ini [15:0] $end
$var reg 24 '$ inr [23:0] $end
$var reg 8 ($ outf [7:0] $end
$var reg 8 )$ outi [7:0] $end
$var reg 1 "$ overflow $end
$scope begin genblk4 $end
$upscope $end
$scope begin genblk9 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module pe22 $end
$var wire 1 ! clk $end
$var wire 16 *$ input_in [15:0] $end
$var wire 1 . load_weight $end
$var wire 1 X" pe_valid_in $end
$var wire 16 +$ psum_in [15:0] $end
$var wire 1 / rst $end
$var wire 16 ,$ weight [15:0] $end
$var wire 16 -$ psum_reg [15:0] $end
$var wire 16 .$ mult_out [15:0] $end
$var reg 16 /$ input_out [15:0] $end
$var reg 1 V" pe_valid_out $end
$var reg 16 0$ psum_out [15:0] $end
$var reg 16 1$ weight_reg [15:0] $end
$scope module adder $end
$var wire 16 2$ inb [15:0] $end
$var wire 17 3$ res [16:0] $end
$var wire 1 4$ overflow $end
$var wire 16 5$ out [15:0] $end
$var wire 16 6$ inbz [15:0] $end
$var wire 16 7$ inaz [15:0] $end
$var wire 16 8$ ina [15:0] $end
$scope module ina_zoom $end
$var wire 16 9$ out [15:0] $end
$var wire 16 :$ in [15:0] $end
$var reg 8 ;$ ini [7:0] $end
$var reg 16 <$ inr [15:0] $end
$var reg 8 =$ outf [7:0] $end
$var reg 8 >$ outi [7:0] $end
$var reg 1 ?$ overflow $end
$scope begin genblk10 $end
$upscope $end
$scope begin genblk7 $end
$upscope $end
$upscope $end
$scope module inb_zoom $end
$var wire 16 @$ in [15:0] $end
$var wire 16 A$ out [15:0] $end
$var reg 8 B$ ini [7:0] $end
$var reg 16 C$ inr [15:0] $end
$var reg 8 D$ outf [7:0] $end
$var reg 8 E$ outi [7:0] $end
$var reg 1 F$ overflow $end
$scope begin genblk10 $end
$upscope $end
$scope begin genblk7 $end
$upscope $end
$upscope $end
$scope module res_zoom $end
$var wire 17 G$ in [16:0] $end
$var wire 16 H$ out [15:0] $end
$var reg 9 I$ ini [8:0] $end
$var reg 17 J$ inr [16:0] $end
$var reg 8 K$ outf [7:0] $end
$var reg 8 L$ outi [7:0] $end
$var reg 1 4$ overflow $end
$scope begin genblk7 $end
$upscope $end
$scope begin genblk9 $end
$upscope $end
$upscope $end
$upscope $end
$scope module mult $end
$var wire 16 M$ ina [15:0] $end
$var wire 16 N$ inb [15:0] $end
$var wire 32 O$ res [31:0] $end
$var wire 1 P$ overflow $end
$var wire 16 Q$ out [15:0] $end
$scope module res_zoom $end
$var wire 32 R$ in [31:0] $end
$var wire 16 S$ out [15:0] $end
$var reg 16 T$ ini [15:0] $end
$var reg 24 U$ inr [23:0] $end
$var reg 8 V$ outf [7:0] $end
$var reg 8 W$ outi [7:0] $end
$var reg 1 P$ overflow $end
$scope begin genblk4 $end
$upscope $end
$scope begin genblk9 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module layer1 $end
$scope module acc_1 $end
$var reg 16 X$ \acc_mem_reg[0] [15:0] $end
$upscope $end
$upscope $end
$scope module layer1 $end
$scope module acc_2 $end
$var reg 16 Y$ \acc_mem_reg[0] [15:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx Y$
bx X$
b0 W$
b0 V$
b0 U$
b0 T$
b0 S$
b0 R$
b0 Q$
0P$
b0 O$
b0 N$
b0 M$
b0 L$
b0 K$
b0 J$
b0 I$
b0 H$
b0 G$
0F$
b0 E$
b0 D$
b0 C$
b0 B$
b0 A$
b0 @$
0?$
b0 >$
b0 =$
b0 <$
b0 ;$
b0 :$
b0 9$
b0 8$
b0 7$
b0 6$
b0 5$
04$
b0 3$
b0 2$
b0 1$
b0 0$
b0 /$
b0 .$
b0 -$
b0 ,$
b0 +$
b0 *$
b0 )$
b0 ($
b0 '$
b0 &$
b0 %$
bx $$
b0 #$
0"$
bx !$
b0 ~#
bx }#
b0 |#
b0 {#
b0 z#
b0 y#
b0 x#
b0 w#
0v#
b0 u#
b0 t#
b0 s#
b0 r#
b0 q#
b0 p#
0o#
b0 n#
b0 m#
b0 l#
b0 k#
b0 j#
b0 i#
b0 h#
b0 g#
b0 f#
b0 e#
0d#
b0 c#
b0 b#
b0 a#
b0 `#
b0 _#
b0 ^#
b0 ]#
b0 \#
b0 [#
bx Z#
b0 Y#
b0 X#
b0 W#
b0 V#
b0 U#
b0 T#
b0 S#
0R#
b0 Q#
b0 P#
b0 O#
b0 N#
b0 M#
b0 L#
b0 K#
b0 J#
b0 I#
0H#
b0 G#
b0 F#
b0 E#
b0 D#
b0 C#
b0 B#
0A#
b0 @#
b0 ?#
b0 >#
b0 =#
b0 <#
b0 ;#
b0 :#
b0 9#
b0 8#
b0 7#
06#
b0 5#
b0 4#
b0 3#
b0 2#
b0 1#
b0 0#
b0 /#
b0 .#
b0 -#
b0 ,#
b0 +#
b0 *#
b0 )#
b0 (#
b0 '#
bx &#
b0 %#
0$#
bx ##
b0 "#
bx !#
b0 ~"
b0 }"
b0 |"
b0 {"
b0 z"
b0 y"
0x"
b0 w"
b0 v"
b0 u"
b0 t"
b0 s"
b0 r"
0q"
b0 p"
b0 o"
b0 n"
b0 m"
b0 l"
b0 k"
b0 j"
b0 i"
b0 h"
b0 g"
0f"
b0 e"
b0 d"
b0 c"
b0 b"
b0 a"
b0 `"
b0 _"
b0 ^"
b0 ]"
bx \"
b0 ["
b0 Z"
xY"
xX"
xW"
xV"
b0 U"
b0 T"
b0 S"
b0 R"
b0 Q"
b0 P"
b0 O"
b0 N"
b0 M"
b0 L"
bx K"
bx J"
b0 I"
b0 H"
b0 G"
b0 F"
b0 E"
bx D"
b0 C"
0B"
bx A"
bz @"
b0 ?"
b0 >"
b0 ="
bz <"
b0 ;"
b0 :"
b0 9"
b0 8"
b0 7"
b0 6"
bx 5"
b0 4"
03"
bx 2"
bz 1"
b0 0"
b0 /"
b0 ."
bz -"
b0 ,"
bx +"
bx *"
bx )"
bx ("
bx '"
bx &"
0%"
bz $"
bz #"
bz ""
bz !"
bz ~
bz }
0|
b0 {
b0 z
b0 y
b0 x
b0 w
b0 v
b0 u
b0 t
bz s
bx r
0q
bx p
bz o
b0 n
bx m
b0 l
bz k
bx j
bx i
bx h
bx g
bx f
bx e
0d
bz c
bz b
bz a
bz `
bz _
bz ^
0]
b0 \
b0 [
b0 Z
b0 Y
b0 X
b0 W
b0 V
b0 U
bz T
bx S
0R
bx Q
bz P
b0 O
bx N
b0 M
bz L
b0 K
b1 J
bx I
bx H
b0 G
b0 F
b0 E
b1 D
bx C
bx B
b0 A
b0 @
x?
x>
0=
0<
bx ;
bx :
b0 9
b0 8
07
06
b0 5
b0 4
b0 3
b0 2
x1
x0
1/
0.
0-
0,
b0 +
b0 *
b0 )
b0 (
bz '
bz &
bz %
0$
b0 #
b0 "
1!
$end
#5000
0!
#10000
0/
b0 I
0>
b0 !$
b0 $$
b0 :
b0 H
b0 K"
b0 Z#
b0 }#
b0 Y$
b0 C
0?
b0 ##
b0 &#
b0 ;
b0 B
b0 J"
b0 \"
b0 !#
b0 X$
b1 K
b1 J
b1 E
b1 D
1!
#15000
0!
#20000
1-
b100000000 "
b100000000 @
1,
0Y"
b1 J
b1 D
1!
#25000
0!
#30000
b0 +"
b0 ("
b0 m
b0 r
b0 '"
b0 *"
b0 j
b0 g
b1000000 N
b1000000 S
b1000000 f
b1000000 i
b0 )"
b1000000 h
b0 p
b0 &"
b0 $"
b0 !"
b0 s
b0 ~
b0 #"
b1000000 Q
b1000000 e
b0 c
b0 `
b1000000 T
b1000000 _
b1000000 b
b0 ""
b1000000 a
b100010001 +
b100010001 O"
b100010001 ,$
b1111111100011110 *
b1111111100011110 N"
b1111111100011110 \#
b1111111011101111 )
b1111111011101111 M"
b1111111011101111 .#
b11100010 (
b11100010 L"
b11100010 ^"
b0 &
b0 k
b0 o
b0 }
b1000000 %
b1000000 L
b1000000 P
b1000000 ^
b0 2"
b0 5"
b0 A"
b0 D"
b11 '
b11 -"
b11 1"
b11 <"
b11 @"
1.
0-
0,
b1 I
b0 Y$
b1 C
b100000000 X$
0X"
01
0W"
b1 J
b1 D
1!
#35000
0!
#40000
0.
b0 +
b0 O"
b0 ,$
b0 *
b0 N"
b0 \#
b0 )
b0 M"
b0 .#
b0 (
b0 L"
b0 ^"
b100010001 1$
b100010001 N$
b1111111100011110 a#
b1111111100011110 ~#
b1111111011101111 3#
b1111111011101111 P#
b11100010 c"
b11100010 "#
b1 J
b1 D
1!
#45000
0!
#50000
1$
00
0V"
b1 J
b1 D
1!
#55000
0!
#60000
0$
b11100010 _"
b11100010 g"
b11100010 z"
b11100010 }"
b11100010 |"
b11100010 e"
b11100010 y"
b11100010 i"
b11100010 k"
b11100010 o"
b11100010 n"
b11100010 `"
b11100010 j"
b11100010 l"
b11100010 %#
b11100010 '#
b11100010 *#
b11100010 )#
b1110001000000000 ##
b1110001000000000 &#
b100000000 ;
b100000000 B
b100000000 J"
b100000000 \"
b100000000 !#
b0 C
1?
b1 J
b1 D
1!
#65000
0!
#70000
b0 _"
b0 g"
b0 z"
b0 }"
b11111110 N#
b111111110 K#
b1111111011101111 /#
b1111111011101111 7#
b1111111011101111 J#
b11101111 M#
b0 |"
b11111111011101111 L#
b0 e"
b0 y"
b0 i"
b0 k"
b0 o"
b11100010 ]#
b11100010 e#
b11100010 x#
b11100010 {#
b11111110 @#
b11111110 =#
b11111111011101111 5#
b11111111011101111 I#
b1111111011101111 9#
b1111111011101111 ;#
b11101111 ?#
b0 n"
b11100010 z#
b1111111011101111 >#
b0 `"
b0 j"
b0 l"
b0 %#
b0 '#
b0 *#
b11100010 c#
b11100010 w#
b11100010 f#
b11100010 q#
b11100010 t#
b11111110 Y#
b1111111111111110 V#
b1111111011101111 0#
b1111111011101111 :#
b1111111011101111 <#
b1111111011101111 S#
b1111111011101111 U#
b11101111 X#
b0 )#
b11100010 s#
b111111111111111011101111 W#
b0 I
1>
b0 ##
b0 &#
b0 ;
b0 B
b0 J"
b0 \"
b0 !#
0?
1Y"
b11100010 U"
b11100010 b"
b11100010 [#
b11100010 b#
b11100010 p#
b11111111111111101110111100000000 Q#
b11111111111111101110111100000000 T#
b100000000 ["
b100000000 a"
b100000000 ,#
b100000000 O#
b1 J
b1 D
1!
#75000
0!
#80000
b1 j
b1 g
b100100010 N
b100100010 S
b100100010 f
b100010 i
b11111110 L$
b111111110 I$
b1111111011101111 -$
b1111111011101111 5$
b1111111011101111 H$
b11101111 K$
b0 ]#
b0 e#
b0 x#
b0 {#
b100100010 h
b11111111011101111 J$
b0 z#
b100100010 Q
b100100010 e
b11100010 U
b11100010 W
b11100010 [
b11111110 E$
b11111110 B$
b11111111011101111 3$
b11111111011101111 G$
b1111111011101111 6$
b1111111011101111 A$
b11101111 D$
b0 c#
b0 w#
b0 f#
b0 q#
b0 t#
b11100010 Z
b1111111011101111 C$
b0 s#
0>
11
1W"
b11100010 3
b11100010 M
b11100010 V
b11100010 X
b11100010 S"
b11100010 `#
1X"
b1111111011101111 T"
b1111111011101111 2#
b1111111011101111 +$
b1111111011101111 2$
b1111111011101111 @$
b0x00000000 Q"
b100000000 1#
b0 U"
b0 b"
b0 [#
b0 b#
b0 p#
0Y"
b1 J
b1 D
1!
#85000
0!
#90000
b0 L$
b0 I$
b0 -$
b0 5$
b0 H$
b0 K$
b0 j
b0 g
b1000000 N
b1000000 S
b1000000 f
b1000000 i
b11111110 +"
b111111110 ("
b1111111011101111 m
b1111111011101111 r
b1111111011101111 '"
b11101111 *"
b0 J$
b1000000 h
b11111111011101111 )"
b11 ."
b11 4"
b11 6"
b11 9"
b0 E$
b0 B$
b0 3$
b0 G$
b0 6$
b0 A$
b0 D$
b1000000 Q
b1000000 e
b0 U
b0 W
b0 [
b11111110 {
b11111110 x
b11111111011101111 p
b11111111011101111 &"
b1111111011101111 t
b1111111011101111 v
b11101111 z
b11 8"
b0 C$
b0 Z
b1111111011101111 y
1=
b1101100110 2"
b1101100110 5"
b100100010 5
b100100010 O
b100100010 ,"
b100100010 0"
b0 T"
b0 2#
b0 +$
b0 2$
b0 @$
0X"
b0 3
b0 M
b0 V
b0 X
b0 S"
b0 `#
01
0W"
10
1V"
b1111111011101111 2
b1111111011101111 l
b1111111011101111 u
b1111111011101111 w
b1111111011101111 R"
b1111111011101111 0$
b1 J
b1 D
1!
#95000
0!
#100000
b0 +"
b0 ("
b0 m
b0 r
b0 '"
b0 *"
b0 )"
b0 ."
b0 4"
b0 6"
b0 9"
b11111111 I"
b1111111111111111 F"
b1111111111111101 ="
b1111111111111101 C"
b1111111111111101 E"
b11111101 H"
b0 {
b0 x
b0 p
b0 &"
b0 t
b0 v
b0 z
b0 8"
b111111111111111111111101 G"
b0 y
b0 2"
b0 5"
b0 5
b0 O
b0 ,"
b0 0"
0=
1<
b11111111111111111111110011001101 A"
b11111111111111111111110011001101 D"
b1111111011101111 4
b1111111011101111 n
b1111111011101111 ;"
b1111111011101111 ?"
17
b100100010 9
b100100010 A
b100100010 /"
b0 2
b0 l
b0 u
b0 w
b0 R"
b0 0$
00
0V"
b1 J
b1 D
1!
#105000
0!
#110000
b0 I"
b0 F"
b0 ="
b0 C"
b0 E"
b0 H"
b0 G"
b1 C
b100100010 X$
16
b1111111111111101 8
b1111111111111101 G
b1111111111111101 >"
b0 9
b0 A
b0 /"
07
b0 A"
b0 D"
b0 4
b0 n
b0 ;"
b0 ?"
0<
b1 J
b1 D
1!
#115000
0!
#120000
b1 I
b1111111111111101 Y$
b0 8
b0 G
b0 >"
06
b1 J
b1 D
1!
#125000
0!
#130000
b1 J
b1 D
1!
#135000
0!
#140000
b1 J
b1 D
1!
#145000
0!
#150000
b1 J
b1 D
1!
#155000
0!
#160000
b1 J
b1 D
1!
#165000
0!
#170000
b1 J
b1 D
1!
#175000
0!
#180000
b1 J
b1 D
1!
#185000
0!
#190000
b1 J
b1 D
1!
#195000
0!
#200000
b1 J
b1 D
1!
#205000
0!
#210000
b1 J
b1 D
1!
#215000
0!
#220000
b1 J
b1 D
1!
#225000
0!
#230000
b1 J
b1 D
1!
#235000
0!
#240000
b1 J
b1 D
1!
#245000
0!
#250000
b1 J
b1 D
1!
#255000
0!
#260000
b11111111 j
b111111111 g
b1111111110110110 N
b1111111110110110 S
b1111111110110110 f
b10110110 i
b11111111110110110 h
b11111111 c
b11111111 `
b11111111110110110 Q
b11111111110110110 e
b1111111110110110 T
b1111111110110110 _
b10110110 b
b1111111110110110 a
b1111111110110110 %
b1111111110110110 L
b1111111110110110 P
b1111111110110110 ^
b100110111 *
b100110111 N"
b100110111 \#
b100100110 (
b100100110 L"
b100100110 ^"
1.
b1 J
b1 D
1!
#265000
0!
#270000
1$
0.
b0 N#
b0 K#
b0 /#
b0 7#
b0 J#
b0 M#
b0 L#
b0 @#
b0 =#
b0 5#
b0 I#
b0 9#
b0 ;#
b0 ?#
b0 >#
b0 Y#
b0 V#
b0 0#
b0 :#
b0 <#
b0 S#
b0 U#
b0 X#
b0 W#
b100100110 c"
b100100110 "#
b0 Q#
b0 T#
b0 3#
b0 P#
b100110111 a#
b100110111 ~#
b0 1$
b0 N$
b1 J
b1 D
1!
#275000
0!
#280000
0$
b1 ~"
b1 {"
b101001101 _"
b101001101 g"
b101001101 z"
b1001101 }"
b101001101 |"
b1 p"
b1 m"
b101001101 e"
b101001101 y"
b101001101 i"
b101001101 k"
b1001101 o"
b101001101 n"
b1 +#
b1 (#
b101001101 `"
b101001101 j"
b101001101 l"
b101001101 %#
b101001101 '#
b1001101 *#
b101001101 )#
b10100110100001100 ##
b10100110100001100 &#
b100100010 ;
b100100010 B
b100100010 J"
b100100010 \"
b100100010 !#
b0 C
1?
b1 J
b1 D
1!
#285000
0!
#290000
b0 ~"
b0 {"
b0 _"
b0 g"
b0 z"
b0 }"
b0 |"
b11111111 n#
b11111111 k#
b1111111111111100 g#
b1111111111111100 i#
b11111100 m#
b0 p"
b0 m"
b0 e"
b0 y"
b0 i"
b0 k"
b0 o"
b1 |#
b1 y#
b101001001 ]#
b101001001 e#
b101001001 x#
b1001001 {#
b1111111111111100 l#
b0 n"
b101001001 z#
b11111111 )$
b1111111111111111 &$
b1111111111111100 ^#
b1111111111111100 h#
b1111111111111100 j#
b1111111111111100 #$
b1111111111111100 %$
b11111100 ($
b0 +#
b0 (#
b0 `"
b0 j"
b0 l"
b0 %#
b0 '#
b0 *#
b1 u#
b1 r#
b101001001 c#
b101001001 w#
b101001101 f#
b101001101 q#
b1001101 t#
b111111111111111111111100 '$
b0 )#
b101001101 s#
b11111111111111111111110001011011 !$
b11111111111111111111110001011011 $$
b1111111111111101 :
b1111111111111101 H
b1111111111111101 K"
b1111111111111101 Z#
b1111111111111101 }#
b0 I
1>
b0 ##
b0 &#
b0 ;
b0 B
b0 J"
b0 \"
b0 !#
0?
1Y"
b101001101 U"
b101001101 b"
b101001101 [#
b101001101 b#
b101001101 p#
b100100010 ["
b100100010 a"
b100100010 ,#
b100100010 O#
b1 J
b1 D
1!
#295000
0!
#300000
b0 n#
b0 k#
b0 g#
b0 i#
b0 m#
b0 j
b0 g
b11111111 N
b11111111 S
b11111111 f
b11111111 i
b0 |#
b0 y#
b0 ]#
b0 e#
b0 x#
b0 {#
b0 l#
b11111111 h
b0 z#
b0 )$
b0 &$
b0 ^#
b0 h#
b0 j#
b0 #$
b0 %$
b0 ($
b1 \
b1 Y
b11111111 Q
b11111111 e
b101001001 U
b101001001 W
b1001001 [
b0 u#
b0 r#
b0 c#
b0 w#
b0 f#
b0 q#
b0 t#
b0 '$
b101001001 Z
b0 s#
b0 !$
b0 $$
b0 :
b0 H
b0 K"
b0 Z#
b0 }#
0>
11
1W"
b101001001 3
b101001001 M
b101001001 V
b101001001 X
b101001001 S"
b101001001 `#
b1111111111111101 Z"
b1111111111111101 _#
b1111111111111101 *$
b1111111111111101 M$
1X"
b0x00x000x0 Q"
b100100010 1#
b0 U"
b0 b"
b0 [#
b0 b#
b0 p#
0Y"
b1 J
b1 D
1!
#305000
0!
#310000
b11111111 j
b111111111 g
b1111111110110110 N
b1111111110110110 S
b1111111110110110 f
b10110110 i
b11111111110110110 h
b11 ."
b11 4"
b11 6"
b11 9"
b0 \
b0 Y
b11111111110110110 Q
b11111111110110110 e
b0 U
b0 W
b0 [
b11 8"
b0 Z
1=
b1011111101 2"
b1011111101 5"
b11111111 5
b11111111 O
b11111111 ,"
b11111111 0"
0X"
b0 3
b0 M
b0 V
b0 X
b0 S"
b0 `#
01
0W"
10
1V"
bx Q"
b1111111111111101 /$
b1 J
b1 D
1!
#315000
0!
#320000
b0 ."
b0 4"
b0 6"
b0 9"
b0 8"
b0 2"
b0 5"
b0 5
b0 O
b0 ,"
b0 0"
0=
1<
17
b11111111 9
b11111111 A
b11111111 /"
00
0V"
b1 J
b1 D
1!
#325000
0!
#330000
b1 C
b11111111 X$
16
b0 9
b0 A
b0 /"
07
0<
b1 J
b1 D
1!
#335000
0!
#340000
b1 I
b0 Y$
06
b1 J
b1 D
1!
#345000
0!
#350000
b1 J
b1 D
1!
#355000
0!
#360000
b1 J
b1 D
1!
#365000
0!
#370000
b1 J
b1 D
1!
#375000
0!
#380000
b1 J
b1 D
1!
#385000
0!
#390000
b1 J
b1 D
1!
#395000
0!
#400000
b1 J
b1 D
1!
#405000
0!
#410000
b1 J
b1 D
1!
#415000
0!
#420000
b1 J
b1 D
1!
#425000
0!
#430000
b1 J
b1 D
1!
#435000
0!
#440000
b1 J
b1 D
1!
#445000
0!
#450000
b1 J
b1 D
1!
#455000
0!
#460000
b1 J
b1 D
1!
#465000
0!
#470000
b1 J
b1 D
1!
#475000
0!
#480000
b1 J
b1 D
1!
#485000
0!
#490000
b1 J
b1 D
1!
#495000
0!
#500000
b1 J
b1 D
1!
#505000
0!
#510000
b1 J
b1 D
1!
#515000
0!
#520000
b1 J
b1 D
1!
#525000
0!
#530000
b1 J
b1 D
1!
#535000
0!
#540000
b1 J
b1 D
1!
#545000
0!
#550000
b1 J
b1 D
1!
#555000
0!
#560000
b1 J
b1 D
1!
#565000
0!
#570000
b1 J
b1 D
1!
#575000
0!
#580000
b1 J
b1 D
1!
#580001
