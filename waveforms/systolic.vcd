$date
	Fri Aug 15 04:57:04 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module systolic $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 # sys_accept_w_1 $end
$var wire 1 $ sys_accept_w_2 $end
$var wire 16 % sys_data_in_11 [15:0] $end
$var wire 16 & sys_data_in_21 [15:0] $end
$var wire 1 ' sys_start_1 $end
$var wire 1 ( sys_start_2 $end
$var wire 1 ) sys_switch_in $end
$var wire 1 * sys_valid_out_21 $end
$var wire 16 + sys_weight_in_11 [15:0] $end
$var wire 16 , sys_weight_in_12 [15:0] $end
$var wire 1 - sys_valid_out_22 $end
$var wire 16 . sys_data_out_22 [15:0] $end
$var wire 16 / sys_data_out_21 [15:0] $end
$var wire 16 0 pe_weight_out_12 [15:0] $end
$var wire 16 1 pe_weight_out_11 [15:0] $end
$var wire 1 2 pe_valid_out_21 $end
$var wire 1 3 pe_valid_out_11 $end
$var wire 1 4 pe_switch_out_12 $end
$var wire 1 5 pe_switch_out_11 $end
$var wire 16 6 pe_psum_out_12 [15:0] $end
$var wire 16 7 pe_psum_out_11 [15:0] $end
$var wire 16 8 pe_input_out_21 [15:0] $end
$var wire 16 9 pe_input_out_11 [15:0] $end
$scope module pe11 $end
$var wire 1 ! clk $end
$var wire 1 # pe_accept_w_in $end
$var wire 16 : pe_input_in [15:0] $end
$var wire 16 ; pe_psum_in [15:0] $end
$var wire 1 ) pe_switch_in $end
$var wire 1 ' pe_valid_in $end
$var wire 16 < pe_weight_in [15:0] $end
$var wire 1 " rst $end
$var wire 16 = mult_out [15:0] $end
$var wire 16 > mac_out [15:0] $end
$var parameter 32 ? DATA_WIDTH $end
$var reg 16 @ pe_input_out [15:0] $end
$var reg 16 A pe_psum_out [15:0] $end
$var reg 1 5 pe_switch_out $end
$var reg 1 3 pe_valid_out $end
$var reg 16 B pe_weight_out [15:0] $end
$var reg 16 C weight_reg_active [15:0] $end
$var reg 16 D weight_reg_inactive [15:0] $end
$scope module adder $end
$var wire 16 E inb [15:0] $end
$var wire 17 F res [16:0] $end
$var wire 1 G overflow $end
$var wire 16 H out [15:0] $end
$var wire 16 I inbz [15:0] $end
$var wire 16 J inaz [15:0] $end
$var wire 16 K ina [15:0] $end
$var parameter 32 L ROUND $end
$var parameter 32 M WIF $end
$var parameter 32 N WIFA $end
$var parameter 32 O WIFB $end
$var parameter 32 P WII $end
$var parameter 32 Q WIIA $end
$var parameter 32 R WIIB $end
$var parameter 32 S WOF $end
$var parameter 32 T WOI $end
$var parameter 32 U WRF $end
$var parameter 33 V WRI $end
$scope module ina_zoom $end
$var wire 16 W out [15:0] $end
$var wire 16 X in [15:0] $end
$var parameter 32 Y ROUND $end
$var parameter 32 Z WIF $end
$var parameter 32 [ WII $end
$var parameter 32 \ WOF $end
$var parameter 32 ] WOI $end
$var reg 8 ^ ini [7:0] $end
$var reg 16 _ inr [15:0] $end
$var reg 8 ` outf [7:0] $end
$var reg 8 a outi [7:0] $end
$var reg 1 b overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module inb_zoom $end
$var wire 16 c in [15:0] $end
$var wire 16 d out [15:0] $end
$var parameter 32 e ROUND $end
$var parameter 32 f WIF $end
$var parameter 32 g WII $end
$var parameter 32 h WOF $end
$var parameter 32 i WOI $end
$var reg 8 j ini [7:0] $end
$var reg 16 k inr [15:0] $end
$var reg 8 l outf [7:0] $end
$var reg 8 m outi [7:0] $end
$var reg 1 n overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module res_zoom $end
$var wire 17 o in [16:0] $end
$var wire 16 p out [15:0] $end
$var parameter 32 q ROUND $end
$var parameter 32 r WIF $end
$var parameter 33 s WII $end
$var parameter 32 t WOF $end
$var parameter 32 u WOI $end
$var reg 9 v ini [8:0] $end
$var reg 17 w inr [16:0] $end
$var reg 8 x outf [7:0] $end
$var reg 8 y outi [7:0] $end
$var reg 1 G overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$scope module mult $end
$var wire 16 z ina [15:0] $end
$var wire 16 { inb [15:0] $end
$var wire 32 | res [31:0] $end
$var wire 1 } overflow $end
$var wire 16 ~ out [15:0] $end
$var parameter 32 !" ROUND $end
$var parameter 32 "" WIFA $end
$var parameter 32 #" WIFB $end
$var parameter 32 $" WIIA $end
$var parameter 32 %" WIIB $end
$var parameter 32 &" WOF $end
$var parameter 32 '" WOI $end
$var parameter 33 (" WRF $end
$var parameter 33 )" WRI $end
$scope module res_zoom $end
$var wire 32 *" in [31:0] $end
$var wire 16 +" out [15:0] $end
$var parameter 32 ," ROUND $end
$var parameter 33 -" WIF $end
$var parameter 33 ." WII $end
$var parameter 32 /" WOF $end
$var parameter 32 0" WOI $end
$var reg 16 1" ini [15:0] $end
$var reg 24 2" inr [23:0] $end
$var reg 8 3" outf [7:0] $end
$var reg 8 4" outi [7:0] $end
$var reg 1 } overflow $end
$scope begin genblk1 $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module pe12 $end
$var wire 1 ! clk $end
$var wire 1 $ pe_accept_w_in $end
$var wire 16 5" pe_input_in [15:0] $end
$var wire 16 6" pe_psum_in [15:0] $end
$var wire 1 5 pe_switch_in $end
$var wire 1 3 pe_valid_in $end
$var wire 16 7" pe_weight_in [15:0] $end
$var wire 1 " rst $end
$var wire 16 8" mult_out [15:0] $end
$var wire 16 9" mac_out [15:0] $end
$var parameter 32 :" DATA_WIDTH $end
$var reg 16 ;" pe_input_out [15:0] $end
$var reg 16 <" pe_psum_out [15:0] $end
$var reg 1 4 pe_switch_out $end
$var reg 1 =" pe_valid_out $end
$var reg 16 >" pe_weight_out [15:0] $end
$var reg 16 ?" weight_reg_active [15:0] $end
$var reg 16 @" weight_reg_inactive [15:0] $end
$scope module adder $end
$var wire 16 A" inb [15:0] $end
$var wire 17 B" res [16:0] $end
$var wire 1 C" overflow $end
$var wire 16 D" out [15:0] $end
$var wire 16 E" inbz [15:0] $end
$var wire 16 F" inaz [15:0] $end
$var wire 16 G" ina [15:0] $end
$var parameter 32 H" ROUND $end
$var parameter 32 I" WIF $end
$var parameter 32 J" WIFA $end
$var parameter 32 K" WIFB $end
$var parameter 32 L" WII $end
$var parameter 32 M" WIIA $end
$var parameter 32 N" WIIB $end
$var parameter 32 O" WOF $end
$var parameter 32 P" WOI $end
$var parameter 32 Q" WRF $end
$var parameter 33 R" WRI $end
$scope module ina_zoom $end
$var wire 16 S" out [15:0] $end
$var wire 16 T" in [15:0] $end
$var parameter 32 U" ROUND $end
$var parameter 32 V" WIF $end
$var parameter 32 W" WII $end
$var parameter 32 X" WOF $end
$var parameter 32 Y" WOI $end
$var reg 8 Z" ini [7:0] $end
$var reg 16 [" inr [15:0] $end
$var reg 8 \" outf [7:0] $end
$var reg 8 ]" outi [7:0] $end
$var reg 1 ^" overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module inb_zoom $end
$var wire 16 _" in [15:0] $end
$var wire 16 `" out [15:0] $end
$var parameter 32 a" ROUND $end
$var parameter 32 b" WIF $end
$var parameter 32 c" WII $end
$var parameter 32 d" WOF $end
$var parameter 32 e" WOI $end
$var reg 8 f" ini [7:0] $end
$var reg 16 g" inr [15:0] $end
$var reg 8 h" outf [7:0] $end
$var reg 8 i" outi [7:0] $end
$var reg 1 j" overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module res_zoom $end
$var wire 17 k" in [16:0] $end
$var wire 16 l" out [15:0] $end
$var parameter 32 m" ROUND $end
$var parameter 32 n" WIF $end
$var parameter 33 o" WII $end
$var parameter 32 p" WOF $end
$var parameter 32 q" WOI $end
$var reg 9 r" ini [8:0] $end
$var reg 17 s" inr [16:0] $end
$var reg 8 t" outf [7:0] $end
$var reg 8 u" outi [7:0] $end
$var reg 1 C" overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$scope module mult $end
$var wire 16 v" ina [15:0] $end
$var wire 16 w" inb [15:0] $end
$var wire 32 x" res [31:0] $end
$var wire 1 y" overflow $end
$var wire 16 z" out [15:0] $end
$var parameter 32 {" ROUND $end
$var parameter 32 |" WIFA $end
$var parameter 32 }" WIFB $end
$var parameter 32 ~" WIIA $end
$var parameter 32 !# WIIB $end
$var parameter 32 "# WOF $end
$var parameter 32 ## WOI $end
$var parameter 33 $# WRF $end
$var parameter 33 %# WRI $end
$scope module res_zoom $end
$var wire 32 &# in [31:0] $end
$var wire 16 '# out [15:0] $end
$var parameter 32 (# ROUND $end
$var parameter 33 )# WIF $end
$var parameter 33 *# WII $end
$var parameter 32 +# WOF $end
$var parameter 32 ,# WOI $end
$var reg 16 -# ini [15:0] $end
$var reg 24 .# inr [23:0] $end
$var reg 8 /# outf [7:0] $end
$var reg 8 0# outi [7:0] $end
$var reg 1 y" overflow $end
$scope begin genblk1 $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module pe21 $end
$var wire 1 ! clk $end
$var wire 1 # pe_accept_w_in $end
$var wire 16 1# pe_input_in [15:0] $end
$var wire 16 2# pe_psum_in [15:0] $end
$var wire 1 5 pe_switch_in $end
$var wire 1 ( pe_valid_in $end
$var wire 16 3# pe_weight_in [15:0] $end
$var wire 1 " rst $end
$var wire 16 4# mult_out [15:0] $end
$var wire 16 5# mac_out [15:0] $end
$var parameter 32 6# DATA_WIDTH $end
$var reg 16 7# pe_input_out [15:0] $end
$var reg 16 8# pe_psum_out [15:0] $end
$var reg 1 9# pe_switch_out $end
$var reg 1 2 pe_valid_out $end
$var reg 16 :# pe_weight_out [15:0] $end
$var reg 16 ;# weight_reg_active [15:0] $end
$var reg 16 <# weight_reg_inactive [15:0] $end
$scope module adder $end
$var wire 16 =# inb [15:0] $end
$var wire 17 ># res [16:0] $end
$var wire 1 ?# overflow $end
$var wire 16 @# out [15:0] $end
$var wire 16 A# inbz [15:0] $end
$var wire 16 B# inaz [15:0] $end
$var wire 16 C# ina [15:0] $end
$var parameter 32 D# ROUND $end
$var parameter 32 E# WIF $end
$var parameter 32 F# WIFA $end
$var parameter 32 G# WIFB $end
$var parameter 32 H# WII $end
$var parameter 32 I# WIIA $end
$var parameter 32 J# WIIB $end
$var parameter 32 K# WOF $end
$var parameter 32 L# WOI $end
$var parameter 32 M# WRF $end
$var parameter 33 N# WRI $end
$scope module ina_zoom $end
$var wire 16 O# out [15:0] $end
$var wire 16 P# in [15:0] $end
$var parameter 32 Q# ROUND $end
$var parameter 32 R# WIF $end
$var parameter 32 S# WII $end
$var parameter 32 T# WOF $end
$var parameter 32 U# WOI $end
$var reg 8 V# ini [7:0] $end
$var reg 16 W# inr [15:0] $end
$var reg 8 X# outf [7:0] $end
$var reg 8 Y# outi [7:0] $end
$var reg 1 Z# overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module inb_zoom $end
$var wire 16 [# in [15:0] $end
$var wire 16 \# out [15:0] $end
$var parameter 32 ]# ROUND $end
$var parameter 32 ^# WIF $end
$var parameter 32 _# WII $end
$var parameter 32 `# WOF $end
$var parameter 32 a# WOI $end
$var reg 8 b# ini [7:0] $end
$var reg 16 c# inr [15:0] $end
$var reg 8 d# outf [7:0] $end
$var reg 8 e# outi [7:0] $end
$var reg 1 f# overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module res_zoom $end
$var wire 17 g# in [16:0] $end
$var wire 16 h# out [15:0] $end
$var parameter 32 i# ROUND $end
$var parameter 32 j# WIF $end
$var parameter 33 k# WII $end
$var parameter 32 l# WOF $end
$var parameter 32 m# WOI $end
$var reg 9 n# ini [8:0] $end
$var reg 17 o# inr [16:0] $end
$var reg 8 p# outf [7:0] $end
$var reg 8 q# outi [7:0] $end
$var reg 1 ?# overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$scope module mult $end
$var wire 16 r# ina [15:0] $end
$var wire 16 s# inb [15:0] $end
$var wire 32 t# res [31:0] $end
$var wire 1 u# overflow $end
$var wire 16 v# out [15:0] $end
$var parameter 32 w# ROUND $end
$var parameter 32 x# WIFA $end
$var parameter 32 y# WIFB $end
$var parameter 32 z# WIIA $end
$var parameter 32 {# WIIB $end
$var parameter 32 |# WOF $end
$var parameter 32 }# WOI $end
$var parameter 33 ~# WRF $end
$var parameter 33 !$ WRI $end
$scope module res_zoom $end
$var wire 32 "$ in [31:0] $end
$var wire 16 #$ out [15:0] $end
$var parameter 32 $$ ROUND $end
$var parameter 33 %$ WIF $end
$var parameter 33 &$ WII $end
$var parameter 32 '$ WOF $end
$var parameter 32 ($ WOI $end
$var reg 16 )$ ini [15:0] $end
$var reg 24 *$ inr [23:0] $end
$var reg 8 +$ outf [7:0] $end
$var reg 8 ,$ outi [7:0] $end
$var reg 1 u# overflow $end
$scope begin genblk1 $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module pe22 $end
$var wire 1 ! clk $end
$var wire 1 $ pe_accept_w_in $end
$var wire 16 -$ pe_input_in [15:0] $end
$var wire 16 .$ pe_psum_in [15:0] $end
$var wire 1 4 pe_switch_in $end
$var wire 1 2 pe_valid_in $end
$var wire 16 /$ pe_weight_in [15:0] $end
$var wire 1 " rst $end
$var wire 16 0$ mult_out [15:0] $end
$var wire 16 1$ mac_out [15:0] $end
$var parameter 32 2$ DATA_WIDTH $end
$var reg 16 3$ pe_input_out [15:0] $end
$var reg 16 4$ pe_psum_out [15:0] $end
$var reg 1 5$ pe_switch_out $end
$var reg 1 - pe_valid_out $end
$var reg 16 6$ pe_weight_out [15:0] $end
$var reg 16 7$ weight_reg_active [15:0] $end
$var reg 16 8$ weight_reg_inactive [15:0] $end
$scope module adder $end
$var wire 16 9$ inb [15:0] $end
$var wire 17 :$ res [16:0] $end
$var wire 1 ;$ overflow $end
$var wire 16 <$ out [15:0] $end
$var wire 16 =$ inbz [15:0] $end
$var wire 16 >$ inaz [15:0] $end
$var wire 16 ?$ ina [15:0] $end
$var parameter 32 @$ ROUND $end
$var parameter 32 A$ WIF $end
$var parameter 32 B$ WIFA $end
$var parameter 32 C$ WIFB $end
$var parameter 32 D$ WII $end
$var parameter 32 E$ WIIA $end
$var parameter 32 F$ WIIB $end
$var parameter 32 G$ WOF $end
$var parameter 32 H$ WOI $end
$var parameter 32 I$ WRF $end
$var parameter 33 J$ WRI $end
$scope module ina_zoom $end
$var wire 16 K$ out [15:0] $end
$var wire 16 L$ in [15:0] $end
$var parameter 32 M$ ROUND $end
$var parameter 32 N$ WIF $end
$var parameter 32 O$ WII $end
$var parameter 32 P$ WOF $end
$var parameter 32 Q$ WOI $end
$var reg 8 R$ ini [7:0] $end
$var reg 16 S$ inr [15:0] $end
$var reg 8 T$ outf [7:0] $end
$var reg 8 U$ outi [7:0] $end
$var reg 1 V$ overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module inb_zoom $end
$var wire 16 W$ in [15:0] $end
$var wire 16 X$ out [15:0] $end
$var parameter 32 Y$ ROUND $end
$var parameter 32 Z$ WIF $end
$var parameter 32 [$ WII $end
$var parameter 32 \$ WOF $end
$var parameter 32 ]$ WOI $end
$var reg 8 ^$ ini [7:0] $end
$var reg 16 _$ inr [15:0] $end
$var reg 8 `$ outf [7:0] $end
$var reg 8 a$ outi [7:0] $end
$var reg 1 b$ overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module res_zoom $end
$var wire 17 c$ in [16:0] $end
$var wire 16 d$ out [15:0] $end
$var parameter 32 e$ ROUND $end
$var parameter 32 f$ WIF $end
$var parameter 33 g$ WII $end
$var parameter 32 h$ WOF $end
$var parameter 32 i$ WOI $end
$var reg 9 j$ ini [8:0] $end
$var reg 17 k$ inr [16:0] $end
$var reg 8 l$ outf [7:0] $end
$var reg 8 m$ outi [7:0] $end
$var reg 1 ;$ overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$scope module mult $end
$var wire 16 n$ ina [15:0] $end
$var wire 16 o$ inb [15:0] $end
$var wire 32 p$ res [31:0] $end
$var wire 1 q$ overflow $end
$var wire 16 r$ out [15:0] $end
$var parameter 32 s$ ROUND $end
$var parameter 32 t$ WIFA $end
$var parameter 32 u$ WIFB $end
$var parameter 32 v$ WIIA $end
$var parameter 32 w$ WIIB $end
$var parameter 32 x$ WOF $end
$var parameter 32 y$ WOI $end
$var parameter 33 z$ WRF $end
$var parameter 33 {$ WRI $end
$scope module res_zoom $end
$var wire 32 |$ in [31:0] $end
$var wire 16 }$ out [15:0] $end
$var parameter 32 ~$ ROUND $end
$var parameter 33 !% WIF $end
$var parameter 33 "% WII $end
$var parameter 32 #% WOF $end
$var parameter 32 $% WOI $end
$var reg 16 %% ini [15:0] $end
$var reg 24 &% inr [23:0] $end
$var reg 8 '% outf [7:0] $end
$var reg 8 (% outi [7:0] $end
$var reg 1 q$ overflow $end
$scope begin genblk1 $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1000 $%
b1000 #%
b10000 "%
b10000 !%
b1 ~$
b10000 {$
b10000 z$
b1000 y$
b1000 x$
b1000 w$
b1000 v$
b1000 u$
b1000 t$
b1 s$
b1000 i$
b1000 h$
b1001 g$
b1000 f$
b1 e$
b1000 ]$
b1000 \$
b1000 [$
b1000 Z$
b0 Y$
b1000 Q$
b1000 P$
b1000 O$
b1000 N$
b0 M$
b1001 J$
b1000 I$
b1000 H$
b1000 G$
b1000 F$
b1000 E$
b1000 D$
b1000 C$
b1000 B$
b1000 A$
b1 @$
b10000 2$
b1000 ($
b1000 '$
b10000 &$
b10000 %$
b1 $$
b10000 !$
b10000 ~#
b1000 }#
b1000 |#
b1000 {#
b1000 z#
b1000 y#
b1000 x#
b1 w#
b1000 m#
b1000 l#
b1001 k#
b1000 j#
b1 i#
b1000 a#
b1000 `#
b1000 _#
b1000 ^#
b0 ]#
b1000 U#
b1000 T#
b1000 S#
b1000 R#
b0 Q#
b1001 N#
b1000 M#
b1000 L#
b1000 K#
b1000 J#
b1000 I#
b1000 H#
b1000 G#
b1000 F#
b1000 E#
b1 D#
b10000 6#
b1000 ,#
b1000 +#
b10000 *#
b10000 )#
b1 (#
b10000 %#
b10000 $#
b1000 ##
b1000 "#
b1000 !#
b1000 ~"
b1000 }"
b1000 |"
b1 {"
b1000 q"
b1000 p"
b1001 o"
b1000 n"
b1 m"
b1000 e"
b1000 d"
b1000 c"
b1000 b"
b0 a"
b1000 Y"
b1000 X"
b1000 W"
b1000 V"
b0 U"
b1001 R"
b1000 Q"
b1000 P"
b1000 O"
b1000 N"
b1000 M"
b1000 L"
b1000 K"
b1000 J"
b1000 I"
b1 H"
b10000 :"
b1000 0"
b1000 /"
b10000 ."
b10000 -"
b1 ,"
b10000 )"
b10000 ("
b1000 '"
b1000 &"
b1000 %"
b1000 $"
b1000 #"
b1000 ""
b1 !"
b1000 u
b1000 t
b1001 s
b1000 r
b1 q
b1000 i
b1000 h
b1000 g
b1000 f
b0 e
b1000 ]
b1000 \
b1000 [
b1000 Z
b0 Y
b1001 V
b1000 U
b1000 T
b1000 S
b1000 R
b1000 Q
b1000 P
b1000 O
b1000 N
b1000 M
b1 L
b10000 ?
$end
#0
$dumpvars
b0 (%
b0 '%
b0 &%
b0 %%
b0 }$
b0 |$
b0 r$
0q$
b0 p$
b0 o$
b0 n$
b0 m$
b0 l$
b0 k$
b0 j$
b0 d$
b0 c$
0b$
b0 a$
b0 `$
b0 _$
b0 ^$
b0 X$
bx W$
0V$
b0 U$
b0 T$
b0 S$
b0 R$
b0 L$
b0 K$
b0 ?$
b0 >$
b0 =$
b0 <$
0;$
b0 :$
bx 9$
b0 8$
b0 7$
b0 6$
05$
bx 4$
b0 3$
b0 1$
b0 0$
b0 /$
bx .$
b0 -$
b0 ,$
b0 +$
b0 *$
b0 )$
b0 #$
bx "$
b0 v#
0u#
bx t#
b0 s#
bz r#
b0 q#
b0 p#
b0 o#
b0 n#
b0 h#
b0 g#
0f#
b0 e#
b0 d#
b0 c#
b0 b#
b0 \#
bx [#
0Z#
b0 Y#
b0 X#
b0 W#
b0 V#
b0 P#
b0 O#
b0 C#
b0 B#
b0 A#
b0 @#
0?#
b0 >#
bx =#
b0 <#
b0 ;#
b0 :#
09#
bx 8#
b0 7#
b0 5#
b0 4#
b0 3#
bx 2#
bz 1#
b0 0#
b0 /#
b0 .#
b0 -#
b0 '#
b0 &#
b0 z"
0y"
b0 x"
b0 w"
b0 v"
b0 u"
b0 t"
b0 s"
b0 r"
b0 l"
b0 k"
0j"
b0 i"
b0 h"
b0 g"
b0 f"
b0 `"
b0 _"
0^"
b0 ]"
b0 \"
b0 ["
b0 Z"
b0 T"
b0 S"
b0 G"
b0 F"
b0 E"
b0 D"
0C"
b0 B"
b0 A"
b0 @"
b0 ?"
b0 >"
0="
bx <"
b0 ;"
b0 9"
b0 8"
bz 7"
b0 6"
b0 5"
b0 4"
b0 3"
b0 2"
b0 1"
b0 +"
bx *"
b0 ~
0}
bx |
b0 {
bz z
b0 y
b0 x
b0 w
b0 v
b0 p
b0 o
0n
b0 m
b0 l
b0 k
b0 j
b0 d
b0 c
0b
b0 a
b0 `
b0 _
b0 ^
b0 X
b0 W
b0 K
b0 J
b0 I
b0 H
0G
b0 F
b0 E
b0 D
b0 C
b0 B
bx A
b0 @
b0 >
b0 =
b1111111101101100 <
b0 ;
bz :
b0 9
b0 8
bx 7
bx 6
05
04
03
02
b0 1
b0 0
bx /
bx .
0-
bz ,
b1111111101101100 +
0*
0)
z(
z'
bz &
bz %
0$
1#
0"
1!
$end
#5000
0!
#10000
1$
b1101100 ,
b1101100 7"
b1001100 +
b1001100 <
b0 .
b0 4$
b0 /
b0 8#
0*
02
b0 6
b0 <"
b0 .$
b0 9$
b0 W$
b0 7
b0 A
b0 2#
b0 =#
b0 [#
b1111111101101100 1
b1111111101101100 B
b1111111101101100 3#
b1111111101101100 D
03
1!
#15000
0!
#20000
b10011000 >
b10011000 H
b10011000 p
b10011000 x
b10011000 w
b10011000 F
b10011000 o
b10011000 J
b10011000 W
b10011000 `
b10011000 _
b10011000 =
b10011000 K
b10011000 X
b10011000 ~
b10011000 +"
b10011000 3"
b10011000 2"
b1001100 C
b1001100 {
1'
b1001100000000000 |
b1001100000000000 *"
b1000000000 %
b1000000000 :
b1000000000 z
1)
b10111 ,
b10111 7"
0#
b1001100 1
b1001100 B
b1001100 3#
b1001100 D
03
b1101100 0
b1101100 >"
b1101100 /$
b1101100 @"
b1111111101101100 :#
b1111111101101100 <#
0*
02
1!
#25000
0!
#30000
b11111111 q#
b111111111 n#
b0 >
b0 H
b0 p
b0 x
b0 w
b11111110 Y#
b11111110 V#
b1111111011011000 B#
b1111111011011000 O#
b11011000 X#
b0 F
b0 o
b0 J
b0 W
b0 `
b1111111011011000 W#
b0 _
b11111110 ,$
b1111111111111110 )$
b1111111011011000 4#
b1111111011011000 C#
b1111111011011000 P#
b1111111011011000 v#
b1111111011011000 #$
b11011000 +$
b0 =
b0 K
b0 X
b0 ~
b0 +"
b0 3"
b111111111111111011011000 *$
b0 2"
1(
b11111111111111101101100000000000 t#
b11111111111111101101100000000000 "$
b1000000000 &
b1000000000 1#
b1000000000 r#
b0 |
b0 *"
b0 %
b0 :
b0 z
0)
0$
b101110 9"
b101110 D"
b101110 l"
b101110 t"
b101110 s"
b101110 B"
b101110 k"
b101110 F"
b101110 S"
b101110 \"
b1111111101110000 5#
b1111111101110000 @#
b1111111101110000 h#
b1110000 p#
b101110 ["
b11111111101110000 o#
b101110 8"
b101110 G"
b101110 T"
b101110 z"
b101110 '#
b101110 /#
b11111111101110000 >#
b11111111101110000 g#
b10011000 A#
b10011000 \#
b10011000 d#
b101110 .#
b10011000 c#
b10111000000000 x"
b10111000000000 &#
b10111 ?"
b10111 w"
b1111111101101100 ;#
b1111111101101100 s#
b1101100 6$
b1101100 8$
b0 :#
0*
02
b10111 0
b10111 >"
b10111 /$
b10111 @"
b10011000 7
b10011000 A
b10011000 2#
b10011000 =#
b10011000 [#
b1000000000 9
b1000000000 @
b1000000000 5"
b1000000000 v"
b0 1
b0 B
b0 3#
15
13
1!
#35000
0!
#40000
b1001100 >
b1001100 H
b1001100 p
b1001100 x
b1001100 w
b11111111 Y#
b11111111 V#
b1111111101101100 B#
b1111111101101100 O#
b1101100 X#
b1001100 F
b1001100 o
b1001100 J
b1001100 W
b1001100 `
b1111111101101100 W#
b1001100 _
b11111111 ,$
b1111111111111111 )$
b1111111101101100 4#
b1111111101101100 C#
b1111111101101100 P#
b1111111101101100 v#
b1111111101101100 #$
b1101100 +$
b1001100 =
b1001100 K
b1001100 X
b1001100 ~
b1001100 +"
b1001100 3"
b111111111111111101101100 *$
b1001100 2"
b11111111111111110110110000000000 t#
b11111111111111110110110000000000 "$
b100000000 &
b100000000 1#
b100000000 r#
b100110000000000 |
b100110000000000 *"
b100000000 %
b100000000 :
b100000000 z
b1 m$
b1 j$
b0 9"
b0 D"
b0 l"
b0 t"
b0 s"
b11011000 >$
b11011000 K$
b11011000 T$
b11111111 q#
b111111111 n#
b1111111101101100 5#
b1111111101101100 @#
b1111111101101100 h#
b1101100 p#
b0 B"
b0 k"
b0 F"
b0 S"
b0 \"
b100000110 1$
b100000110 <$
b100000110 d$
b110 l$
b11011000 S$
b11111111101101100 o#
b0 ["
b100000110 k$
b11011000 0$
b11011000 ?$
b11011000 L$
b11011000 r$
b11011000 }$
b11011000 '%
b11111111101101100 >#
b11111111101101100 g#
b0 A#
b0 \#
b0 d#
b0 8"
b0 G"
b0 T"
b0 z"
b0 '#
b0 /#
b100000110 :$
b100000110 c$
b101110 =$
b101110 X$
b101110 `$
b11011000 &%
b0 c#
b0 .#
b101110 _$
b1101100000000000 p$
b1101100000000000 |$
b1101100 7$
b1101100 o$
b0 7
b0 A
b0 2#
b0 =#
b0 [#
b0 x"
b0 &#
b0 9
b0 @
b0 5"
b0 v"
05
b101110 6
b101110 <"
b101110 .$
b101110 9$
b101110 W$
b1000000000 ;"
b0 0
b0 >"
b0 /$
14
1="
b1111111101110000 /
b1111111101110000 8#
b1000000000 8
b1000000000 7#
b1000000000 -$
b1000000000 n$
19#
1*
12
b0 6$
1!
#45000
0!
#50000
b0 q#
b0 n#
b0 Y#
b0 V#
b0 B#
b0 O#
b0 X#
b0 W#
b0 ,$
b0 )$
b0 4#
b0 C#
b0 P#
b0 v#
b0 #$
b0 +$
b0 *$
b0 t#
b0 "$
b0 &
b0 1#
b0 r#
b10111 9"
b10111 D"
b10111 l"
b10111 t"
b10111 s"
b1101100 >$
b1101100 K$
b1101100 T$
b0 m$
b0 j$
b1101100 1$
b1101100 <$
b1101100 d$
b1101100 l$
b1001100 5#
b1001100 @#
b1001100 h#
b1001100 p#
b10111 B"
b10111 k"
b10111 F"
b10111 S"
b10111 \"
b1101100 S$
b1101100 k$
b1001100 o#
b10111 ["
b1101100 0$
b1101100 ?$
b1101100 L$
b1101100 r$
b1101100 }$
b1101100 '%
b1101100 :$
b1101100 c$
b0 =$
b0 X$
b0 `$
b1001100 >#
b1001100 g#
b1001100 A#
b1001100 \#
b1001100 d#
b10111 8"
b10111 G"
b10111 T"
b10111 z"
b10111 '#
b10111 /#
b1101100 &%
b0 _$
b1001100 c#
b10111 .#
b100000110 .
b100000110 4$
b1000000000 3$
15$
1-
b1111111101101100 /
b1111111101101100 8#
b110110000000000 p$
b110110000000000 |$
b100000000 8
b100000000 7#
b100000000 -$
b100000000 n$
09#
b0 6
b0 <"
b0 .$
b0 9$
b0 W$
b0 ;"
04
b1001100 7
b1001100 A
b1001100 2#
b1001100 =#
b1001100 [#
b1011100000000 x"
b1011100000000 &#
b100000000 9
b100000000 @
b100000000 5"
b100000000 v"
1!
#55000
0!
#60000
b11111111 q#
b111111111 n#
b1111111110111000 5#
b1111111110111000 @#
b1111111110111000 h#
b10111000 p#
b11111111110111000 o#
b11111111 Y#
b11111111 V#
b11111111110111000 >#
b11111111110111000 g#
b1111111101101100 B#
b1111111101101100 O#
b1101100 X#
b1111111101101100 W#
b11111111 ,$
b1111111111111111 )$
b1111111101101100 4#
b1111111101101100 C#
b1111111101101100 P#
b1111111101101100 v#
b1111111101101100 #$
b1101100 +$
b111111111111111101101100 *$
b11111111111111110110110000000000 t#
b11111111111111110110110000000000 "$
b100000000 &
b100000000 1#
b100000000 r#
0'
b10111 1$
b10111 <$
b10111 d$
b10111 l$
b0 >$
b0 K$
b0 T$
b10111 k$
b0 S$
b10111 :$
b10111 c$
b10111 =$
b10111 X$
b10111 `$
b0 0$
b0 ?$
b0 L$
b0 r$
b0 }$
b0 '%
b10111 _$
b0 &%
b10111 6
b10111 <"
b10111 .$
b10111 9$
b10111 W$
b100000000 ;"
b1001100 /
b1001100 8#
b0 p$
b0 |$
b0 8
b0 7#
b0 -$
b0 n$
b1101100 .
b1101100 4$
b100000000 3$
05$
1!
#65000
0!
#70000
0(
b10000011 1$
b10000011 <$
b10000011 d$
b10000011 l$
b10000011 k$
b10000011 :$
b10000011 c$
b1101100 >$
b1101100 K$
b1101100 T$
b1111111101101100 5#
b1111111101101100 @#
b1111111101101100 h#
b1101100 p#
b1101100 S$
b11111111101101100 o#
b1101100 0$
b1101100 ?$
b1101100 L$
b1101100 r$
b1101100 }$
b1101100 '%
b11111111101101100 >#
b11111111101101100 g#
b0 A#
b0 \#
b0 d#
b1101100 &%
b0 c#
b10111 .
b10111 4$
b0 3$
b1111111110111000 /
b1111111110111000 8#
b110110000000000 p$
b110110000000000 |$
b100000000 8
b100000000 7#
b100000000 -$
b100000000 n$
b0 7
b0 A
b0 2#
b0 =#
b0 [#
03
1!
#75000
0!
#80000
b1101100 1$
b1101100 <$
b1101100 d$
b1101100 l$
b1101100 k$
b1101100 :$
b1101100 c$
b0 =$
b0 X$
b0 `$
b0 _$
b0 6
b0 <"
b0 .$
b0 9$
b0 W$
0="
b0 /
b0 8#
0*
02
b10000011 .
b10000011 4$
b100000000 3$
1!
#85000
0!
#90000
b0 .
b0 4$
0-
1!
#95000
0!
#100000
1!
#105000
0!
#110000
1!
#115000
0!
#120000
1!
#125000
0!
#130000
1!
#135000
0!
#140000
1!
#145000
0!
#150000
1!
#155000
0!
#160000
1!
#165000
0!
#170000
1!
#175000
0!
#180000
1!
#180001
