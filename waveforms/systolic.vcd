$date
	Mon May 19 20:09:51 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module systolic $end
$var wire 1 ! clk $end
$var wire 1 " done $end
$var wire 16 # input_11 [15:0] $end
$var wire 16 $ input_21 [15:0] $end
$var wire 1 % load_weights $end
$var wire 1 & rst $end
$var wire 1 ' start $end
$var wire 16 ( weight_11 [15:0] $end
$var wire 16 ) weight_12 [15:0] $end
$var wire 16 * weight_21 [15:0] $end
$var wire 16 + weight_22 [15:0] $end
$var wire 16 , zero_wire_inputs [15:0] $end
$var wire 16 - zero_wire_outputs [15:0] $end
$var wire 16 . psum_12 [15:0] $end
$var wire 16 / psum_11 [15:0] $end
$var wire 16 0 out_22 [15:0] $end
$var wire 16 1 out_21 [15:0] $end
$var wire 16 2 input_21_out [15:0] $end
$var wire 16 3 input_11_out [15:0] $end
$scope module pe11 $end
$var wire 1 ! clk $end
$var wire 16 4 input_in [15:0] $end
$var wire 1 % load_weight $end
$var wire 16 5 psum_in [15:0] $end
$var wire 1 & rst $end
$var wire 1 ' start $end
$var wire 16 6 weight [15:0] $end
$var reg 16 7 input_out [15:0] $end
$var reg 16 8 psum_out [15:0] $end
$var reg 16 9 weight_reg [15:0] $end
$upscope $end
$scope module pe12 $end
$var wire 1 ! clk $end
$var wire 16 : input_in [15:0] $end
$var wire 1 % load_weight $end
$var wire 16 ; psum_in [15:0] $end
$var wire 1 & rst $end
$var wire 1 ' start $end
$var wire 16 < weight [15:0] $end
$var reg 16 = input_out [15:0] $end
$var reg 16 > psum_out [15:0] $end
$var reg 16 ? weight_reg [15:0] $end
$upscope $end
$scope module pe21 $end
$var wire 1 ! clk $end
$var wire 16 @ input_in [15:0] $end
$var wire 1 % load_weight $end
$var wire 16 A psum_in [15:0] $end
$var wire 1 & rst $end
$var wire 1 ' start $end
$var wire 16 B weight [15:0] $end
$var reg 16 C input_out [15:0] $end
$var reg 16 D psum_out [15:0] $end
$var reg 16 E weight_reg [15:0] $end
$upscope $end
$scope module pe22 $end
$var wire 1 ! clk $end
$var wire 16 F input_in [15:0] $end
$var wire 1 % load_weight $end
$var wire 16 G psum_in [15:0] $end
$var wire 1 & rst $end
$var wire 1 ' start $end
$var wire 16 H weight [15:0] $end
$var reg 16 I input_out [15:0] $end
$var reg 16 J psum_out [15:0] $end
$var reg 16 K weight_reg [15:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 K
b0 J
b0 I
b0 H
b0 G
b0 F
b0 E
b0 D
b0 C
b0 B
b0 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
0'
1&
0%
b0 $
b0 #
0"
1!
$end
#5000
0!
#10000
1!
0&
#15000
0!
#20000
b1 9
b11 ?
b10 E
b100 K
1!
b100 +
b100 H
b10 *
b10 B
b11 )
b11 <
b1 (
b1 6
1%
#25000
0!
#30000
1!
0%
1'
#35000
0!
#40000
b101 /
b101 8
b101 A
b101 3
b101 7
b101 :
1!
b101 #
b101 4
#45000
0!
#50000
b10001 1
b10001 D
b110 2
b110 C
b110 F
b1111 .
b1111 >
b1111 G
b0x0x -
b101 =
b0 /
b0 8
b0 A
b0 3
b0 7
b0 :
1!
b110 $
b110 @
b0 #
b0 4
#55000
0!
#60000
b0 .
b0 >
b0 G
b0 =
b0 1
b0 D
b0 2
b0 C
b0 F
b100111 0
b100111 J
b0xx0 -
b110 I
1!
b0 $
b0 @
#65000
0!
#70000
b0 0
b0 J
b0 -
b0 I
1!
#75000
0!
#80000
1!
#85000
0!
#90000
1!
#95000
0!
#100000
1!
#105000
0!
#110000
1!
#115000
0!
#120000
1!
#125000
0!
#130000
1!
#135000
0!
#140000
1!
#145000
0!
#150000
1!
#155000
0!
#160000
1!
#165000
0!
#170000
1!
#175000
0!
#180000
1!
#185000
0!
#190000
1!
#195000
0!
#200001
