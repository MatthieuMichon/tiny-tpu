$date
	Fri Aug 15 02:10:25 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module gradient_descent $end
$var wire 1 ! clk $end
$var wire 1 " grad_bias_or_weight $end
$var wire 1 # grad_descent_valid_in $end
$var wire 16 $ grad_in [15:0] $end
$var wire 16 % lr_in [15:0] $end
$var wire 1 & rst $end
$var wire 16 ' value_old_in [15:0] $end
$var wire 16 ( sub_value_out [15:0] $end
$var wire 16 ) mul_out [15:0] $end
$var reg 1 * grad_descent_done_out $end
$var reg 16 + sub_in_a [15:0] $end
$var reg 16 , value_updated_out [15:0] $end
$scope module mul_inst $end
$var wire 16 - ina [15:0] $end
$var wire 16 . inb [15:0] $end
$var wire 32 / res [31:0] $end
$var wire 1 0 overflow $end
$var wire 16 1 out [15:0] $end
$var parameter 32 2 ROUND $end
$var parameter 32 3 WIFA $end
$var parameter 32 4 WIFB $end
$var parameter 32 5 WIIA $end
$var parameter 32 6 WIIB $end
$var parameter 32 7 WOF $end
$var parameter 32 8 WOI $end
$var parameter 33 9 WRF $end
$var parameter 33 : WRI $end
$scope module res_zoom $end
$var wire 32 ; in [31:0] $end
$var wire 16 < out [15:0] $end
$var parameter 32 = ROUND $end
$var parameter 33 > WIF $end
$var parameter 33 ? WII $end
$var parameter 32 @ WOF $end
$var parameter 32 A WOI $end
$var reg 16 B ini [15:0] $end
$var reg 24 C inr [23:0] $end
$var reg 8 D outf [7:0] $end
$var reg 8 E outi [7:0] $end
$var reg 1 0 overflow $end
$scope begin genblk1 $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$scope module sub_inst $end
$var wire 16 F ina [15:0] $end
$var wire 16 G inb [15:0] $end
$var wire 17 H inbv [16:0] $end
$var wire 1 I sub $end
$var wire 18 J res [17:0] $end
$var wire 1 K overflow $end
$var wire 16 L out [15:0] $end
$var wire 17 M inbz [16:0] $end
$var wire 17 N inbe [16:0] $end
$var wire 17 O inaz [16:0] $end
$var parameter 17 P ONE $end
$var parameter 32 Q ROUND $end
$var parameter 32 R WIF $end
$var parameter 32 S WIFA $end
$var parameter 32 T WIFB $end
$var parameter 33 U WII $end
$var parameter 32 V WIIA $end
$var parameter 32 W WIIB $end
$var parameter 33 X WIIBE $end
$var parameter 32 Y WOF $end
$var parameter 32 Z WOI $end
$var parameter 32 [ WRF $end
$var parameter 34 \ WRI $end
$scope module ina_zoom $end
$var wire 16 ] in [15:0] $end
$var wire 17 ^ out [16:0] $end
$var parameter 32 _ ROUND $end
$var parameter 32 ` WIF $end
$var parameter 32 a WII $end
$var parameter 32 b WOF $end
$var parameter 33 c WOI $end
$var reg 8 d ini [7:0] $end
$var reg 16 e inr [15:0] $end
$var reg 8 f outf [7:0] $end
$var reg 9 g outi [8:0] $end
$var reg 1 h overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module inb_extend $end
$var wire 16 i in [15:0] $end
$var wire 17 j out [16:0] $end
$var parameter 32 k ROUND $end
$var parameter 32 l WIF $end
$var parameter 32 m WII $end
$var parameter 32 n WOF $end
$var parameter 33 o WOI $end
$var reg 8 p ini [7:0] $end
$var reg 16 q inr [15:0] $end
$var reg 8 r outf [7:0] $end
$var reg 9 s outi [8:0] $end
$var reg 1 t overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module inb_zoom $end
$var wire 17 u in [16:0] $end
$var wire 17 v out [16:0] $end
$var parameter 32 w ROUND $end
$var parameter 32 x WIF $end
$var parameter 33 y WII $end
$var parameter 32 z WOF $end
$var parameter 33 { WOI $end
$var reg 9 | ini [8:0] $end
$var reg 17 } inr [16:0] $end
$var reg 8 ~ outf [7:0] $end
$var reg 9 !" outi [8:0] $end
$var reg 1 "" overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module res_zoom $end
$var wire 18 #" in [17:0] $end
$var wire 16 $" out [15:0] $end
$var parameter 32 %" ROUND $end
$var parameter 32 &" WIF $end
$var parameter 34 '" WII $end
$var parameter 32 (" WOF $end
$var parameter 32 )" WOI $end
$var reg 10 *" ini [9:0] $end
$var reg 18 +" inr [17:0] $end
$var reg 8 ," outf [7:0] $end
$var reg 8 -" outi [7:0] $end
$var reg 1 K overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1000 )"
b1000 ("
b1010 '"
b1000 &"
b1 %"
b1001 {
b1000 z
b1001 y
b1000 x
b0 w
b1001 o
b1000 n
b1000 m
b1000 l
b0 k
b1001 c
b1000 b
b1000 a
b1000 `
b0 _
b1010 \
b1000 [
b1000 Z
b1000 Y
b1001 X
b1000 W
b1000 V
b1001 U
b1000 T
b1000 S
b1000 R
b1 Q
b1 P
b1000 A
b1000 @
b10000 ?
b10000 >
b1 =
b10000 :
b10000 9
b1000 8
b1000 7
b1000 6
b1000 5
b1000 4
b1000 3
b1 2
$end
#0
$dumpvars
b0 -"
b0 ,"
b0 +"
b0 *"
b0 $"
b0 #"
0""
b0 !"
b0 ~
b0 }
b0 |
b0 v
b0 u
0t
b0 s
b0 r
b0 q
b0 p
b0 j
b0 i
0h
b0 g
b0 f
b0 e
b0 d
b0 ^
b0 ]
b0 O
b0 N
b0 M
b0 L
0K
b0 J
1I
b0 H
b0 G
b0 F
b0 E
b0 D
b0 C
b0 B
b0 <
b0 ;
b0 1
00
b0 /
b0 .
b0 -
b0 ,
b0 +
0*
b0 )
b0 (
b0 '
0&
b0 %
b0 $
0#
0"
1!
$end
#5000
0!
#10000
b111111111 !"
b111111111 |
b11111111111100010 M
b11111111111100010 v
b11100010 ~
b11111111111100010 }
b11111111111100010 H
b11111111111100010 u
b101110 (
b101110 L
b101110 $"
b101110 ,"
b11110 N
b11110 j
b11110 r
b101110 +"
b11110 q
b101110 J
b101110 #"
b1001100 O
b1001100 ^
b1001100 f
b11110 )
b11110 1
b11110 <
b11110 G
b11110 i
b11110 D
b1001100 e
b11110 C
b1001100 +
b1001100 F
b1001100 ]
1#
b1111000000000 /
b1111000000000 ;
b1010 $
b1010 -
b1001100 '
1"
b1100000000 %
b1100000000 .
1!
#15000
0!
#20000
b11111111111101110 M
b11111111111101110 v
b11101110 ~
b11111111111101110 }
b11111111111101110 H
b11111111111101110 u
b11111111 -"
b1111111111 *"
b1111111101011010 (
b1111111101011010 L
b1111111101011010 $"
b1011010 ,"
b10010 N
b10010 j
b10010 r
b111111111101011010 +"
b10010 q
b111111111 g
b11111111 d
b111111111101011010 J
b111111111101011010 #"
b11111111101101100 O
b11111111101101100 ^
b1101100 f
b10010 )
b10010 1
b10010 <
b10010 G
b10010 i
b10010 D
b1111111101101100 e
b10010 C
b1111111101101100 +
b1111111101101100 F
b1111111101101100 ]
b1001000000000 /
b1001000000000 ;
b110 $
b110 -
b1111111101101100 '
b101110 ,
1*
1!
#25000
0!
#30000
b11111111111011100 M
b11111111111011100 v
b11011100 ~
b11111111111011100 }
b11111111111011100 H
b11111111111011100 u
b11111111 -"
b1111111111 *"
b1111111111110011 (
b1111111111110011 L
b1111111111110011 $"
b11110011 ,"
b100100 N
b100100 j
b100100 r
b111111111111110011 +"
b100100 q
b0 g
b0 d
b111111111111110011 J
b111111111111110011 #"
b10111 O
b10111 ^
b10111 f
b100100 )
b100100 1
b100100 <
b100100 G
b100100 i
b100100 D
b10111 e
b100100 C
b10111 +
b10111 F
b10111 ]
b10010000000000 /
b10010000000000 ;
b1100 $
b1100 -
b10111 '
b1111111101011010 ,
1!
#35000
0!
#40000
b11111111111101011 M
b11111111111101011 v
b11101011 ~
b11111111111101011 }
b11111111111101011 H
b11111111111101011 u
b0 -"
b0 *"
b1010111 (
b1010111 L
b1010111 $"
b1010111 ,"
b10101 N
b10101 j
b10101 r
b1010111 +"
b10101 q
b1010111 J
b1010111 #"
b1101100 O
b1101100 ^
b1101100 f
b10101 )
b10101 1
b10101 <
b10101 G
b10101 i
b10101 D
b1101100 e
b10101 C
b1101100 +
b1101100 F
b1101100 ]
b1010100000000 /
b1010100000000 ;
b111 $
b111 -
b1101100 '
b1111111111110011 ,
1!
#45000
0!
#50000
b1000010 (
b1000010 L
b1000010 $"
b1000010 ,"
b1000010 +"
b1000010 J
b1000010 #"
b1010111 O
b1010111 ^
b1010111 f
b1010111 e
b1010111 +
b1010111 F
b1010111 ]
0"
0#
b1010111 ,
1!
#55000
0!
#60000
b1010111 (
b1010111 L
b1010111 $"
b1010111 ,"
b1010111 +"
b1010111 J
b1010111 #"
b1101100 O
b1101100 ^
b1101100 f
b1101100 e
b1101100 +
b1101100 F
b1101100 ]
b0 ,
0*
1!
#65000
0!
#70000
1!
#75000
0!
#80000
1!
#85000
0!
#90000
1!
#95000
0!
#100000
1!
#105000
0!
#110000
b11111111111100010 M
b11111111111100010 v
b11100010 ~
b11111111111100010 }
b11111111111100010 H
b11111111111100010 u
b1 -"
b1 *"
b111100010 (
b111100010 L
b111100010 $"
b11100010 ,"
b11110 N
b11110 j
b11110 r
b111100010 +"
b11110 q
b10 g
b10 d
b111100010 J
b111100010 #"
b1000000000 O
b1000000000 ^
b0 f
b11110 )
b11110 1
b11110 <
b11110 G
b11110 i
b11110 D
b1000000000 e
b11110 C
b1000000000 +
b1000000000 F
b1000000000 ]
1#
b1111000000000 /
b1111000000000 ;
b1010 $
b1010 -
b1000000000 '
1!
#115000
0!
#120000
b11111111111101110 M
b11111111111101110 v
b11101110 ~
b11111111111101110 }
b11111111111101110 H
b11111111111101110 u
b10010 N
b10010 j
b10010 r
b10010 q
b10010 )
b10010 1
b10010 <
b10010 G
b10010 i
b10010 D
b10010 C
b1001000000000 /
b1001000000000 ;
b110 $
b110 -
b0 '
b111010000 (
b111010000 L
b111010000 $"
b11010000 ,"
b111010000 +"
b1 g
b1 d
b111010000 J
b111010000 #"
b111100010 O
b111100010 ^
b11100010 f
b111100010 e
b111100010 +
b111100010 F
b111100010 ]
b111100010 ,
1*
1!
#125000
0!
#130000
b11111111111011100 M
b11111111111011100 v
b11011100 ~
b11111111111011100 }
b11111111111011100 H
b11111111111011100 u
b100100 N
b100100 j
b100100 r
b100100 q
b100100 )
b100100 1
b100100 <
b100100 G
b100100 i
b100100 D
b100100 C
b10010000000000 /
b10010000000000 ;
b1100 $
b1100 -
b110101100 (
b110101100 L
b110101100 $"
b10101100 ,"
b110101100 +"
b1 g
b110101100 J
b110101100 #"
b111010000 O
b111010000 ^
b11010000 f
b111010000 e
b111010000 +
b111010000 F
b111010000 ]
b111010000 ,
1!
#135000
0!
#140000
b11111111111101011 M
b11111111111101011 v
b11101011 ~
b11111111111101011 }
b11111111111101011 H
b11111111111101011 u
b10101 N
b10101 j
b10101 r
b10101 q
b10101 )
b10101 1
b10101 <
b10101 G
b10101 i
b10101 D
b10101 C
b1010100000000 /
b1010100000000 ;
b111 $
b111 -
b110010111 (
b110010111 L
b110010111 $"
b10010111 ,"
b110010111 +"
b1 g
b110010111 J
b110010111 #"
b110101100 O
b110101100 ^
b10101100 f
b110101100 e
b110101100 +
b110101100 F
b110101100 ]
b110101100 ,
1!
#145000
0!
#150000
b0 !"
b0 |
b0 M
b0 v
b0 ~
b0 }
b0 H
b0 u
b0 N
b0 j
b0 r
b0 q
b0 )
b0 1
b0 <
b0 G
b0 i
b0 D
b0 C
0#
b0 /
b0 ;
b0 $
b0 -
b110010111 (
b110010111 L
b110010111 $"
b10010111 ,"
b110010111 +"
b1 g
b110010111 J
b110010111 #"
b110010111 O
b110010111 ^
b10010111 f
b110010111 e
b110010111 +
b110010111 F
b110010111 ]
b110010111 ,
1!
#155000
0!
#160000
b0 -"
b0 *"
b0 (
b0 L
b0 $"
b0 ,"
b0 +"
b0 g
b0 d
b0 J
b0 #"
b0 O
b0 ^
b0 f
b0 e
b0 +
b0 F
b0 ]
b0 ,
0*
1!
#165000
0!
#170000
1!
#175000
0!
#180000
1!
#185000
0!
#190000
1!
#195000
0!
#200000
1!
#205000
0!
#210000
1!
#215000
0!
#220000
1!
#225000
0!
#230000
1!
#235000
0!
#240000
1!
#245000
0!
#250000
1!
#255000
0!
#260000
1!
#260001
