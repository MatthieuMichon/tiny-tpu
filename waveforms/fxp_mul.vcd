$date
	Mon May 19 20:10:29 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module fxp_mul $end
$var wire 16 ! ina [15:0] $end
$var wire 16 " inb [15:0] $end
$var wire 32 # res [31:0] $end
$var wire 1 $ overflow $end
$var wire 16 % out [15:0] $end
$var parameter 32 & ROUND $end
$var parameter 32 ' WIFA $end
$var parameter 32 ( WIFB $end
$var parameter 32 ) WIIA $end
$var parameter 32 * WIIB $end
$var parameter 32 + WOF $end
$var parameter 32 , WOI $end
$var parameter 33 - WRF $end
$var parameter 33 . WRI $end
$scope module res_zoom $end
$var wire 32 / in [31:0] $end
$var wire 16 0 out [15:0] $end
$var parameter 32 1 ROUND $end
$var parameter 33 2 WIF $end
$var parameter 33 3 WII $end
$var parameter 32 4 WOF $end
$var parameter 32 5 WOI $end
$var reg 16 6 ini [15:0] $end
$var reg 24 7 inr [23:0] $end
$var reg 8 8 outf [7:0] $end
$var reg 8 9 outi [7:0] $end
$var reg 1 $ overflow $end
$scope begin genblk1 $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1000 5
b1000 4
b10000 3
b10000 2
b1 1
b10000 .
b10000 -
b1000 ,
b1000 +
b1000 *
b1000 )
b1000 (
b1000 '
b1 &
$end
#0
$dumpvars
b0 9
b0 8
b0 7
b0 6
b0 0
b1010 /
b0 %
0$
b1010 #
b10 "
b101 !
$end
#10001
