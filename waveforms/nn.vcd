$date
	Sun Jun 22 21:00:01 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module nn $end
$var wire 1 ! clk $end
$var wire 25 " instruction [24:0] $end
$var wire 1 # nn_valid_out_1 $end
$var wire 1 $ nn_valid_out_2 $end
$var wire 1 % rst $end
$var wire 1 & weight_acc_valid_out_2 $end
$var wire 1 ' weight_acc_valid_out_1 $end
$var wire 16 ( weight_12 [15:0] $end
$var wire 16 ) weight_11 [15:0] $end
$var wire 1 * sys_valid_out_22 $end
$var wire 1 + sys_valid_out_21 $end
$var wire 1 , sys_switch_out_22 $end
$var wire 1 - sys_switch_out_21 $end
$var wire 16 . sys_data_out_22 [15:0] $end
$var wire 16 / sys_data_out_21 [15:0] $end
$var wire 1 0 switch $end
$var wire 1 1 nn_start $end
$var wire 1 2 lr_valid_out_22 $end
$var wire 1 3 lr_valid_out_21 $end
$var wire 1 4 lr_is_backward $end
$var wire 16 5 lr_data_out_2 [15:0] $end
$var wire 16 6 lr_data_out_1 [15:0] $end
$var wire 1 7 load_weights $end
$var wire 1 8 load_inputs $end
$var wire 1 9 load_bias $end
$var wire 1 : input_acc_valid_out_2 $end
$var wire 1 ; input_acc_valid_out_1 $end
$var wire 16 < input_21 [15:0] $end
$var wire 16 = input_11 [15:0] $end
$var wire 16 > data_in [15:0] $end
$var wire 1 ? bias_valid_out_22 $end
$var wire 1 @ bias_valid_out_21 $end
$var wire 16 A bias_temp_bias_out_1 [15:0] $end
$var wire 16 B bias_data_out_2 [15:0] $end
$var wire 16 C bias_data_out_1 [15:0] $end
$var wire 1 D address $end
$var wire 2 E activation_datapath [1:0] $end
$var wire 1 F accept_w $end
$var reg 16 G bias_temp_bias_in [15:0] $end
$var reg 16 H input_acc_data_in_1 [15:0] $end
$var reg 16 I input_acc_data_in_2 [15:0] $end
$var reg 1 J load_inputs_1 $end
$var reg 1 K load_inputs_2 $end
$var reg 1 L load_weights_1 $end
$var reg 1 M load_weights_2 $end
$var reg 16 N nn_data_in_1 [15:0] $end
$var reg 16 O nn_data_in_2 [15:0] $end
$var reg 16 P nn_data_out_1 [15:0] $end
$var reg 16 Q nn_data_out_2 [15:0] $end
$var reg 16 R weight_acc_data_in_1 [15:0] $end
$var reg 16 S weight_acc_data_in_2 [15:0] $end
$scope module bias_21 $end
$var wire 16 T bias_scalar_in [15:0] $end
$var wire 1 ! clk $end
$var wire 1 % rst $end
$var wire 1 9 load_bias_in $end
$var wire 1 + bias_valid_in $end
$var wire 16 U bias_sys_data_in [15:0] $end
$var wire 1 - bias_switch_in $end
$var wire 1 4 bias_backward $end
$var wire 16 V add_out [15:0] $end
$var reg 16 W bias_active [15:0] $end
$var reg 16 X bias_data_out [15:0] $end
$var reg 16 Y bias_inactive [15:0] $end
$var reg 16 Z bias_scalar_out [15:0] $end
$var reg 1 @ bias_valid_out $end
$scope module add_inst $end
$var wire 16 [ inb [15:0] $end
$var wire 17 \ res [16:0] $end
$var wire 1 ] overflow $end
$var wire 16 ^ out [15:0] $end
$var wire 16 _ inbz [15:0] $end
$var wire 16 ` inaz [15:0] $end
$var wire 16 a ina [15:0] $end
$var parameter 32 b ROUND $end
$var parameter 32 c WIF $end
$var parameter 32 d WIFA $end
$var parameter 32 e WIFB $end
$var parameter 32 f WII $end
$var parameter 32 g WIIA $end
$var parameter 32 h WIIB $end
$var parameter 32 i WOF $end
$var parameter 32 j WOI $end
$var parameter 32 k WRF $end
$var parameter 33 l WRI $end
$scope module ina_zoom $end
$var wire 16 m out [15:0] $end
$var wire 16 n in [15:0] $end
$var parameter 32 o ROUND $end
$var parameter 32 p WIF $end
$var parameter 32 q WII $end
$var parameter 32 r WOF $end
$var parameter 32 s WOI $end
$var reg 8 t ini [7:0] $end
$var reg 16 u inr [15:0] $end
$var reg 8 v outf [7:0] $end
$var reg 8 w outi [7:0] $end
$var reg 1 x overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module inb_zoom $end
$var wire 16 y in [15:0] $end
$var wire 16 z out [15:0] $end
$var parameter 32 { ROUND $end
$var parameter 32 | WIF $end
$var parameter 32 } WII $end
$var parameter 32 ~ WOF $end
$var parameter 32 !" WOI $end
$var reg 8 "" ini [7:0] $end
$var reg 16 #" inr [15:0] $end
$var reg 8 $" outf [7:0] $end
$var reg 8 %" outi [7:0] $end
$var reg 1 &" overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module res_zoom $end
$var wire 17 '" in [16:0] $end
$var wire 16 (" out [15:0] $end
$var parameter 32 )" ROUND $end
$var parameter 32 *" WIF $end
$var parameter 33 +" WII $end
$var parameter 32 ," WOF $end
$var parameter 32 -" WOI $end
$var reg 9 ." ini [8:0] $end
$var reg 17 /" inr [16:0] $end
$var reg 8 0" outf [7:0] $end
$var reg 8 1" outi [7:0] $end
$var reg 1 ] overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module bias_22 $end
$var wire 16 2" bias_scalar_in [15:0] $end
$var wire 1 ! clk $end
$var wire 1 % rst $end
$var wire 1 9 load_bias_in $end
$var wire 1 * bias_valid_in $end
$var wire 16 3" bias_sys_data_in [15:0] $end
$var wire 1 , bias_switch_in $end
$var wire 1 4 bias_backward $end
$var wire 16 4" add_out [15:0] $end
$var reg 16 5" bias_active [15:0] $end
$var reg 16 6" bias_data_out [15:0] $end
$var reg 16 7" bias_inactive [15:0] $end
$var reg 16 8" bias_scalar_out [15:0] $end
$var reg 1 ? bias_valid_out $end
$scope module add_inst $end
$var wire 16 9" inb [15:0] $end
$var wire 17 :" res [16:0] $end
$var wire 1 ;" overflow $end
$var wire 16 <" out [15:0] $end
$var wire 16 =" inbz [15:0] $end
$var wire 16 >" inaz [15:0] $end
$var wire 16 ?" ina [15:0] $end
$var parameter 32 @" ROUND $end
$var parameter 32 A" WIF $end
$var parameter 32 B" WIFA $end
$var parameter 32 C" WIFB $end
$var parameter 32 D" WII $end
$var parameter 32 E" WIIA $end
$var parameter 32 F" WIIB $end
$var parameter 32 G" WOF $end
$var parameter 32 H" WOI $end
$var parameter 32 I" WRF $end
$var parameter 33 J" WRI $end
$scope module ina_zoom $end
$var wire 16 K" out [15:0] $end
$var wire 16 L" in [15:0] $end
$var parameter 32 M" ROUND $end
$var parameter 32 N" WIF $end
$var parameter 32 O" WII $end
$var parameter 32 P" WOF $end
$var parameter 32 Q" WOI $end
$var reg 8 R" ini [7:0] $end
$var reg 16 S" inr [15:0] $end
$var reg 8 T" outf [7:0] $end
$var reg 8 U" outi [7:0] $end
$var reg 1 V" overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module inb_zoom $end
$var wire 16 W" in [15:0] $end
$var wire 16 X" out [15:0] $end
$var parameter 32 Y" ROUND $end
$var parameter 32 Z" WIF $end
$var parameter 32 [" WII $end
$var parameter 32 \" WOF $end
$var parameter 32 ]" WOI $end
$var reg 8 ^" ini [7:0] $end
$var reg 16 _" inr [15:0] $end
$var reg 8 `" outf [7:0] $end
$var reg 8 a" outi [7:0] $end
$var reg 1 b" overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module res_zoom $end
$var wire 17 c" in [16:0] $end
$var wire 16 d" out [15:0] $end
$var parameter 32 e" ROUND $end
$var parameter 32 f" WIF $end
$var parameter 33 g" WII $end
$var parameter 32 h" WOF $end
$var parameter 32 i" WOI $end
$var reg 9 j" ini [8:0] $end
$var reg 17 k" inr [16:0] $end
$var reg 8 l" outf [7:0] $end
$var reg 8 m" outi [7:0] $end
$var reg 1 ;" overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module control_unit_inst $end
$var wire 25 n" instruction [24:0] $end
$var reg 1 F accept_w $end
$var reg 2 o" activation_datapath [1:0] $end
$var reg 1 D address $end
$var reg 16 p" data_in [15:0] $end
$var reg 1 9 load_bias $end
$var reg 1 8 load_inputs $end
$var reg 1 7 load_weights $end
$var reg 1 4 lr_is_backward $end
$var reg 1 1 nn_start $end
$var reg 1 0 switch $end
$upscope $end
$scope module input_acc_1 $end
$var wire 1 ! clk $end
$var wire 16 q" input_acc_data_in [15:0] $end
$var wire 16 r" input_acc_data_nn_in [15:0] $end
$var wire 1 J input_acc_valid_data_nn_in $end
$var wire 1 1 input_acc_valid_in $end
$var wire 1 % rst $end
$var wire 1 3 input_acc_valid_data_in $end
$var parameter 32 s" INPUT_ACC_WIDTH $end
$var parameter 32 t" PTR_W $end
$var reg 3 u" count [2:0] $end
$var reg 16 v" input_acc_data_out [15:0] $end
$var reg 1 ; input_acc_valid_out $end
$var reg 1 w" rd_en $end
$var reg 2 x" rd_ptr [1:0] $end
$var reg 16 y" wr_data [15:0] $end
$var reg 1 z" wr_en $end
$var reg 2 {" wr_ptr [1:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 |" i [31:0] $end
$upscope $end
$upscope $end
$scope module input_acc_2 $end
$var wire 1 ! clk $end
$var wire 16 }" input_acc_data_in [15:0] $end
$var wire 16 ~" input_acc_data_nn_in [15:0] $end
$var wire 1 K input_acc_valid_data_nn_in $end
$var wire 1 ; input_acc_valid_in $end
$var wire 1 % rst $end
$var wire 1 2 input_acc_valid_data_in $end
$var parameter 32 !# INPUT_ACC_WIDTH $end
$var parameter 32 "# PTR_W $end
$var reg 3 ## count [2:0] $end
$var reg 16 $# input_acc_data_out [15:0] $end
$var reg 1 : input_acc_valid_out $end
$var reg 1 %# rd_en $end
$var reg 2 &# rd_ptr [1:0] $end
$var reg 16 '# wr_data [15:0] $end
$var reg 1 (# wr_en $end
$var reg 2 )# wr_ptr [1:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 *# i [31:0] $end
$upscope $end
$upscope $end
$scope module leaky_relu_21 $end
$var wire 1 ! clk $end
$var wire 1 +# h_store_valid $end
$var wire 16 ,# lr_data_in [15:0] $end
$var wire 1 4 lr_is_backward $end
$var wire 16 -# lr_temp_leak_factor [15:0] $end
$var wire 1 @ lr_valid_in $end
$var wire 1 % rst $end
$var wire 16 .# mul_out [15:0] $end
$var reg 9 /# h_stack [8:0] $end
$var reg 16 0# lr_data_out [15:0] $end
$var reg 1 3 lr_valid_out $end
$scope module mul_inst $end
$var wire 16 1# ina [15:0] $end
$var wire 16 2# inb [15:0] $end
$var wire 32 3# res [31:0] $end
$var wire 1 4# overflow $end
$var wire 16 5# out [15:0] $end
$var parameter 32 6# ROUND $end
$var parameter 32 7# WIFA $end
$var parameter 32 8# WIFB $end
$var parameter 32 9# WIIA $end
$var parameter 32 :# WIIB $end
$var parameter 32 ;# WOF $end
$var parameter 32 <# WOI $end
$var parameter 33 =# WRF $end
$var parameter 33 ># WRI $end
$scope module res_zoom $end
$var wire 32 ?# in [31:0] $end
$var wire 16 @# out [15:0] $end
$var parameter 32 A# ROUND $end
$var parameter 33 B# WIF $end
$var parameter 33 C# WII $end
$var parameter 32 D# WOF $end
$var parameter 32 E# WOI $end
$var reg 16 F# ini [15:0] $end
$var reg 24 G# inr [23:0] $end
$var reg 8 H# outf [7:0] $end
$var reg 8 I# outi [7:0] $end
$var reg 1 4# overflow $end
$scope begin genblk1 $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module leaky_relu_22 $end
$var wire 1 ! clk $end
$var wire 1 J# h_store_valid $end
$var wire 16 K# lr_data_in [15:0] $end
$var wire 1 4 lr_is_backward $end
$var wire 16 L# lr_temp_leak_factor [15:0] $end
$var wire 1 ? lr_valid_in $end
$var wire 1 % rst $end
$var wire 16 M# mul_out [15:0] $end
$var reg 9 N# h_stack [8:0] $end
$var reg 16 O# lr_data_out [15:0] $end
$var reg 1 2 lr_valid_out $end
$scope module mul_inst $end
$var wire 16 P# ina [15:0] $end
$var wire 16 Q# inb [15:0] $end
$var wire 32 R# res [31:0] $end
$var wire 1 S# overflow $end
$var wire 16 T# out [15:0] $end
$var parameter 32 U# ROUND $end
$var parameter 32 V# WIFA $end
$var parameter 32 W# WIFB $end
$var parameter 32 X# WIIA $end
$var parameter 32 Y# WIIB $end
$var parameter 32 Z# WOF $end
$var parameter 32 [# WOI $end
$var parameter 33 \# WRF $end
$var parameter 33 ]# WRI $end
$scope module res_zoom $end
$var wire 32 ^# in [31:0] $end
$var wire 16 _# out [15:0] $end
$var parameter 32 `# ROUND $end
$var parameter 33 a# WIF $end
$var parameter 33 b# WII $end
$var parameter 32 c# WOF $end
$var parameter 32 d# WOI $end
$var reg 16 e# ini [15:0] $end
$var reg 24 f# inr [23:0] $end
$var reg 8 g# outf [7:0] $end
$var reg 8 h# outi [7:0] $end
$var reg 1 S# overflow $end
$scope begin genblk1 $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module systolic_inst $end
$var wire 1 ! clk $end
$var wire 1 % rst $end
$var wire 16 i# sys_data_in_11 [15:0] $end
$var wire 16 j# sys_data_in_21 [15:0] $end
$var wire 1 ; sys_start $end
$var wire 1 0 sys_switch_in $end
$var wire 1 + sys_valid_out_21 $end
$var wire 1 * sys_valid_out_22 $end
$var wire 16 k# zero_wire_inputs [15:0] $end
$var wire 16 l# zero_wire_outputs [15:0] $end
$var wire 16 m# sys_weight_in_12 [15:0] $end
$var wire 16 n# sys_weight_in_11 [15:0] $end
$var wire 1 , sys_switch_out_22 $end
$var wire 1 - sys_switch_out_21 $end
$var wire 16 o# sys_data_out_22 [15:0] $end
$var wire 16 p# sys_data_out_21 [15:0] $end
$var wire 1 q# sys_accept_w_out_1 $end
$var wire 1 ' sys_accept_w_in $end
$var wire 16 r# pe_weight_out_12 [15:0] $end
$var wire 16 s# pe_weight_out_11 [15:0] $end
$var wire 1 t# pe_valid_out_22 $end
$var wire 1 u# pe_valid_out_21 $end
$var wire 1 v# pe_valid_out_12 $end
$var wire 1 w# pe_valid_out_11 $end
$var wire 1 x# pe_switch_out_12 $end
$var wire 1 y# pe_switch_out_11 $end
$var wire 16 z# pe_psum_out_12 [15:0] $end
$var wire 16 {# pe_psum_out_11 [15:0] $end
$var wire 16 |# pe_input_out_21 [15:0] $end
$var wire 16 }# pe_input_out_11 [15:0] $end
$scope module pe11 $end
$var wire 1 ! clk $end
$var wire 16 ~# pe_input_in [15:0] $end
$var wire 16 !$ pe_psum_in [15:0] $end
$var wire 1 0 pe_switch_in $end
$var wire 1 ; pe_valid_in $end
$var wire 1 % rst $end
$var wire 16 "$ pe_weight_in [15:0] $end
$var wire 1 ' pe_accept_w_in $end
$var wire 16 #$ mult_out [15:0] $end
$var wire 16 $$ mac_out [15:0] $end
$var parameter 32 %$ DATA_WIDTH $end
$var reg 1 q# pe_accept_w_out $end
$var reg 16 &$ pe_input_out [15:0] $end
$var reg 16 '$ pe_psum_out [15:0] $end
$var reg 1 y# pe_switch_out $end
$var reg 1 w# pe_valid_out $end
$var reg 16 ($ pe_weight_out [15:0] $end
$var reg 16 )$ weight_reg_active [15:0] $end
$var reg 16 *$ weight_reg_inactive [15:0] $end
$scope module adder $end
$var wire 16 +$ inb [15:0] $end
$var wire 17 ,$ res [16:0] $end
$var wire 1 -$ overflow $end
$var wire 16 .$ out [15:0] $end
$var wire 16 /$ inbz [15:0] $end
$var wire 16 0$ inaz [15:0] $end
$var wire 16 1$ ina [15:0] $end
$var parameter 32 2$ ROUND $end
$var parameter 32 3$ WIF $end
$var parameter 32 4$ WIFA $end
$var parameter 32 5$ WIFB $end
$var parameter 32 6$ WII $end
$var parameter 32 7$ WIIA $end
$var parameter 32 8$ WIIB $end
$var parameter 32 9$ WOF $end
$var parameter 32 :$ WOI $end
$var parameter 32 ;$ WRF $end
$var parameter 33 <$ WRI $end
$scope module ina_zoom $end
$var wire 16 =$ out [15:0] $end
$var wire 16 >$ in [15:0] $end
$var parameter 32 ?$ ROUND $end
$var parameter 32 @$ WIF $end
$var parameter 32 A$ WII $end
$var parameter 32 B$ WOF $end
$var parameter 32 C$ WOI $end
$var reg 8 D$ ini [7:0] $end
$var reg 16 E$ inr [15:0] $end
$var reg 8 F$ outf [7:0] $end
$var reg 8 G$ outi [7:0] $end
$var reg 1 H$ overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module inb_zoom $end
$var wire 16 I$ in [15:0] $end
$var wire 16 J$ out [15:0] $end
$var parameter 32 K$ ROUND $end
$var parameter 32 L$ WIF $end
$var parameter 32 M$ WII $end
$var parameter 32 N$ WOF $end
$var parameter 32 O$ WOI $end
$var reg 8 P$ ini [7:0] $end
$var reg 16 Q$ inr [15:0] $end
$var reg 8 R$ outf [7:0] $end
$var reg 8 S$ outi [7:0] $end
$var reg 1 T$ overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module res_zoom $end
$var wire 17 U$ in [16:0] $end
$var wire 16 V$ out [15:0] $end
$var parameter 32 W$ ROUND $end
$var parameter 32 X$ WIF $end
$var parameter 33 Y$ WII $end
$var parameter 32 Z$ WOF $end
$var parameter 32 [$ WOI $end
$var reg 9 \$ ini [8:0] $end
$var reg 17 ]$ inr [16:0] $end
$var reg 8 ^$ outf [7:0] $end
$var reg 8 _$ outi [7:0] $end
$var reg 1 -$ overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$scope module mult $end
$var wire 16 `$ ina [15:0] $end
$var wire 16 a$ inb [15:0] $end
$var wire 32 b$ res [31:0] $end
$var wire 1 c$ overflow $end
$var wire 16 d$ out [15:0] $end
$var parameter 32 e$ ROUND $end
$var parameter 32 f$ WIFA $end
$var parameter 32 g$ WIFB $end
$var parameter 32 h$ WIIA $end
$var parameter 32 i$ WIIB $end
$var parameter 32 j$ WOF $end
$var parameter 32 k$ WOI $end
$var parameter 33 l$ WRF $end
$var parameter 33 m$ WRI $end
$scope module res_zoom $end
$var wire 32 n$ in [31:0] $end
$var wire 16 o$ out [15:0] $end
$var parameter 32 p$ ROUND $end
$var parameter 33 q$ WIF $end
$var parameter 33 r$ WII $end
$var parameter 32 s$ WOF $end
$var parameter 32 t$ WOI $end
$var reg 16 u$ ini [15:0] $end
$var reg 24 v$ inr [23:0] $end
$var reg 8 w$ outf [7:0] $end
$var reg 8 x$ outi [7:0] $end
$var reg 1 c$ overflow $end
$scope begin genblk1 $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module pe12 $end
$var wire 1 ! clk $end
$var wire 1 q# pe_accept_w_in $end
$var wire 16 y$ pe_input_in [15:0] $end
$var wire 16 z$ pe_psum_in [15:0] $end
$var wire 1 y# pe_switch_in $end
$var wire 1 w# pe_valid_in $end
$var wire 1 % rst $end
$var wire 16 {$ pe_weight_in [15:0] $end
$var wire 16 |$ mult_out [15:0] $end
$var wire 16 }$ mac_out [15:0] $end
$var parameter 32 ~$ DATA_WIDTH $end
$var reg 1 !% pe_accept_w_out $end
$var reg 16 "% pe_input_out [15:0] $end
$var reg 16 #% pe_psum_out [15:0] $end
$var reg 1 x# pe_switch_out $end
$var reg 1 v# pe_valid_out $end
$var reg 16 $% pe_weight_out [15:0] $end
$var reg 16 %% weight_reg_active [15:0] $end
$var reg 16 &% weight_reg_inactive [15:0] $end
$scope module adder $end
$var wire 16 '% inb [15:0] $end
$var wire 17 (% res [16:0] $end
$var wire 1 )% overflow $end
$var wire 16 *% out [15:0] $end
$var wire 16 +% inbz [15:0] $end
$var wire 16 ,% inaz [15:0] $end
$var wire 16 -% ina [15:0] $end
$var parameter 32 .% ROUND $end
$var parameter 32 /% WIF $end
$var parameter 32 0% WIFA $end
$var parameter 32 1% WIFB $end
$var parameter 32 2% WII $end
$var parameter 32 3% WIIA $end
$var parameter 32 4% WIIB $end
$var parameter 32 5% WOF $end
$var parameter 32 6% WOI $end
$var parameter 32 7% WRF $end
$var parameter 33 8% WRI $end
$scope module ina_zoom $end
$var wire 16 9% out [15:0] $end
$var wire 16 :% in [15:0] $end
$var parameter 32 ;% ROUND $end
$var parameter 32 <% WIF $end
$var parameter 32 =% WII $end
$var parameter 32 >% WOF $end
$var parameter 32 ?% WOI $end
$var reg 8 @% ini [7:0] $end
$var reg 16 A% inr [15:0] $end
$var reg 8 B% outf [7:0] $end
$var reg 8 C% outi [7:0] $end
$var reg 1 D% overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module inb_zoom $end
$var wire 16 E% in [15:0] $end
$var wire 16 F% out [15:0] $end
$var parameter 32 G% ROUND $end
$var parameter 32 H% WIF $end
$var parameter 32 I% WII $end
$var parameter 32 J% WOF $end
$var parameter 32 K% WOI $end
$var reg 8 L% ini [7:0] $end
$var reg 16 M% inr [15:0] $end
$var reg 8 N% outf [7:0] $end
$var reg 8 O% outi [7:0] $end
$var reg 1 P% overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module res_zoom $end
$var wire 17 Q% in [16:0] $end
$var wire 16 R% out [15:0] $end
$var parameter 32 S% ROUND $end
$var parameter 32 T% WIF $end
$var parameter 33 U% WII $end
$var parameter 32 V% WOF $end
$var parameter 32 W% WOI $end
$var reg 9 X% ini [8:0] $end
$var reg 17 Y% inr [16:0] $end
$var reg 8 Z% outf [7:0] $end
$var reg 8 [% outi [7:0] $end
$var reg 1 )% overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$scope module mult $end
$var wire 16 \% ina [15:0] $end
$var wire 16 ]% inb [15:0] $end
$var wire 32 ^% res [31:0] $end
$var wire 1 _% overflow $end
$var wire 16 `% out [15:0] $end
$var parameter 32 a% ROUND $end
$var parameter 32 b% WIFA $end
$var parameter 32 c% WIFB $end
$var parameter 32 d% WIIA $end
$var parameter 32 e% WIIB $end
$var parameter 32 f% WOF $end
$var parameter 32 g% WOI $end
$var parameter 33 h% WRF $end
$var parameter 33 i% WRI $end
$scope module res_zoom $end
$var wire 32 j% in [31:0] $end
$var wire 16 k% out [15:0] $end
$var parameter 32 l% ROUND $end
$var parameter 33 m% WIF $end
$var parameter 33 n% WII $end
$var parameter 32 o% WOF $end
$var parameter 32 p% WOI $end
$var reg 16 q% ini [15:0] $end
$var reg 24 r% inr [23:0] $end
$var reg 8 s% outf [7:0] $end
$var reg 8 t% outi [7:0] $end
$var reg 1 _% overflow $end
$scope begin genblk1 $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module pe21 $end
$var wire 1 ! clk $end
$var wire 16 u% pe_input_in [15:0] $end
$var wire 16 v% pe_psum_in [15:0] $end
$var wire 1 y# pe_switch_in $end
$var wire 1 w# pe_valid_in $end
$var wire 16 w% pe_weight_in [15:0] $end
$var wire 1 % rst $end
$var wire 1 ' pe_accept_w_in $end
$var wire 16 x% mult_out [15:0] $end
$var wire 16 y% mac_out [15:0] $end
$var parameter 32 z% DATA_WIDTH $end
$var reg 1 {% pe_accept_w_out $end
$var reg 16 |% pe_input_out [15:0] $end
$var reg 16 }% pe_psum_out [15:0] $end
$var reg 1 - pe_switch_out $end
$var reg 1 u# pe_valid_out $end
$var reg 16 ~% pe_weight_out [15:0] $end
$var reg 16 !& weight_reg_active [15:0] $end
$var reg 16 "& weight_reg_inactive [15:0] $end
$scope module adder $end
$var wire 16 #& inb [15:0] $end
$var wire 17 $& res [16:0] $end
$var wire 1 %& overflow $end
$var wire 16 && out [15:0] $end
$var wire 16 '& inbz [15:0] $end
$var wire 16 (& inaz [15:0] $end
$var wire 16 )& ina [15:0] $end
$var parameter 32 *& ROUND $end
$var parameter 32 +& WIF $end
$var parameter 32 ,& WIFA $end
$var parameter 32 -& WIFB $end
$var parameter 32 .& WII $end
$var parameter 32 /& WIIA $end
$var parameter 32 0& WIIB $end
$var parameter 32 1& WOF $end
$var parameter 32 2& WOI $end
$var parameter 32 3& WRF $end
$var parameter 33 4& WRI $end
$scope module ina_zoom $end
$var wire 16 5& out [15:0] $end
$var wire 16 6& in [15:0] $end
$var parameter 32 7& ROUND $end
$var parameter 32 8& WIF $end
$var parameter 32 9& WII $end
$var parameter 32 :& WOF $end
$var parameter 32 ;& WOI $end
$var reg 8 <& ini [7:0] $end
$var reg 16 =& inr [15:0] $end
$var reg 8 >& outf [7:0] $end
$var reg 8 ?& outi [7:0] $end
$var reg 1 @& overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module inb_zoom $end
$var wire 16 A& in [15:0] $end
$var wire 16 B& out [15:0] $end
$var parameter 32 C& ROUND $end
$var parameter 32 D& WIF $end
$var parameter 32 E& WII $end
$var parameter 32 F& WOF $end
$var parameter 32 G& WOI $end
$var reg 8 H& ini [7:0] $end
$var reg 16 I& inr [15:0] $end
$var reg 8 J& outf [7:0] $end
$var reg 8 K& outi [7:0] $end
$var reg 1 L& overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module res_zoom $end
$var wire 17 M& in [16:0] $end
$var wire 16 N& out [15:0] $end
$var parameter 32 O& ROUND $end
$var parameter 32 P& WIF $end
$var parameter 33 Q& WII $end
$var parameter 32 R& WOF $end
$var parameter 32 S& WOI $end
$var reg 9 T& ini [8:0] $end
$var reg 17 U& inr [16:0] $end
$var reg 8 V& outf [7:0] $end
$var reg 8 W& outi [7:0] $end
$var reg 1 %& overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$scope module mult $end
$var wire 16 X& ina [15:0] $end
$var wire 16 Y& inb [15:0] $end
$var wire 32 Z& res [31:0] $end
$var wire 1 [& overflow $end
$var wire 16 \& out [15:0] $end
$var parameter 32 ]& ROUND $end
$var parameter 32 ^& WIFA $end
$var parameter 32 _& WIFB $end
$var parameter 32 `& WIIA $end
$var parameter 32 a& WIIB $end
$var parameter 32 b& WOF $end
$var parameter 32 c& WOI $end
$var parameter 33 d& WRF $end
$var parameter 33 e& WRI $end
$scope module res_zoom $end
$var wire 32 f& in [31:0] $end
$var wire 16 g& out [15:0] $end
$var parameter 32 h& ROUND $end
$var parameter 33 i& WIF $end
$var parameter 33 j& WII $end
$var parameter 32 k& WOF $end
$var parameter 32 l& WOI $end
$var reg 16 m& ini [15:0] $end
$var reg 24 n& inr [23:0] $end
$var reg 8 o& outf [7:0] $end
$var reg 8 p& outi [7:0] $end
$var reg 1 [& overflow $end
$scope begin genblk1 $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module pe22 $end
$var wire 1 ! clk $end
$var wire 1 q# pe_accept_w_in $end
$var wire 16 q& pe_input_in [15:0] $end
$var wire 16 r& pe_psum_in [15:0] $end
$var wire 1 x# pe_switch_in $end
$var wire 1 v# pe_valid_in $end
$var wire 16 s& pe_weight_in [15:0] $end
$var wire 1 % rst $end
$var wire 16 t& mult_out [15:0] $end
$var wire 16 u& mac_out [15:0] $end
$var parameter 32 v& DATA_WIDTH $end
$var reg 1 w& pe_accept_w_out $end
$var reg 16 x& pe_input_out [15:0] $end
$var reg 16 y& pe_psum_out [15:0] $end
$var reg 1 , pe_switch_out $end
$var reg 1 t# pe_valid_out $end
$var reg 16 z& pe_weight_out [15:0] $end
$var reg 16 {& weight_reg_active [15:0] $end
$var reg 16 |& weight_reg_inactive [15:0] $end
$scope module adder $end
$var wire 16 }& inb [15:0] $end
$var wire 17 ~& res [16:0] $end
$var wire 1 !' overflow $end
$var wire 16 "' out [15:0] $end
$var wire 16 #' inbz [15:0] $end
$var wire 16 $' inaz [15:0] $end
$var wire 16 %' ina [15:0] $end
$var parameter 32 &' ROUND $end
$var parameter 32 '' WIF $end
$var parameter 32 (' WIFA $end
$var parameter 32 )' WIFB $end
$var parameter 32 *' WII $end
$var parameter 32 +' WIIA $end
$var parameter 32 ,' WIIB $end
$var parameter 32 -' WOF $end
$var parameter 32 .' WOI $end
$var parameter 32 /' WRF $end
$var parameter 33 0' WRI $end
$scope module ina_zoom $end
$var wire 16 1' out [15:0] $end
$var wire 16 2' in [15:0] $end
$var parameter 32 3' ROUND $end
$var parameter 32 4' WIF $end
$var parameter 32 5' WII $end
$var parameter 32 6' WOF $end
$var parameter 32 7' WOI $end
$var reg 8 8' ini [7:0] $end
$var reg 16 9' inr [15:0] $end
$var reg 8 :' outf [7:0] $end
$var reg 8 ;' outi [7:0] $end
$var reg 1 <' overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module inb_zoom $end
$var wire 16 =' in [15:0] $end
$var wire 16 >' out [15:0] $end
$var parameter 32 ?' ROUND $end
$var parameter 32 @' WIF $end
$var parameter 32 A' WII $end
$var parameter 32 B' WOF $end
$var parameter 32 C' WOI $end
$var reg 8 D' ini [7:0] $end
$var reg 16 E' inr [15:0] $end
$var reg 8 F' outf [7:0] $end
$var reg 8 G' outi [7:0] $end
$var reg 1 H' overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope module res_zoom $end
$var wire 17 I' in [16:0] $end
$var wire 16 J' out [15:0] $end
$var parameter 32 K' ROUND $end
$var parameter 32 L' WIF $end
$var parameter 33 M' WII $end
$var parameter 32 N' WOF $end
$var parameter 32 O' WOI $end
$var reg 9 P' ini [8:0] $end
$var reg 17 Q' inr [16:0] $end
$var reg 8 R' outf [7:0] $end
$var reg 8 S' outi [7:0] $end
$var reg 1 !' overflow $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$scope module mult $end
$var wire 16 T' ina [15:0] $end
$var wire 16 U' inb [15:0] $end
$var wire 32 V' res [31:0] $end
$var wire 1 W' overflow $end
$var wire 16 X' out [15:0] $end
$var parameter 32 Y' ROUND $end
$var parameter 32 Z' WIFA $end
$var parameter 32 [' WIFB $end
$var parameter 32 \' WIIA $end
$var parameter 32 ]' WIIB $end
$var parameter 32 ^' WOF $end
$var parameter 32 _' WOI $end
$var parameter 33 `' WRF $end
$var parameter 33 a' WRI $end
$scope module res_zoom $end
$var wire 32 b' in [31:0] $end
$var wire 16 c' out [15:0] $end
$var parameter 32 d' ROUND $end
$var parameter 33 e' WIF $end
$var parameter 33 f' WII $end
$var parameter 32 g' WOF $end
$var parameter 32 h' WOI $end
$var reg 16 i' ini [15:0] $end
$var reg 24 j' inr [23:0] $end
$var reg 8 k' outf [7:0] $end
$var reg 8 l' outi [7:0] $end
$var reg 1 W' overflow $end
$scope begin genblk1 $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module weight_acc_1 $end
$var wire 1 ! clk $end
$var wire 1 % rst $end
$var wire 16 m' weight_acc_data_in [15:0] $end
$var wire 1 L weight_acc_valid_data_in $end
$var wire 1 F weight_acc_valid_in $end
$var parameter 32 n' WEIGHT_ACC_WIDTH $end
$var reg 8 o' counter [7:0] $end
$var reg 8 p' counter_reg [7:0] $end
$var reg 16 q' weight_acc_data_out [15:0] $end
$var reg 1 ' weight_acc_valid_out $end
$scope begin $ivl_for_loop1 $end
$var integer 32 r' i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop2 $end
$var integer 32 s' i [31:0] $end
$upscope $end
$upscope $end
$scope module weight_acc_2 $end
$var wire 1 ! clk $end
$var wire 1 % rst $end
$var wire 16 t' weight_acc_data_in [15:0] $end
$var wire 1 M weight_acc_valid_data_in $end
$var wire 1 ' weight_acc_valid_in $end
$var parameter 32 u' WEIGHT_ACC_WIDTH $end
$var reg 8 v' counter [7:0] $end
$var reg 8 w' counter_reg [7:0] $end
$var reg 16 x' weight_acc_data_out [15:0] $end
$var reg 1 & weight_acc_valid_out $end
$scope begin $ivl_for_loop1 $end
$var integer 32 y' i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop2 $end
$var integer 32 z' i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100 u'
b100 n'
b1000 h'
b1000 g'
b10000 f'
b10000 e'
b1 d'
b10000 a'
b10000 `'
b1000 _'
b1000 ^'
b1000 ]'
b1000 \'
b1000 ['
b1000 Z'
b1 Y'
b1000 O'
b1000 N'
b1001 M'
b1000 L'
b1 K'
b1000 C'
b1000 B'
b1000 A'
b1000 @'
b0 ?'
b1000 7'
b1000 6'
b1000 5'
b1000 4'
b0 3'
b1001 0'
b1000 /'
b1000 .'
b1000 -'
b1000 ,'
b1000 +'
b1000 *'
b1000 )'
b1000 ('
b1000 ''
b1 &'
b10000 v&
b1000 l&
b1000 k&
b10000 j&
b10000 i&
b1 h&
b10000 e&
b10000 d&
b1000 c&
b1000 b&
b1000 a&
b1000 `&
b1000 _&
b1000 ^&
b1 ]&
b1000 S&
b1000 R&
b1001 Q&
b1000 P&
b1 O&
b1000 G&
b1000 F&
b1000 E&
b1000 D&
b0 C&
b1000 ;&
b1000 :&
b1000 9&
b1000 8&
b0 7&
b1001 4&
b1000 3&
b1000 2&
b1000 1&
b1000 0&
b1000 /&
b1000 .&
b1000 -&
b1000 ,&
b1000 +&
b1 *&
b10000 z%
b1000 p%
b1000 o%
b10000 n%
b10000 m%
b1 l%
b10000 i%
b10000 h%
b1000 g%
b1000 f%
b1000 e%
b1000 d%
b1000 c%
b1000 b%
b1 a%
b1000 W%
b1000 V%
b1001 U%
b1000 T%
b1 S%
b1000 K%
b1000 J%
b1000 I%
b1000 H%
b0 G%
b1000 ?%
b1000 >%
b1000 =%
b1000 <%
b0 ;%
b1001 8%
b1000 7%
b1000 6%
b1000 5%
b1000 4%
b1000 3%
b1000 2%
b1000 1%
b1000 0%
b1000 /%
b1 .%
b10000 ~$
b1000 t$
b1000 s$
b10000 r$
b10000 q$
b1 p$
b10000 m$
b10000 l$
b1000 k$
b1000 j$
b1000 i$
b1000 h$
b1000 g$
b1000 f$
b1 e$
b1000 [$
b1000 Z$
b1001 Y$
b1000 X$
b1 W$
b1000 O$
b1000 N$
b1000 M$
b1000 L$
b0 K$
b1000 C$
b1000 B$
b1000 A$
b1000 @$
b0 ?$
b1001 <$
b1000 ;$
b1000 :$
b1000 9$
b1000 8$
b1000 7$
b1000 6$
b1000 5$
b1000 4$
b1000 3$
b1 2$
b10000 %$
b1000 d#
b1000 c#
b10000 b#
b10000 a#
b1 `#
b10000 ]#
b10000 \#
b1000 [#
b1000 Z#
b1000 Y#
b1000 X#
b1000 W#
b1000 V#
b1 U#
b1000 E#
b1000 D#
b10000 C#
b10000 B#
b1 A#
b10000 >#
b10000 =#
b1000 <#
b1000 ;#
b1000 :#
b1000 9#
b1000 8#
b1000 7#
b1 6#
b10 "#
b100 !#
b10 t"
b100 s"
b1000 i"
b1000 h"
b1001 g"
b1000 f"
b1 e"
b1000 ]"
b1000 \"
b1000 ["
b1000 Z"
b0 Y"
b1000 Q"
b1000 P"
b1000 O"
b1000 N"
b0 M"
b1001 J"
b1000 I"
b1000 H"
b1000 G"
b1000 F"
b1000 E"
b1000 D"
b1000 C"
b1000 B"
b1000 A"
b1 @"
b1000 -"
b1000 ,"
b1001 +"
b1000 *"
b1 )"
b1000 !"
b1000 ~
b1000 }
b1000 |
b0 {
b1000 s
b1000 r
b1000 q
b1000 p
b0 o
b1001 l
b1000 k
b1000 j
b1000 i
b1000 h
b1000 g
b1000 f
b1000 e
b1000 d
b1000 c
b1 b
$end
#0
$dumpvars
b0 z'
b100 y'
bx x'
bx w'
bx v'
b0 t'
b0 s'
b100 r'
bx q'
bx p'
bx o'
b0 m'
b0 l'
b0 k'
b0 j'
b0 i'
b0 c'
b0 b'
b0 X'
0W'
b0 V'
b0 U'
b0 T'
b0 S'
b0 R'
b0 Q'
b0 P'
b0 J'
b0 I'
0H'
b0 G'
b0 F'
b0 E'
b0 D'
b0 >'
b0 ='
0<'
b0 ;'
b0 :'
b0 9'
b0 8'
b0 2'
b0 1'
b0 %'
b0 $'
b0 #'
b0 "'
0!'
b0 ~&
b0 }&
b0 |&
b0 {&
b0 z&
b0 y&
b0 x&
xw&
b0 u&
b0 t&
b0 s&
b0 r&
b0 q&
b0 p&
b0 o&
b0 n&
b0 m&
b0 g&
bx f&
b0 \&
0[&
bx Z&
b0 Y&
bx X&
b0 W&
b0 V&
b0 U&
b0 T&
b0 N&
b0 M&
0L&
b0 K&
b0 J&
b0 I&
b0 H&
b0 B&
b0 A&
0@&
b0 ?&
b0 >&
b0 =&
b0 <&
b0 6&
b0 5&
b0 )&
b0 (&
b0 '&
b0 &&
0%&
b0 $&
b0 #&
b0 "&
b0 !&
b0 ~%
b0 }%
b0 |%
x{%
b0 y%
b0 x%
b0 w%
b0 v%
bx u%
b0 t%
b0 s%
b0 r%
b0 q%
b0 k%
b0 j%
b0 `%
0_%
b0 ^%
b0 ]%
b0 \%
b0 [%
b0 Z%
b0 Y%
b0 X%
b0 R%
b0 Q%
0P%
b0 O%
b0 N%
b0 M%
b0 L%
b0 F%
b0 E%
0D%
b0 C%
b0 B%
b0 A%
b0 @%
b0 :%
b0 9%
b0 -%
b0 ,%
b0 +%
b0 *%
0)%
b0 (%
b0 '%
b0 &%
b0 %%
b0 $%
b0 #%
b0 "%
x!%
b0 }$
b0 |$
bx {$
b0 z$
b0 y$
b0 x$
b0 w$
b0 v$
b0 u$
b0 o$
bx n$
b0 d$
0c$
bx b$
b0 a$
bx `$
b0 _$
b0 ^$
b0 ]$
b0 \$
b0 V$
b0 U$
0T$
b0 S$
b0 R$
b0 Q$
b0 P$
b0 J$
b0 I$
0H$
b0 G$
b0 F$
b0 E$
b0 D$
b0 >$
b0 =$
b0 1$
b0 0$
b0 /$
b0 .$
0-$
b0 ,$
b0 +$
b0 *$
b0 )$
b0 ($
b0 '$
b0 &$
b0 $$
b0 #$
bx "$
b0 !$
bx ~#
b0 }#
b0 |#
b0 {#
b0 z#
0y#
0x#
0w#
0v#
0u#
0t#
b0 s#
b0 r#
xq#
b0 p#
b0 o#
bx n#
bx m#
b0 l#
b0 k#
bx j#
bx i#
b0 h#
b0 g#
b0 f#
b0 e#
b0 _#
bx ^#
b0 T#
0S#
bx R#
b11 Q#
bx P#
b0 O#
bx N#
b0 M#
b11 L#
bx K#
0J#
b0 I#
b0 H#
b0 G#
b0 F#
b0 @#
bx ?#
b0 5#
04#
bx 3#
b11 2#
bx 1#
b0 0#
bx /#
b0 .#
b11 -#
bx ,#
0+#
b100 *#
bx )#
0(#
b0 '#
bx &#
x%#
bx $#
bx ##
b0 ~"
b0 }"
b100 |"
bx {"
0z"
b0 y"
bx x"
xw"
bx v"
bx u"
b0 r"
b0 q"
b0 p"
b0 o"
b0 n"
b0 m"
b0 l"
b0 k"
b0 j"
b0 d"
b0 c"
0b"
b0 a"
b0 `"
b0 _"
b0 ^"
b0 X"
bx W"
0V"
b0 U"
b0 T"
b0 S"
b0 R"
b0 L"
b0 K"
b0 ?"
b0 >"
b0 ="
b0 <"
0;"
b0 :"
bx 9"
bx 8"
bx 7"
bx 6"
bx 5"
b0 4"
b0 3"
bx 2"
b0 1"
b0 0"
b0 /"
b0 ."
b0 ("
b0 '"
0&"
b0 %"
b0 $"
b0 #"
b0 ""
b0 z
bx y
0x
b0 w
b0 v
b0 u
b0 t
b0 n
b0 m
b0 a
b0 `
b0 _
b0 ^
0]
b0 \
bx [
bx Z
bx Y
bx X
bx W
b0 V
b0 U
b0 T
b0 S
b0 R
b0 Q
b0 P
b0 O
b0 N
0M
0L
0K
0J
b0 I
b0 H
b0 G
0F
b0 E
0D
bx C
bx B
bx A
x@
x?
b0 >
bx =
bx <
z;
x:
09
08
07
b0 6
b0 5
04
03
02
01
00
b0 /
b0 .
0-
0,
0+
0*
bx )
bx (
z'
x&
1%
0$
0#
b0 "
1!
$end
#5000
0!
#10000
0%
b0 w'
b0 v'
0&
b0 (
b0 m#
b0 {$
b0 x'
b0 p'
b0 o'
0'
b0 )
b0 n#
b0 "$
b0 q'
0:
b0 Z&
b0 f&
b0 <
b0 $#
b0 j#
b0 u%
b0 X&
b0 ##
b0 &#
b0 )#
0;
b0 b$
b0 n$
b0 =
b0 v"
b0 i#
b0 ~#
b0 `$
b0 u"
b0 x"
b0 {"
b0 N#
b0 /#
b0 7"
b0 R#
b0 ^#
b0 B
b0 6"
b0 K#
b0 P#
b0 Y
b0 3#
b0 ?#
b0 C
b0 X
b0 ,#
b0 1#
b100 z'
b100 y'
b100 s'
b100 r'
b100 *#
b100 |"
1!
#15000
0!
#20000
1z"
1J
1J#
1+#
18
b1 E
b1 o"
b10100000000000000000 "
b10100000000000000000 n"
0@
0?
0{%
0q#
b100 y'
b100 r'
0%#
b100 *#
0w"
b100 |"
1!
#25000
0!
#30000
1(#
0z"
1K
0J
18
1D
b10110000000000000000 "
b10110000000000000000 n"
b1 u"
b1 {"
0!%
0w&
b100 y'
b100 r'
b100 *#
b100 |"
1!
#35000
0!
#40000
1z"
0(#
1J
0K
18
0D
b10100000000000000000 "
b10100000000000000000 n"
b1 ##
b1 )#
b100 y'
b100 r'
b100 *#
b100 |"
1!
#45000
0!
#50000
b100000000 '#
1(#
0z"
1K
b100000000 O
b100000000 ~"
0J
18
b100000000 >
b100000000 p"
1D
b10110000000100000000 "
b10110000000100000000 n"
b10 u"
b10 {"
b100 y'
b100 r'
b100 *#
b100 |"
1!
#55000
0!
#60000
b100000000 y"
1z"
b0 '#
0(#
1J
b100000000 N
b100000000 r"
0K
b0 O
b0 ~"
18
0D
b10100000000100000000 "
b10100000000100000000 n"
b10 ##
b10 )#
b100 y'
b100 r'
b100 *#
b100 |"
1!
#65000
0!
#70000
1(#
b0 y"
0z"
1K
0J
b0 N
b0 r"
18
b0 >
b0 p"
1D
b10110000000000000000 "
b10110000000000000000 n"
b11 u"
b11 {"
b100 y'
b100 r'
b100 *#
b100 |"
1!
#75000
0!
#80000
b100000000 y"
1z"
0(#
1J
b100000000 N
b100000000 r"
0K
18
b100000000 >
b100000000 p"
0D
b10100000000100000000 "
b10100000000100000000 n"
b11 ##
b11 )#
b100 y'
b100 r'
b100 *#
b100 |"
1!
#85000
0!
#90000
b100000000 '#
1(#
b0 y"
0z"
1K
b100000000 O
b100000000 ~"
0J
b0 N
b0 r"
18
1D
b10110000000100000000 "
b10110000000100000000 n"
b100 u"
b0 {"
b100 y'
b100 r'
b100 *#
b100 |"
1!
#95000
0!
#100000
b0 '#
0(#
1L
b10010110 R
b10010110 m'
0K
b0 O
b0 ~"
17
08
b10010110 >
b10010110 p"
0D
b11000000000010010110 "
b11000000000010010110 n"
b100 ##
b0 )#
b100 y'
b100 r'
b100 *#
b100 |"
1!
#105000
0!
#110000
1M
b10100110 S
b10100110 t'
b0 R
b0 m'
0L
17
b10100110 >
b10100110 p"
1D
b11010000000010100110 "
b11010000000010100110 n"
b1 o'
b100 y'
b100 r'
b100 *#
b100 |"
1!
#115000
0!
#120000
1L
b10001010 R
b10001010 m'
b0 S
b0 t'
0M
17
b10001010 >
b10001010 p"
0D
b11000000000010001010 "
b11000000000010001010 n"
b1 v'
b100 y'
b100 r'
b100 *#
b100 |"
1!
#125000
0!
#130000
1M
b1111111111010110 S
b1111111111010110 t'
b0 R
b0 m'
0L
17
b1111111111010110 >
b1111111111010110 p"
1D
b11011111111111010110 "
b11011111111111010110 n"
b1 p'
b10 o'
b100 y'
b100 r'
b100 *#
b100 |"
1!
#135000
0!
#140000
1L
b1101010 R
b1101010 m'
b0 S
b0 t'
0M
17
b1101010 >
b1101010 p"
0D
b11000000000001101010 "
b11000000000001101010 n"
b1 w'
b10 v'
b100 y'
b100 r'
b100 *#
b100 |"
1!
#145000
0!
#150000
1M
b0 R
b0 m'
0L
17
b0 >
b0 p"
1D
b11010000000000000000 "
b11010000000000000000 n"
b10 p'
b11 o'
b100 y'
b100 r'
b100 *#
b100 |"
1!
#155000
0!
#160000
1L
b1111111110101000 R
b1111111110101000 m'
0M
17
b1111111110101000 >
b1111111110101000 p"
0D
b11001111111110101000 "
b11001111111110101000 n"
b10 w'
b11 v'
b100 y'
b100 r'
b100 *#
b100 |"
1!
#165000
0!
#170000
1M
b0 R
b0 m'
0L
17
b0 >
b0 p"
1D
b11010000000000000000 "
b11010000000000000000 n"
b11 p'
b100 o'
b100 y'
b100 r'
b100 *#
b100 |"
1!
#175000
0!
#180000
b100101 G
b100101 T
0M
19
07
b100101 >
b100101 p"
0D
1F
b10011100000000000100101 "
b10011100000000000100101 n"
b11 w'
b100 v'
b100 y'
b100 r'
b100 *#
b100 |"
1!
#185000
0!
#190000
b1111111111011000 G
b1111111111011000 T
19
b1111111111011000 >
b1111111111011000 p"
11
b110011101111111111011000 "
b110011101111111111011000 n"
b10010110 *$
b10010110 )
b10010110 n#
b10010110 "$
b10010110 q'
b11 o'
1'
bx 7"
b100101 A
b100101 Z
b100101 2"
b100101 Y
b100 y'
b100 r'
b100 *#
b100 |"
1!
#195000
0!
#200000
b0 G
b0 T
b10001010 )$
b10001010 a$
09
b0 >
b0 p"
b11 E
b11 o"
10
0F
b101110000000000000000000 "
b101110000000000000000000 n"
b10001010 *$
b10010110 "&
b10100110 &%
b10100110 (
b10100110 m#
b10100110 {$
b10100110 x'
b11 v'
1&
b10001010 )
b10001010 n#
b10001010 "$
b10001010 q'
b10 o'
b11 u"
b1 x"
1;
b1111111111011000 A
b1111111111011000 Z
b1111111111011000 2"
b1111111111011000 Y
b100101 8"
b100101 7"
1{%
b10010110 s#
b10010110 ($
b10010110 w%
1q#
b100 y'
b100 r'
b100 *#
1w"
b100 |"
1!
#205000
0!
#210000
00
b100110000000000000000000 "
b100110000000000000000000 n"
b1111111111010110 %%
b1111111111010110 ]%
b1111111111010110 &%
b10010110 !&
b10010110 Y&
b10100110 |&
b1111111111010110 (
b1111111111010110 m#
b1111111111010110 {$
b1111111111010110 x'
b10 v'
0'
b11 ##
b1 &#
1:
b10 u"
b10 x"
b10001010 s#
b10001010 ($
b10001010 w%
1y#
1w#
b10100110 r#
b10100110 $%
b10100110 s&
1!%
b10010110 ~%
1w&
b100 y'
b100 r'
1%#
b100 *#
b100 |"
1!
#215000
0!
#220000
1F
b110110000000000000000000 "
b110110000000000000000000 n"
b10010110 y%
b10010110 &&
b10010110 N&
b10010110 V&
b10001010 $$
b10001010 .$
b10001010 V$
b10001010 ^$
b10010110 U&
b10001010 ]$
b11111111 1"
b111111111 ."
b1111111111011000 V
b1111111111011000 ^
b1111111111011000 ("
b11011000 0"
b10010110 $&
b10010110 M&
b10010110 (&
b10010110 5&
b10010110 >&
b10001010 ,$
b10001010 U$
b10001010 0$
b10001010 =$
b10001010 F$
b11111111111011000 /"
b10010110 =&
b10001010 E$
b11111111 %"
b11111111 ""
b11111111111011000 \
b11111111111011000 '"
b1111111111011000 _
b1111111111011000 z
b11011000 $"
b10010110 x%
b10010110 )&
b10010110 6&
b10010110 \&
b10010110 g&
b10010110 o&
b10001010 #$
b10001010 1$
b10001010 >$
b10001010 d$
b10001010 o$
b10001010 w$
b1111111111011000 #"
b10010110 n&
b10001010 v$
b1111111111011000 W
b1111111111011000 [
b1111111111011000 y
b10100110 {&
b10100110 U'
0&
b10 ##
b10 &#
b1001011000000000 Z&
b1001011000000000 f&
b100000000 <
b100000000 $#
b100000000 j#
b100000000 u%
b100000000 X&
b1 u"
b11 x"
b1000101000000000 b$
b1000101000000000 n$
b100000000 =
b100000000 v"
b100000000 i#
b100000000 ~#
b100000000 `$
b10100110 z&
b0 ~%
1-
1+
1u#
0{%
b1111111111010110 r#
b1111111111010110 $%
b1111111111010110 s&
1x#
1v#
b0 s#
b0 ($
b0 w%
0y#
0q#
b100 y'
b100 r'
b100 *#
b100 |"
1!
#225000
0!
#230000
19
01
b10111100000000000000000 "
b10111100000000000000000 n"
b11111111 [%
b111111111 X%
b1111111111010110 }$
b1111111111010110 *%
b1111111111010110 R%
b11010110 Z%
b10100110 u&
b10100110 "'
b10100110 J'
b10100110 R'
b11111111111010110 Y%
b10100110 Q'
b100101 4"
b100101 <"
b100101 d"
b100101 l"
b0 (&
b0 5&
b0 >&
b0 W&
b0 T&
b10001010 y%
b10001010 &&
b10001010 N&
b10001010 V&
b11111111 C%
b11111111 @%
b11111111111010110 (%
b11111111111010110 Q%
b1111111111010110 ,%
b1111111111010110 9%
b11010110 B%
b0 1"
b0 ."
b1101110 V
b1101110 ^
b1101110 ("
b1101110 0"
b10100110 ~&
b10100110 I'
b10100110 $'
b10100110 1'
b10100110 :'
b100101 k"
b0 =&
b10001010 U&
b1111111111010110 A%
b1101110 /"
b10100110 9'
b100101 :"
b100101 c"
b100101 ="
b100101 X"
b100101 `"
b0 x%
b0 )&
b0 6&
b0 \&
b0 g&
b0 o&
b10001010 $&
b10001010 M&
b10001010 '&
b10001010 B&
b10001010 J&
b11111111 t%
b1111111111111111 q%
b1111111111010110 |$
b1111111111010110 -%
b1111111111010110 :%
b1111111111010110 `%
b1111111111010110 k%
b11010110 s%
b1101110 \
b1101110 '"
b10010110 `
b10010110 m
b10010110 v
b10100110 t&
b10100110 %'
b10100110 2'
b10100110 X'
b10100110 c'
b10100110 k'
b100101 _"
b1101010 *$
b0 "&
b0 n&
b0 G#
b10001010 I&
b111111111111111111010110 r%
b10010110 u
b10100110 j'
b100101 5"
b100101 9"
b100101 W"
b1101010 )
b1101010 n#
b1101010 "$
b1101010 q'
b1 o'
1'
b1 ##
b11 &#
b0 Z&
b0 f&
b0 <
b0 $#
b0 j#
b0 u%
b0 X&
b0 u"
b0 x"
b11111111111111111111111110001000 3#
b11111111111111111111111110001000 ?#
b1111111111011000 C
b1111111111011000 X
b1111111111011000 ,#
b1111111111011000 1#
1@
b10001010 {#
b10001010 '$
b10001010 v%
b10001010 #&
b10001010 A&
b11111111111111111101011000000000 ^%
b11111111111111111101011000000000 j%
b100000000 }#
b100000000 &$
b100000000 y$
b100000000 \%
b0 r#
b0 $%
b0 s&
0x#
0!%
b10010110 /
b10010110 U
b10010110 a
b10010110 n
b10010110 p#
b10010110 }%
b1010011000000000 V'
b1010011000000000 b'
b100000000 |#
b100000000 |%
b100000000 q&
b100000000 T'
0-
b0 z&
1,
1*
1t#
0w&
b100 y'
b100 r'
b100 *#
b100 |"
1!
#235000
0!
#240000
b11111111 _$
b111111111 \$
b1111111110101000 $$
b1111111110101000 .$
b1111111110101000 V$
b10101000 ^$
b11111111110101000 ]$
b11111111 G$
b11111111 D$
b11111111110101000 ,$
b11111111110101000 U$
b1111111110101000 0$
b1111111110101000 =$
b10101000 F$
b1111111110101000 E$
b11111111 x$
b1111111111111111 u$
b1111111110101000 #$
b1111111110101000 1$
b1111111110101000 >$
b1111111110101000 d$
b1111111110101000 o$
b10101000 w$
b111111111111111110101000 v$
b10100000 G
b10100000 T
b11111111111111111010100000000000 b$
b11111111111111111010100000000000 n$
b1111111110101000 )$
b1111111110101000 a$
19
b10100000 >
b10100000 p"
10
0F
b1111100000000010100000 "
b1111100000000010100000 n"
b1 W&
b1 T&
b100100000 y%
b100100000 &&
b100100000 N&
b100000 V&
b11111111 S'
b111111111 P'
b100100000 U&
b100100000 $&
b100100000 M&
b10010110 (&
b10010110 5&
b10010110 >&
b11001011 4"
b11001011 <"
b11001011 d"
b11001011 l"
b1100010 V
b1100010 ^
b1100010 ("
b1100010 0"
b0 $'
b0 1'
b0 :'
b1111111111010110 u&
b1111111111010110 "'
b1111111111010110 J'
b11010110 R'
b10010110 =&
b11001011 k"
b1100010 /"
b0 9'
b11111111111010110 Q'
b10010110 x%
b10010110 )&
b10010110 6&
b10010110 \&
b10010110 g&
b10010110 o&
b1 .#
b1 5#
b1 @#
b1 H#
b11001011 :"
b11001011 c"
b10100110 >"
b10100110 K"
b10100110 T"
b1100010 \
b1100010 '"
b10001010 `
b10001010 m
b10001010 v
b0 t&
b0 %'
b0 2'
b0 X'
b0 c'
b0 k'
b11111111 G'
b11111111 D'
b11111111111010110 ~&
b11111111111010110 I'
b1111111111010110 #'
b1111111111010110 >'
b11010110 F'
b1111111110101000 *$
b10010110 n&
b1 G#
1#
1z"
b10100110 S"
b10001010 u
b0 j'
b1111111111010110 E'
b1101010 "&
b0 &%
b0 |&
b0 (
b0 m#
b0 {$
b0 x'
b1 v'
1&
b1111111110101000 )
b1111111110101000 n#
b1111111110101000 "$
b1111111110101000 q'
b0 o'
b0 ##
b0 &#
b1001011000000000 Z&
b1001011000000000 f&
b100000000 <
b100000000 $#
b100000000 j#
b100000000 u%
b100000000 X&
0;
b101001010 3#
b101001010 ?#
b1101110 C
b1101110 X
b1101110 ,#
b1101110 1#
b0 A
b0 Z
b0 2"
b0 Y
b1101111 R#
b1101111 ^#
b100101 B
b100101 6"
b100101 K#
b100101 P#
b1111111111011000 8"
b1111111111011000 7"
1?
13
b1 /#
b10100110 .
b10100110 3"
b10100110 ?"
b10100110 L"
b10100110 o#
b10100110 y&
b100000000 x&
0,
b10001010 /
b10001010 U
b10001010 a
b10001010 n
b10001010 p#
b10001010 }%
b0 V'
b0 b'
b0 |#
b0 |%
b0 q&
b0 T'
1{%
b1111111111010110 z#
b1111111111010110 #%
b1111111111010110 r&
b1111111111010110 }&
b1111111111010110 ='
b100000000 "%
b1101010 s#
b1101010 ($
b1101010 w%
1q#
b100 y'
b100 r'
b100 *#
0w"
b100 |"
1!
#245000
0!
#250000
b0 G
b0 T
09
b0 >
b0 p"
00
11
b100110000000000000000000 "
b100110000000000000000000 n"
b0 [%
b0 X%
b0 }$
b0 *%
b0 R%
b0 Z%
b0 Y%
b0 S'
b0 P'
b1111100 u&
b1111100 "'
b1111100 J'
b1111100 R'
b0 C%
b0 @%
b0 (%
b0 Q%
b0 ,%
b0 9%
b0 B%
b1101010 (&
b1101010 5&
b1101010 >&
b1111100 Q'
b0 W&
b0 T&
b1101010 y%
b1101010 &&
b1101010 N&
b1101010 V&
b0 A%
b1101010 =&
b11111000 V
b11111000 ^
b11111000 ("
b11111000 0"
b1111100 ~&
b1111100 I'
b10100110 $'
b10100110 1'
b10100110 :'
b11111111 m"
b111111111 j"
b1111111111111011 4"
b1111111111111011 <"
b1111111111111011 d"
b11111011 l"
b1101010 U&
b0 t%
b0 q%
b0 |$
b0 -%
b0 :%
b0 `%
b0 k%
b0 s%
b1101010 x%
b1101010 )&
b1101010 6&
b1101010 \&
b1101010 g&
b1101010 o&
b11111000 /"
b10100110 9'
b11111111111111011 k"
b1101110 y"
b10 M#
b10 T#
b10 _#
b10 g#
b1101010 $&
b1101010 M&
b0 '&
b0 B&
b0 J&
b0 r%
b1101010 n&
b1 w
b1 t
b11111000 \
b11111000 '"
b100100000 `
b100100000 m
b100000 v
b10100110 t&
b10100110 %'
b10100110 2'
b10100110 X'
b10100110 c'
b10100110 k'
b11111111 U"
b11111111 R"
b11111111111111011 :"
b11111111111111011 c"
b1111111111010110 >"
b1111111111010110 K"
b11010110 T"
1$
b100101 '#
1(#
b100101 I
b100101 }"
b1101110 H
b1101110 q"
b100101 Q
b1101110 P
b10 f#
b0 I&
b0 ^%
b0 j%
b0 %%
b0 ]%
b110101000000000 Z&
b110101000000000 f&
b1101010 !&
b1101010 Y&
b100100000 u
b10100110 j'
b1111111111010110 S"
b0 v'
b0 )
b0 n#
b0 "$
b0 q'
0'
0:
b1 u"
b1 {"
12
b100101 5
b100101 O#
b10 /#
b1101110 6
b1101110 0#
b1001100001 R#
b1001100001 ^#
b11001011 B
b11001011 6"
b11001011 K#
b11001011 P#
b0 8"
b0 7"
b100100110 3#
b100100110 ?#
b1100010 C
b1100010 X
b1100010 ,#
b1100010 1#
b10100000 A
b10100000 Z
b10100000 2"
b10100000 Y
b0 {#
b0 '$
b0 v%
b0 #&
b0 A&
b1111111110101000 s#
b1111111110101000 ($
b1111111110101000 w%
1y#
0w#
1!%
b100100000 /
b100100000 U
b100100000 a
b100100000 n
b100100000 p#
b100100000 }%
b1010011000000000 V'
b1010011000000000 b'
b100000000 |#
b100000000 |%
b100000000 q&
b100000000 T'
b1101010 ~%
b1111111111010110 .
b1111111111010110 3"
b1111111111010110 ?"
b1111111111010110 L"
b1111111111010110 o#
b1111111111010110 y&
b0 x&
1w&
b100 y'
b100 r'
0%#
b100 *#
b100 |"
1!
#255000
0!
#260000
b0 _$
b0 \$
b0 $$
b0 .$
b0 V$
b0 ^$
b0 ]$
b0 $'
b0 1'
b0 :'
b0 G$
b0 D$
b0 ,$
b0 U$
b0 0$
b0 =$
b0 F$
b0 m"
b0 j"
b10100001 4"
b10100001 <"
b10100001 d"
b10100001 l"
b10100000 V
b10100000 ^
b10100000 ("
b10100000 0"
b0 u&
b0 "'
b0 J'
b0 R'
b0 9'
b0 E$
b10100001 k"
b10100000 /"
b0 %"
b0 ""
b10100000 _
b10100000 z
b10100000 $"
b0 Q'
b0 t&
b0 %'
b0 2'
b0 X'
b0 c'
b0 k'
b0 x$
b0 u$
b0 #$
b0 1$
b0 >$
b0 d$
b0 o$
b0 w$
b11 .#
b11 5#
b11 @#
b11 H#
b0 M#
b0 T#
b0 _#
b0 g#
b11001011 '#
b1100010 y"
b0 U"
b0 R"
b10100001 :"
b10100001 c"
b1111100 >"
b1111100 K"
b1111100 T"
b0 w
b0 t
b10100000 \
b10100000 '"
b0 `
b0 m
b0 v
b10100000 #"
b0 G'
b0 D'
b0 ~&
b0 I'
b0 #'
b0 >'
b0 F'
b0 j'
b0 v$
b11 G#
b0 f#
b11001011 Q
b1100010 P
b11001011 I
b11001011 }"
b1100010 H
b1100010 q"
b1111100 S"
b0 u
b10100000 W
b10100000 [
b10100000 y
b0 E'
b0 V'
b0 b'
b0 {&
b0 U'
0&
b1 ##
b1 )#
b1 x"
b0 b$
b0 n$
b0 =
b0 v"
b0 i#
b0 ~#
b0 `$
1;
b10 {"
b1011101000 3#
b1011101000 ?#
b11111000 C
b11111000 X
b11111000 ,#
b11111000 1#
b11111111111111111111111111110001 R#
b11111111111111111111111111110001 ^#
b1111111111111011 B
b1111111111111011 6"
b1111111111111011 K#
b1111111111111011 P#
b100 /#
b1100010 6
b1100010 0#
b11001011 5
b11001011 O#
b1111100 .
b1111100 3"
b1111100 ?"
b1111100 L"
b1111100 o#
b1111100 y&
b100000000 x&
b0 /
b0 U
b0 a
b0 n
b0 p#
b0 }%
b0 ~%
1-
0+
0u#
0{%
b0 z#
b0 #%
b0 r&
b0 }&
b0 ='
1x#
0v#
b0 s#
b0 ($
b0 w%
0y#
0q#
b100 y'
b100 r'
b100 *#
1w"
b100 |"
1!
#265000
0!
#270000
b1111 y%
b1111 &&
b1111 N&
b1111 V&
b11111111 _$
b111111111 \$
b1111111111011010 $$
b1111111111011010 .$
b1111111111011010 V$
b11011010 ^$
b1111 U&
b11111111111011010 ]$
b1111 $&
b1111 M&
b1111 (&
b1111 5&
b1111 >&
b11111111 G$
b11111111 D$
b11111111111011010 ,$
b11111111111011010 U$
b1111111111011010 0$
b1111111111011010 =$
b11011010 F$
b0 4"
b0 <"
b0 d"
b0 l"
b1111 =&
b1111111111011010 E$
b0 k"
b0 ="
b0 X"
b0 `"
b1111 x%
b1111 )&
b1111 6&
b1111 \&
b1111 g&
b1111 o&
b11111111 x$
b1111111111111111 u$
b1111111111011010 #$
b1111111111011010 1$
b1111111111011010 >$
b1111111111011010 d$
b1111111111011010 o$
b11011010 w$
b0 '#
b11111000 y"
b10 M#
b10 T#
b10 _#
b10 g#
b0 :"
b0 c"
b0 >"
b0 K"
b0 T"
b0 _"
b1111 n&
b111111111111111111011010 v$
b0 I
b0 }"
b11111000 H
b11111000 q"
b0 Q
b11111000 P
b10 f#
b0 S"
b0 5"
b0 9"
b0 W"
b1 &#
b111101010010 Z&
b111101010010 f&
b100101 <
b100101 $#
b100101 j#
b100101 u%
b100101 X&
1:
b10 )#
b10 x"
b11111111111111111101101000110000 b$
b11111111111111111101101000110000 n$
b1101110 =
b1101110 v"
b1101110 i#
b1101110 ~#
b1101110 `$
b11 {"
b1 N#
b0 5
b0 O#
b1000 /#
b11111000 6
b11111000 0#
b111100011 R#
b111100011 ^#
b10100001 B
b10100001 6"
b10100001 K#
b10100001 P#
0@
b0 }#
b0 &$
b0 y$
b0 \%
1w#
0x#
0!%
0-
b0 .
b0 3"
b0 ?"
b0 L"
b0 o#
b0 y&
1,
0*
0t#
0w&
b100 y'
b100 r'
1%#
b100 *#
b100 |"
1!
#275000
0!
#280000
b1111111111011110 $$
b1111111111011110 .$
b1111111111011110 V$
b11011110 ^$
b11111111111011110 ]$
b1010100 (&
b1010100 5&
b1010100 >&
b11111111111011110 ,$
b11111111111011110 U$
b1111111111011110 0$
b1111111111011110 =$
b11011110 F$
b10101111 V
b10101111 ^
b10101111 ("
b10101111 0"
b0 W&
b0 T&
b101110 y%
b101110 &&
b101110 N&
b101110 V&
b1010100 =&
b1111111111011110 E$
b10101111 /"
b101110 U&
b1010100 x%
b1010100 )&
b1010100 6&
b1010100 \&
b1010100 g&
b1010100 o&
b1111111111011110 #$
b1111111111011110 1$
b1111111111011110 >$
b1111111111011110 d$
b1111111111011110 o$
b11011110 w$
b10100001 '#
b10101111 \
b10101111 '"
b1111 `
b1111 m
b1111 v
b11111111 K&
b11111111 H&
b101110 $&
b101110 M&
b1111111111011010 '&
b1111111111011010 B&
b11011010 J&
b1010100 n&
b111111111111111111011110 v$
0#
b0 y"
0z"
b10100001 Q
b0 P
b10100001 I
b10100001 }"
b0 H
b0 q"
b1111 u
b1111111111011010 I&
b10 &#
b101010000001110 Z&
b101010000001110 f&
b11001011 <
b11001011 $#
b11001011 j#
b11001011 u%
b11001011 X&
b11 )#
b11 x"
b11111111111111111101111001010000 b$
b11111111111111111101111001010000 n$
b1100010 =
b1100010 v"
b1100010 i#
b1100010 ~#
b1100010 `$
b0 {"
0?
b0 6
b0 0#
03
b10 N#
b10100001 5
b10100001 O#
0,
b1111 /
b1111 U
b1111 a
b1111 n
b1111 p#
b1111 }%
b100101 |#
b100101 |%
b100101 q&
b100101 T'
1+
1u#
b0 "%
1v#
b1111111111011010 {#
b1111111111011010 '$
b1111111111011010 v%
b1111111111011010 #&
b1111111111011010 A&
b1101110 }#
b1101110 &$
b1101110 y$
b1101110 \%
b100 y'
b100 r'
b100 *#
b100 |"
1!
#285000
0!
#290000
0J#
0+#
b10 E
b10 o"
01
b100000000000000000000 "
b100000000000000000000 n"
b11111111 W&
b111111111 T&
b1111111110101011 $$
b1111111110101011 .$
b1111111110101011 V$
b10101011 ^$
b11111111110101011 ]$
b0 (&
b0 5&
b0 >&
b11111111110101011 ,$
b11111111110101011 U$
b1111111110101011 0$
b1111111110101011 =$
b10101011 F$
b1111111111011110 y%
b1111111111011110 &&
b1111111111011110 N&
b11011110 V&
b11001110 V
b11001110 ^
b11001110 ("
b11001110 0"
b0 =&
b1111111110101011 E$
b11111111111011110 U&
b11001110 /"
b0 x%
b0 )&
b0 6&
b0 \&
b0 g&
b0 o&
b1111111110101011 #$
b1111111110101011 1$
b1111111110101011 >$
b1111111110101011 d$
b1111111110101011 o$
b10101011 w$
b0 '#
b10 .#
b10 5#
b10 @#
b10 H#
b11111111111011110 $&
b11111111111011110 M&
b1111111111011110 '&
b1111111111011110 B&
b11011110 J&
b11001110 \
b11001110 '"
b101110 `
b101110 m
b101110 v
b0 n&
b111111111111111110101011 v$
b0 I
b0 }"
b0 Q
0$
0(#
b10 G#
b1111111111011110 I&
b101110 u
b11 &#
b0 Z&
b0 f&
b0 <
b0 $#
b0 j#
b0 u%
b0 X&
b0 )#
b0 u"
b0 x"
b11111111111111111010101011000000 b$
b11111111111111111010101011000000 n$
b11111000 =
b11111000 v"
b11111000 i#
b11111000 ~#
b11111000 `$
b0 5
b0 O#
02
b1000001101 3#
b1000001101 ?#
b10101111 C
b10101111 X
b10101111 ,#
b10101111 1#
1@
b1111111111011110 {#
b1111111111011110 '$
b1111111111011110 v%
b1111111111011110 #&
b1111111111011110 A&
b1100010 }#
b1100010 &$
b1100010 y$
b1100010 \%
b1101110 "%
b101110 /
b101110 U
b101110 a
b101110 n
b101110 p#
b101110 }%
b11001011 |#
b11001011 |%
b11001011 q&
b11001011 T'
b100101 x&
1*
1t#
b100 y'
b100 r'
b100 *#
b100 |"
1!
#295000
0!
#300000
b1000011 (&
b1000011 5&
b1000011 >&
b1111110 V
b1111110 ^
b1111110 ("
b1111110 0"
b1111111111101110 y%
b1111111111101110 &&
b1111111111101110 N&
b11101110 V&
b1000011 =&
b1111110 /"
b11111111111101110 U&
b1000011 x%
b1000011 )&
b1000011 6&
b1000011 \&
b1000011 g&
b1000011 o&
b0 M#
b0 T#
b0 _#
b0 g#
b11111111 w
b11111111 t
b1111110 \
b1111110 '"
b1111111111011110 `
b1111111111011110 m
b11011110 v
b11111111111101110 $&
b11111111111101110 M&
b1111111110101011 '&
b1111111110101011 B&
b10101011 J&
b1000011 n&
b0 f#
1#
1z"
b10101111 P
b1111111111011110 u
b1111111110101011 I&
b0 ##
b0 &#
b100001010101010 Z&
b100001010101010 f&
b10100001 <
b10100001 $#
b10100001 j#
b10100001 u%
b10100001 X&
0;
b1001101010 3#
b1001101010 ?#
b11001110 C
b11001110 X
b11001110 ,#
b11001110 1#
b0 R#
b0 ^#
b0 B
b0 6"
b0 K#
b0 P#
1?
13
b10101111 6
b10101111 0#
b11001011 x&
b1111111111011110 /
b1111111111011110 U
b1111111111011110 a
b1111111111011110 n
b1111111111011110 p#
b1111111111011110 }%
b0 |#
b0 |%
b0 q&
b0 T'
b1100010 "%
b1111111110101011 {#
b1111111110101011 '$
b1111111110101011 v%
b1111111110101011 #&
b1111111110101011 A&
b11111000 }#
b11111000 &$
b11111000 y$
b11111000 \%
b100 y'
b100 r'
b100 *#
0w"
b100 |"
1!
#305000
0!
#310000
b0 W&
b0 T&
b1000011 y%
b1000011 &&
b1000011 N&
b1000011 V&
b10001110 V
b10001110 ^
b10001110 ("
b10001110 0"
b1000011 U&
b10001110 /"
b1 .#
b1 5#
b1 @#
b1 H#
b0 K&
b0 H&
b1000011 $&
b1000011 M&
b0 '&
b0 B&
b0 J&
b10001110 \
b10001110 '"
b1111111111101110 `
b1111111111101110 m
b11101110 v
1$
1(#
b11001110 P
b1 G#
b0 I&
b1111111111101110 u
0:
b1 u"
b1 {"
12
b11001110 6
b11001110 0#
b101111010 3#
b101111010 ?#
b1111110 C
b1111110 X
b1111110 ,#
b1111110 1#
b0 {#
b0 '$
b0 v%
b0 #&
b0 A&
0w#
b11111000 "%
b1111111111101110 /
b1111111111101110 U
b1111111111101110 a
b1111111111101110 n
b1111111111101110 p#
b1111111111101110 }%
b10100001 |#
b10100001 |%
b10100001 q&
b10100001 T'
b0 x&
b100 y'
b100 r'
0%#
b100 *#
b100 |"
1!
#315000
0!
#320000
b10100000 V
b10100000 ^
b10100000 ("
b10100000 0"
b10100000 /"
b10 .#
b10 5#
b10 @#
b10 H#
b0 w
b0 t
b10100000 \
b10100000 '"
b0 `
b0 m
b0 v
b10 G#
b1111110 P
b0 u
b1 ##
b1 )#
b10 u"
b10 {"
b110101010 3#
b110101010 ?#
b10001110 C
b10001110 X
b10001110 ,#
b10001110 1#
b1111110 6
b1111110 0#
b10100001 x&
b0 /
b0 U
b0 a
b0 n
b0 p#
b0 }%
0+
0u#
0v#
b100 y'
b100 r'
b100 *#
b100 |"
1!
#325000
0!
#330000
b10001110 P
b10 ##
b10 )#
b11 u"
b11 {"
b10001110 6
b10001110 0#
0@
0*
0t#
b100 y'
b100 r'
b100 *#
b100 |"
1!
#335000
0!
#340000
b0 P
0#
0z"
b11 ##
b11 )#
b100 u"
b0 {"
0?
b0 6
b0 0#
03
b100 y'
b100 r'
b100 *#
b100 |"
1!
#345000
0!
#350000
0$
0(#
b100 ##
b0 )#
02
b100 y'
b100 r'
b100 *#
b100 |"
1!
#355000
0!
#360000
b100 y'
b100 r'
b100 *#
b100 |"
1!
#365000
0!
#370000
b100 y'
b100 r'
b100 *#
b100 |"
1!
#375000
0!
#380000
b100 y'
b100 r'
b100 *#
b100 |"
1!
#385000
0!
#390000
b100 y'
b100 r'
b100 *#
b100 |"
1!
#395000
0!
#400000
b100 y'
b100 r'
b100 *#
b100 |"
1!
#400001
